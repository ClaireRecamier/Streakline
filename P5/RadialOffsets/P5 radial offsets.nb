(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    318219,       6664]
NotebookOptionsPosition[    310954,       6546]
NotebookOutlinePosition[    311413,       6564]
CellTagsIndexPosition[    311370,       6561]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Radial Offset", "Title",
 CellChangeTimes->{{3.837515145501685*^9, 
  3.8375151496434593`*^9}},ExpressionUUID->"e4b98243-79a1-4406-85d6-\
e103493b3852"],

Cell[CellGroupData[{

Cell["streakline.c ", "Section",
 CellChangeTimes->{{3.83751515794038*^9, 3.837515166172975*^9}, 
   3.837598844338125*^9},ExpressionUUID->"a808d842-cd5e-4209-9d01-\
88a1e29fa072"],

Cell["", "Text",
 CellChangeTimes->{3.83768547797515*^9, 
  3.8376856342733307`*^9},ExpressionUUID->"2fb2072d-dcb9-4611-84db-\
62db66f935ff"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.8376854925972023`*^9, 3.83768563243729*^9},
 CellLabel->
  "In[1565]:=",ExpressionUUID->"c9e7d0d1-4c96-4200-af42-8cc2de38a3a6"],

Cell["\<\
version 8 -  initial positions of ejected stars 
NFW parameters = {417.0 * pow(10,3) * mau * secyr, 36.54 * kpcau, 90.0 * pi / \
180, 1.0, 1.0, 0.94}
offset = 0.2, 0.2
N = 6000, dt = 1,000,000 years, M = 1
Mass of Cluster = 20,000 Msun (no mass loss)
Initial Position of Cluster = 50 kpc,0,0
Initial Velocity of Cluster = 0.5 * centripetal velocity
Rcl = 20 pc = 4.126 * 10^6 AU 
radial offsets = 0.2,0.2\
\>", "Text",
 CellChangeTimes->{{3.837598833763082*^9, 3.837598885031437*^9}, {
   3.837598922731222*^9, 3.837598923073955*^9}, {3.837599130867361*^9, 
   3.837599141855774*^9}, {3.837600233774578*^9, 3.837600260989791*^9}, {
   3.837600298165888*^9, 3.8376003060531883`*^9}, {3.8376008717601023`*^9, 
   3.837600872097293*^9}, {3.8376011720019817`*^9, 3.837601187740798*^9}, {
   3.837685242050293*^9, 3.837685282973896*^9}, {3.837685639962463*^9, 
   3.837685648266923*^9}, 3.8376945776585493`*^9, {3.8382113869511766`*^9, 
   3.838211399715542*^9}},ExpressionUUID->"32884f2a-5a88-4439-94e2-\
2d178b46d36b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"c8cl", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest8.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "6001", ",", 
       RowBox[{"1", ";;", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c8dt", " ", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest8.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"1", ";;", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c8lt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest8.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"3", ";;", "4"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"c8ltv", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest8.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"5", ";;", "6"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c8tt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest8.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"7", ";;", "8"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c8ttv", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest8.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"9", ";;", "10"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8376012480131617`*^9, 3.837601279758271*^9}, {
   3.837601317188931*^9, 3.8376013414997396`*^9}, 3.8376013827191687`*^9, {
   3.837602698211677*^9, 3.8376027525587883`*^9}, {3.8376028309066677`*^9, 
   3.837602831350806*^9}, {3.83820994944735*^9, 3.838209953549143*^9}},
 CellLabel->
  "In[1566]:=",ExpressionUUID->"50838b61-3393-48d2-b298-1dd0b7d92c97"],

Cell[BoxData[
 TemplateBox[{
  "Import", "noelem", 
   "\"The Import element \\\"\\!\\(\\*RowBox[{\\\"6001\\\"}]\\)\\\" is not \
present when importing as \
\\!\\(\\*RowBox[{\\\"\\\\\\\"CSV\\\\\\\"\\\"}]\\).\"", 2, 1566, 64, 
   28385671550893089503, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.838209970677292*^9, 3.8382108562893476`*^9, 
  3.8382112415143833`*^9, 3.8382113058520823`*^9},
 CellLabel->
  "During evaluation of \
In[1566]:=",ExpressionUUID->"a0ed6baf-2e1f-4885-b58c-3e987343c836"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["streakline.chpl", "Section",
 CellChangeTimes->{{3.837598859842279*^9, 
  3.837598861738163*^9}},ExpressionUUID->"52cd9e88-80a5-44f4-bbb9-\
7a5cbe14ead4"],

Cell["\<\
version 21 - initial positions of stars at ejection (using \
c\[CloseCurlyQuote]s radial offsets)
NFW parameters = {417.0 * pow(10,3) * mau * secyr, 36.54 * kpcau, 90.0 * pi / \
180, 1.0, 1.0, 0.94}
offset = 0.2, 0.2
N = 6000, dt = 1,000,000 years, M = 1
Mass of Cluster = 20,000 Msun (no mass loss)
Initial Position of Cluster = 50 kpc,0,0
Initial Velocity of Cluster = 0.5 * centripetal velocity
Rcl = 20 pc = 4.126 * 10^6 AU 
radial offsets = 0.2,0.2\
\>", "Text",
 CellChangeTimes->{{3.8375988816584797`*^9, 3.837598883106412*^9}, {
  3.837599143831366*^9, 3.837599148535224*^9}, {3.837600248966086*^9, 
  3.837600264691908*^9}, {3.837600309077504*^9, 3.837600309765922*^9}, {
  3.8376011740213223`*^9, 3.837601174388998*^9}, {3.838211071221414*^9, 
  3.8382110770816298`*^9}, {3.838211404234549*^9, 
  3.838211408147126*^9}},ExpressionUUID->"ed9ca011-2d83-4277-9a52-\
307bd8800136"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ch21cl", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test21.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "6001", ",", 
       RowBox[{"1", ";;", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch21dt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test21.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"1", ";;", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ch21lt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test21.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"3", ";;", "4"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch21ltv", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test21.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"5", ";;", "6"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch21tt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test21.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"7", ";;", "8"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch21ttv", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test21.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"9", ";;", "10"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.837601674041418*^9, 3.83760173116223*^9}, {
  3.837602767166977*^9, 3.837602795574677*^9}, {3.838209929004546*^9, 
  3.838209941068532*^9}},
 CellLabel->
  "In[1572]:=",ExpressionUUID->"aecec8d0-3d11-41c6-8697-fd5ebd654013"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ch21graph", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ch21cl", ",", "ch21lt", ",", "ch21tt"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "Automatic"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Cluster\>\"", ",", "\"\<leading tail\>\"", ",", 
       "\"\<trailing tail\>\""}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<kpc\>\"", ",", "\"\<kpc\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.838211729330411*^9, 3.838211819880777*^9}},
 CellLabel->
  "In[1646]:=",ExpressionUUID->"ebd8c7db-557c-4502-af6a-8627f494d37f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., 50.0086}, {2., -1.61672*^-12}}]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
x5v04ruXe/r2rEi/vOAbO8Gkybt23rh6pgLymSSTLpVafOzetmD8PT/u2aRW
J1+JYMTbZJO+rXZu5trK5YmjpHwZTpNE2jKrHPEo8uNf/HwCL/Qti3VymzQ/
wb6yMv87LhSy9ucJb0vTlM6lhzDVpNnvAkEVy5emjdy82vpN7NsGQfSLbQ4e
k/qtv7b+042l6FMbeCompbTpueTmtZJkb9+VNUxacvO3l6MeFkd8D/Dr3/Cy
61/disEf8O8PM3uXcpcpSpt4GHtkmrR5Ta+zP94oBNxv8PsTJygI/MjP58vP
+hQ4kJ/2cTf/lH8u1nV4PuyL2ia9+tRG1HnIDsdNa5pUyb6x1NzAEfzvq0y1
3rds+Z9f7K9aJrF8nc8fOPrGz1f34e/890W8zf/K/+dTHpj5978eW8M8uP2Z
n3vdRn/z801Y9D3foY/9Bewf5H+/eMO5lgu1B37+tP6ew3//wYR5ueql3PQH
Ln9Xdnldk369VmL63v0X/Rc5rFzE/77uil+4pR31K99f2TNFMynzSpl/B9Vb
5Rc4mZ/Pdkvfzd+cI/In/v2Scd2qXh1+Ikf4aX59RUskDwvUvpgj8Dlfnxmd
T4e+v3wjR+Bx/jw3N64Q9vuKeznt19zpvpY/n6VVbID8OEfgft2k/TGTmjUd
9TwnhqcHC/j3l9Ur+c+t0a9yRFwnk3Y27VdkULe3OSL/cpm0aHPVy39cep8j
9jn/fsLjQatjT+Zi9uPaze3l5tUzH6cezMNs9/GeH098/DA9aUY+Jv4+je+P
J01mFXyZnzWzgWImv75b8YH0SQVZuvhn0okRc2a0Dy7M3rd9ea1VqkkH3PxM
54qwcrZjyzAp/MtWdd2eYkzYJ98frp7X13jqlmAir4k1KfXuro/r/FGS2eF8
QrRJDePLDFh0sRQTjzHCRHz5OIgJHFHVpI9zp8xStNJM4Ge+P9cUbDo4NL4M
46j61OflTcSBDWUY8gcT+cGlskzkb/zzzuzm0KDvyzHbnF6XMqn6xtlb29Yp
z8Q25/7l0bm+669VCGYib+T+53XCoSGb1gQzgacLmPRP/ueJ3TdWYLMr8UD8
3qBZR7a98X9ZkQlc+NaguEZ9Jo/oU4nlGjfgreuVQd/YC5KrMhN5HfeHPWzi
Y3ll9nnsvlJ7nhjIu09WYcLObxtkh4OLn1VlNgzrfpP736NlJvVpWY0Jv3/R
wHolVWcCJ58x6HhUnQe9b1Vnwi65f29Xdl/isoYhbNmb5l/v4v69w8gT9Y7v
DGECN+0ziD/9kg+SQv93fLjV1s25loSyS1t5wsbji2d2p7/LPQhlHXJxz7bF
oNGNR9TN3TWMCX/5h0FR14bMOvB3GBM80EqDdvZufWJEajjj0XNV0nKDLr46
k/7R+HDW2b7AxQaNz1/r0ol34VjPGQY142nU6U4RjEfPBUV4vNycn2/EBRHM
yeHO68ky/qdGMp715+0zwqCCNvHQL5KJvGW4QXbaHv46kl1vxQHjQAN5TsMo
ZofjBd8Z5BIETxQT8Z0fCzuMiMbvdTbIhn8Vv49m4ntfGuBZ7kYzgac5nhA8
xGcxTODplgb8+P4YJniOTzmeuMwBQkIs41nZd2XrGPDLPWLZHJ5GLjcMstOo
rudjGXCXAVzjjWMCP2QaZNNOMVvjmLhMjp+41T2pXjqemfYPhRhk00y/D4tn
9vLEVzXgN2/HM44CLuQJMujnIzzB/TQB+7O0xFObEph4rvkMelrd3umJTJyH
4z2Bzz9NZCVsA3kl8e3FROzXxzr4iZQkJvwtx5cC7wxPYiL/4vjTtB3pqyQm
/M0/OnCPmcwOc5ibzPFrO5ugWZDM+O7+Yv8uiXcfJzPx3P7Qgd/8KUzgtdU6
2Y+rfrcUJvDnPMkLzkxhIfzn1VkSr55OYYK3GqcLM43Pn8rEuv+s03oOx0c6
UtmhlzxQ9NXBm3VJZfVsQuc7Hc9nQipjPI1N6KST2Ed7UpngAVroyBvvpTLu
fWs2+UxHXhOexj4eNblz6Y904J7GaezHuzzB9sr7GZzG0u0LcsvrmZ/GRPxM
0MGj3U6D/cTx/MIGvhXTmeCnyungYWqmM3GfxXUS522bzg4u5olCPh284uR0
JvKiVxpl2ID7SDoTdvJAQz79Jp2JvPa2BvyWkMEq2g7xjEYzB/GEolEGs91N
190a8qIhGez6E24IORp57R/YksHEffH8ML/9A+8y5P7UyIZ3rHIm9v9cDetp
ZjKRZ/D8c6dqM4qZ7CyHDy9HauBPpmWybNthfashfzmeyUSe1lnD+hXOYm+5
+3nfWkN8j5PHTTXE83pZTOSfH2lkh1lrXBbuT9FocUv+AFdmsTschnfL0GgF
TyNnnc9igp+I0aipDZSLZzOBTyrK5+PKZoInKKSBN+mRzUT+kE8j8Rx+zWa9
7DBwX6W1C77dE/t3NrPDzdDrKmXZxM3jbCbw62EV+UOSg9l00ch/VOSbzRzY
31tU5JtDHewGd9Nb/1TB6852MDuNuL5QJbGPTzlYcZsgm6KCh3zigH2NUJG/
hDuZ4EO7q7Tym/bj7tdyMjstqdNBJXHeAU5m0zPFmqpU/u2+B3+tcTI7rU6u
r1I7vm3nnHBiPXTJe+ZzMYED01QKswNeogv7KUryuB1drPT8LduCq6mUGMoz
/Z9cTOSfRSWvu97FBC5/r4AfuuNiI/jpr11WkK8WdDPBQ51RwEc63Uz4gYMK
+JKWbhZtA6yNCsU255l2HzcTdrFMIYGjfnfD38xRaDXf1rnPuZngyyYrNEmz
CQs3sy/XN0yhFzH8BJEeVt+GgV0VsmF+3088bOqmSWNLtlbIplFWDPEwka83
U8hnu9WZHiZ4F1LAr/7lYQKmZSo0lMO+tHxeNoeny90TFfC7IV4m8uuKCtk0
56t6XuCTvAri7wAvE3nwK4J//8XLRFx4QMR3xeCJR72IL2eIbHPTX3nhT3YT
8pAqPmazQz02Ewk7M3yIH0uI2tiBrb2PfWM7/slEhezEcLqPCR50KCHv2+1j
dvgr2o+A48/4mOCDOhAJP17Bz8Q+bSj51TQ/EzwwN1fh9+r7mfgdByGP6OZn
gl+NIipqB7bFfoa6AZH959t3+5nIC/ITeIQ7fibymst+mYcREzzEJj/4wSoE
e5rkp7vdOaBJJ2Zv39DOfrLDQAuNgIc+9ZO9nUo0ICb8muonm456+QUxwV/k
9ZMN+9f2IzaJb/eld33gw8cQ2xXCd8Y2n+RjiAG3+5B3ruHn41n4q+99JGi4
ncSE3bT1kTjPUWJin5iSl71JrLENUKr5wAv/R8Bbj70k1qGgAjy8z4v8sJrC
BO+z2UsCp6UprKFw9F6y4c9ii39u83jNvciPGytYX81LE/h2/KGtwkQ+V9KL
eD9AYcXsG3jtIbEPxilM7Is9HvCivypsJQ9rMcs89E/Y2dcDVitM2GlXj+SN
FCbyxXYegl9ScD8+D9kwbddFhQm6sIgH/ORbhYm4/sgNfje3ygT/sMVNobbD
Kaci/k53I77Fqkz4me5uqm4HKJ/KBC5t5EZebKmMR9GTpcPcJHBfY5XZcODb
ly7wyG1UJnjgay7488EqE36RuUjQJcNU+MexLhrf/L32ZqLKRP7YxAW+8HeV
CR7S7aLtwXxjbZLXV9lF4nf/Vpmwq7dO8ODHVMTzXU7webdV1t4mROY7wee/
UGGfvZy0dRs/YXGNCd6yrpOEX66gMcR9J9k/ezZaYzZMOPnEgTqQS2OCL9/j
gH+ooTHB86x10He2o/1UY/ZjqzfMAd66lcYEH99M1jf7aFivLAf4zkEa4lFZ
B9ZvnMZCbJh2IRu88K8aE3XOFdmo3yzVmOCRJmWDF8jRmE3PLm+Xjee9Xx6b
2cDLpzUmeOBK2cAftzX2nQ28zmaBP32hwV9tz6LeNn2bXwfeHJZFAseW15nt
Ttd0zAJPE6Wzit3tjCkLeD1BB76rmgWey6fDPz3LBE9u6kzUS1gm/HcDHfF8
XCbwUQcdePWbTNR1+uhM1DvUTNQ3vtOZ4B+C5Pd/1pngzx9nYH2n6vAP+zLI
fnwblsjzjc+gj2wCd63ORp5tn6tLN8kT79KRXzozwFsc1iX+ygC/fFZnmg1r
7qSDB7+rM8EX7UjH/b/Xmai3TkwnkcflMoB3v0pHvCpqMFH3dqSj3lLJYDY9
F1YsHflnrMG62ITC5TTwLtkGE7ziqjTgCbfBBJ/wfRrsJWDA/3+eRrbZRn1q
sDcDOKBJT0P9oqXBhJ8sm0Z2eI3pZCD+H0ulX/ntHu9lMFGnXJmK+PGTAXvs
mwq+eqzBRB03kCrrtQYTfislFfFhkcFEPf51CvKlpQYTfjcnBbzVnwYT/Mnc
FMTjvw0m+LuOKaQeanf85hmD2WW9fHoK2enYi5P8fuxAWjKF7HTIe8VgAmdu
SqYWfPvff2owUecdnQx8/MZgwi6rJlMad4fV85kyH01Cvam4yYTdfZZEgieo
brIsm2gISkI9OsxEfrk0EflXpslU2wCaJaIe6DSZnXZsK5QIe1NNhvpUAuqn
NU34/48SZF3MBB56EE8irn1mMkGHT44H39fBRH4YiId/62oiv58ehzr91ybw
3hdxZF+ea7AJ/B0TB158mAl8sT6W8tgJ8GSTCb/3RSzZt//sNxPx/nUMibxm
rinxUwzxqFOl6VIT65EWA/58hQl/eTYaddfNJvKhudFU2CZQdpjAP5nRJPzO
QZMJXv9EFPilkyYTz6lDFOLRRZMJ3jg2Stap5f3siCSBw+6YTPCQzSJRZ3gi
f+9KBOpeuS2GPCyCZtmPtaDFRFxQIkjwSMUttiy59JlvHoTL+r3FVm883v3I
iHDE78oW+8GqbC2NDEedq5LFXCtWfVT/UBg+D7fY+vFVKw9uH4b4F22x+iOf
Zs8JCUMdKtZidrnkyKhQ1HmInz9o2Mnn7lASebRisTeH8z9PvBqC+lhdi+09
MjRp4a8hkne0WK1uDU73jgxBflrbYmVvlfl2/C/VSfiBLyw2r8DRlH75qgNf
fG6x8Kd7qxf7tyr42I4W+3hxf1e17lVRV+THP4UUjNzfowrZdMOIHhY74SzQ
ZsXLyohXvSzW9c8Nqd5Wlamg7cj7WWzLyNYb5jeoJOvyFptVbPT4Rr9XlHVp
i/0eVm53+e0VgM/HWGzr5lxvb2VUwH4YbjFrzMWzz4YGo744xWIirdtRHnzT
ZIu9+3VHv29zlyexj+ZYTNhxhXKoJy2wmH07nkZlyaZTf1xksT7Go5yJ+8vA
3yy32NpO9gqWhr2vtdjEwNzJ9RJKg49YYzHBMzYKIjvsH95osa/abk9+vqYU
nv82i3WfaTaNe1gS+32zxTbx5X/7UwnUAfdarJ79wI8Uo652QP7LYhd3RO6Z
WbooCTvcZ7H03/e1br2mMOL3IYttGGUDjkIkcPgJiwneK19B8EEnLSbyrM35
yYaPb89YiPef5EO8uG4x7b98wfF3ciP+XrOQn8bnJluuUpofwy+/9wtcc8li
R6ruPFjW9dZ/2Xbjt/n6xPb47IvJr/wCnz+yWMbJDr/N/+a5X9QRH/LnIRzI
E7/gxZ/z67kWVz5n0X2/yPteW+zstmH98yy87hf4873FRpb5/H5MnSt+ga/f
WqzlgdzfO78744cuwGK7P67zx5Kxe/02bD/+n8Ve9G/SsFu5ejkC1+YOsN3p
7W/9eml7juBfXlqsQdkVq/+MPZkjeIn8AXa86ZQfex28krN3Ct/QBQPsRfMF
Udum38oROpNiAXb3nenu/Op+jsBVxQOsc712Q2qtfpKDum+Ahe2Iu7B38/Mc
wePzz0vz7VW018sc4c9KBpioRw14kyPunx/fjg+klz/wLseWDU0uEWB+mwje
nAs8X5kAW/1sTtE7zfLIuBFg1LFM9Mu+eZnQoVQIwN+czQfetHSArd3x+YTM
xQWYyDdLBVhc1aX/da9QiPFV+2oa//tPjuer93JbYSbqu+UCrPIm/fkJVoQJ
ewkOsB59a3zxR51iTMRvfr7LD5ae7xVagon6eVCA7bpx9czHj0syoXPjSFbg
xXmlmB0ORvPzTenwtlFDVxATfBs/X7/odlsqFCnNBH/Br6eb4+kS56XSTPjr
sgEWVLHhY7NdGSZ0Gvx5jSpaUF1NZZng9/jvCbx2tyzLz7dnb/754/ZXh619
VY6J+g9/XgIHbSjPBF+ZN8B2PApKjUwLZkLvxT9PDn48c8rzYHaOw6DBfP1E
PW19BWaXA/Pxz3uf/fGG60BFZtOsJQvz9XyzpnqsWgn3x+3tlzL3437zVGai
zso/t7f7vVeV8fy4vax8f6jV1s1VmMAjhQKMP73Ri9tVZTb9toLb4xV36t1d
paoxwefy8wm7XlWNCX/0xmJR1T7Out6xOtaPH2v5qqgTK4UwUa98ZrHyF66H
bf0iBDiHn8896o/6Fy6EMMFP8P1UJOfYoemuUCbyN76fnDGtFtwfEyp5Mu6v
321eFCgXxmx02uiuxRpXOfhvx8/CgBOvWEy1N/imMPBsfP82qTekQ4Vq4UzE
e76/xXPrEY487LzFLp047zl+OZwB31iwE1cEO7Cf/ztn4flOiWCCjzpgMVFf
fBjBRLzk/kjkU1okE/B2v8WETmxlJBP8zC5L2mGU5A0sNnzl5dsTv4li/WwD
3m4xoY85HoW8ZovFhE4mNpqVsm9wncWE7uSnaOTl3N+Ch4sG77rUQn6YFMNK
2YnsCh4vvrUNLIYJvSL376iTxaKuM9Ni4FlimeCHZllM5GnLYpnwDzxeiHpb
lTgm8qFxFhN5z7dxbMynHCHy+CN4katxyNNGWEzwhHHxzIall4ZYqM9Migfv
M9CCXR2IB+/S1wKf605gdlltE4+Hor4xNwE4qJvFBI/1JoEJfNLFYiLu100E
DmtvoX6wIpEJPNL0w/UmMVsultbAwj5sk8QEPuTHIs7uT0KdSreY0HdEJWO/
mRbyh2+TmdCJ+Szg60vJTOhj3Baee9EUPN9kC/kPpTCR/ydaTPi9LilMxNMo
GX8npADXcjwj8OzBFDbm2pPqR4ItJnRf71KYqE+UtpjQkVRPZaLeUMwCXv0k
Fc/9tcmEnx2Yijz1pcmEfmd5KnDvU5PZ8L361VTY3SMTzyF/GhN84TWTCd7K
kcaEjpPjPRE3WqUhbz9l4n7GpjFRzz9sor6yMQ15w16TCZx/Mw24bpuJfV0k
Hfa91mSiDlgrHXUrjk8Fn9I8HXkwx7cizx6ezkS9geNb8Xdb0pnIryeY4Lef
pCNPHG5ivxTMQB3nJxP7vk4GE/zBQPn9bzLAy/cwcd+zM5i9DXd0NJkNA1vu
zJB1HplPvM9gQm/b1GR2mbFUcCYTddz6JvxgjUzgak0+386ZWCeviXWYmgne
McXEOu3PZEJnEivxfN4sZsMZR1UT/EFkFhP4o7TJBC1UKws8YTET/79jFrPT
o7u5TCb0xyuymKgXvjDgB9dnyTqOwQSPcz8LefplgwmcXzmbnV/LE9CzBith
EySBbOzzAwaLtwUkfbLBS+81mMib52fD7rca+F2WDT+32kA+/TgbvOxCA/lV
FQcT+fM8A9db04H9Oc5AfP7Kgec41GCCR5zmYKJe0c9g0Lc48By+NpioC9xx
MIFP2xsyTjqZHX4XNTGwz9KdqKPVMBh4QydDHduA3U52ghfMNJio5y91suN9
bkelphhM6ESvOLGOoQbsv5wL+zXYYELHSi7UOYsbyBdauOS6GbL+6AIP80KH
vS13oa52Swe/ucPF2toB/6IOP/7CxQS/vV/Hc4txsy1Xy1b9a5eOOF3Hjbx8
jc4Eb9nDjbxrkc6EnmeWG3WcBTriLHMjT5uk4zncdjOB/0Z+4Es8eH6DdNSb
yYP7+VpnQsfbxsPC7QSijQ5/MMQD/1tXZ7915Z5wh4dBJ67DTo57GPTIOhO8
fi4veI94Hfl7Za/kjXUm6kq1vUzkB0E64mp7L6sNIgDPe6IX/vWZxgSPmOPF
f29q8PdnvdiPZzQm9BsFfAz8vYbzxvqY4CO3akzw1KYPda0VGkNd2If1Xqgh
P53nY0KvOUXDfeb4mNCHjdSAg274pF/XmCij5PNL+5Pnz5I8eAuNNbcJr+Z+
ZpcXDnykYX3b+ZmoP5KG+tQMP+w6UmNCF77Tj7pjhMaEvv+SH3X2Mhr0CIUI
+zKXBj6rDKGO9EJlNv1xPoKwzpdV+CEP/9zWUV5QmcDlOoEH+EtlQmfSgrCf
13/gb4kJ2nmJygRP1ZcQLyerqIdMJCb4gZGqjPsEfPa9ykRdbKO8ns4qE3Bm
DzGhQ2mhAl+cJ8SlupKPvUqIP9kq9AH/8vPbOpUEle35KPtnpZDCpF4f9exy
Cup4pVTwb3EK1udfBXaqK0zwAS8U+NF6Cnjmiwr46M8V2NN+hTW0AUVvBfex
RcF19lfgP1YpwAvTFFnHVJjIo5YoMq4psNf1ChP897cKcBw/j9AxtVOA504q
qBs2UIDrLynQqVgK1vuZgjq5U8FzzyufU6KC+lh5lQm+p4KC5x+pAn/kV5jI
25JVqRMh5JuaCpx2h5gNq39poLIzS980//o4AYe0U5moP/B1EX0U36iwh0WE
vOFHlQmd3nxiQq82TYX/Gk1M8JJzVGaHu479CThlmQrc24aYqEvuUJF/NSKJ
Y1Um6ks1iQl9J7dDgROchPW6J88XSUzoGPJosKMixISeK78Gv1aAkD9X1mA3
Z/3Ab9Ea6sbL/cBtLg350UQ/8I6qIc409TORdzbUmP1ztTU/cG4bDflXtB/1
vG4aE30b73yIj/016GAu+JioG47QoCPY4MP6TtZwnRN9yBNWa+wad9fXP/fJ
eq/G7DLTdt0H/7JPYx/qe6KefURjoh780suEfuy8xuxlSPzHi/rxbQ1xZqUX
/vetBpw/3ot9XUKHruALL7PTjI7cr4r8rIYX/HmojjpDBS/8h0NHnHzmgb0a
OvbXQQ/8Wx0dOpnFHrafwx61hc5En8YgD67/Kx04ua4HeSyPE2Kdsz3wF0N0
uY/dzMndTcYwHbqV427UA6fqqMutckOPNV/HcxzjZoI3X66zFFug3tYN/LdZ
Z0KvbriZ0KMf1VEnruRmghc/pIMnfOpiQidzXcd1HnWhvsOPRXxY7GKiv+aV
zuxtXq6vCzi5iIH4aLpgRyUM5MfxLvDtPO6L/O2NkwmdebKB533VifyK4wax
v5c52Vzjz6fvdAN1t7FO7OdPDSbKIJ87pf0ZwLupTmbTuXs/M7Bf8zgZdBIG
4uh1iWv6GEzoGf9w4Pc5LhL+boYDfPlIfn32A+/oQL4yw5B1fAfykAWSJ6/m
wLpyXCb4ySfZON7IcZFNA+/MZrYMWNtpgCeYmo19cciAvbXOZkJvf17WIZRs
Bl2cAX9SPZv1sAtCDw0m6t8PsoDznhrI73dmoV6Rx2Qzg/hOnpzFbFnyhSIm
E3owjluRx5hM8GlGFrPLNF9VNJnQz5aVfx9nAse+ypR6KBN54t+Z4AE8JuqY
0zKh/1FMJvR/XTOZqJNZJhN9OByXC10Fx+1CJ1E6E/lMexO6m/sZsn5qIv7l
ZMAuvzaxXnMzmNBx9zaRz3fKwHoNM8E/ZGQgfk0xmahHFc5gQpf9iwmd1b10
8ByzTORTf6QzAUcXmLiu8emw14Um8HmrdCZ4Mp4XCXtPT0cescuUOCSdiXDy
t4n8/0wa+JN/TFbMNuwNacg/eR4mYP/INORNZ0zgzVpp0EPeNoFbEtJQn+J5
H/TkqYhbPE8U+OZ4KvQceSwm6jOLU8Gf5rJQ9/oxFfXsohbyJ553Ct18eZn3
x6YivlWzmNBh301hog8iwgLu25UCvxBtoc49OQX+OFHyGB1S4KczLYm7Upjo
M3Faks+SejCed4s4n5MMHqXWB54iGf76E4sJXXxYMviKFhYT9b5TScD5jSzw
dl8kMaHrbmUBL7xLRL7WRvKy6xJlXsLzdKmXE/qBXhZw0M0E8D19LPiv4QnS
r1qo4yYloL7/s4V4vSse+cJoC/ukdTziwyjJK1SMZ7u/zhi0bqwFf3Aujgk9
/izJY3SJY885jHXMkp9/4F3mWMCj02OBx5dYsg4XC/w3T15fkVhZD5Q8z48x
yI9XW4hD4THI1zda2K/Ho4HPdllM1EN6R8OetlnAFYnRwAk7LegKDkcxUVfZ
a8Fvt4hiog5xyIIuNFcU6mUnLcSn5ZGI9/wY6xYJ/dFZiwnd8q0I6MkuW8Cz
CyMk3rSY4P9TI5Cn3rDYzw93Lg3eIfWm/Hht/Quju3YMxz5/aLEX/yyK/7Vc
OPz3U4t1yIx4sOpYGPQmdy128d3jz9Z+EybzaIuJevLbUFwHPz6tjh1Senco
6uP8eGGFm11UJRTP+63FCqqrBxU+FwJ7yh1g7Wanve/fK4SJunvhAPxXpRDJ
rwXY9Lz5uj9zVGeiv6dAgJ3d+de7EvmrI64VCbCfGmwe9+21qvDXJQOs9dm5
+wtUrPo/3lbku99Wgb/n32+bu8z6nusqIw4HBVh42tIro+5VQjwrF2AlB9Y+
sfDLSkzUYcoE2OHoJxG3p0nel3+/ZZ51D278VYGN4uFla4UAuzfv00a+u8Gy
vhxgo1rM/e6rkGDwcpUD7Pi9wQ1bBsqjHlgxwGx6sOHMcsi7+N8X7DegQqin
HPi8qgE2MOXRub59yjJRfuR/L3DiuTLAv/zzua1n5BS+XpoJ/Tz/fO+dhodq
lCwN3qZKgK2bnGHeDQQBB4QHGJ3+JX7ziFLgE8ICTM/YOOTU6ZJM9HdXD7BJ
N7edb/K2OPQN/HNKscZcnF4McYufr8CmVmfnFiuKvDI0wD7jt9fyq8KoE/C/
F/zMjwWB+6ID7Psqv6Qc/bMAcBu/v3J2oSAj//+Ov+05Ovfpr/JCD14twG7x
n990PzfwFL+/Yns/e/i+Ty5m7671/JivVnbdnu9zRF2L/32T83ect/u/yRF6
F37/K8fUafF66cscgf/5ev3B05YzRV7kCL1spQCz/lrSvVjgSQ76wgKskKvp
8fElHuYIPqdUgBXOWj7w5M3bOYKv4ev75bF+E/t1upoj4m6xADuwxLUk/4tj
/6vDDM/TP6zu+P05Yr2K8+P54z9KnD/WL/J5ftyu0612A2fv9ou8idtzVu9n
Oc1HnPALHi5PgD2rk//c038v+QXe4/bcpnm3bvU73/YLPJMvwOwqU7XJD/0C
P7+z2ObmO3u3bvjEL/xRrgCr/LzUqAchz/1C1/LSYuVTBjfr3f2VX/TT8ePi
78o0Xxrz1i90b08sxNnd7/zifh9Z7NmCsHK7J+WCLvyehXUtnAd9XQ8sJvTy
g/JC53fLYsOX/L01Xs1PYl/esZjQoy0rQOJ53bbYmIoLRw78vBCJ81+yWPLC
LlOPXi8MXcIV7v9s4Zq3KNnmOOSUxbI7Nfvl9KWiJOyF+7sk54NfSpQvQfbj
GnzcYidZw8LlrZKyzm6xpU5ukStKQXe832L57MJF7SASuOVvWTctVppEPZL7
4w3bNzXfebI0CdyZY7Ed1s5fAq3LQDe3yWK/XMje+qJWWfRpruHHp0MmjPy3
LAmcscpiHSv4whbsLEfQQ1jIt7uWJ/B4FvoWzGD0Pc602ORlzw31bTD6wada
Ej9WIOgdZB1ldEX01Y6TdVqzEnRqwy1WdlIfOv2sEvpKeTwE/qqMPpj+Fhs/
bs3K31tUQX9lX4vZZaAiXaqib57H01ajq+Wsi60G3Upniy2ZWDjn2Jhq0Bm1
s9i+rfHf/zeqOvrimvP4HcmvKCEE/aM83s8uV2H1xp4hqPM35tc3YFvnUydC
oAOtx+PZhb2eJ1Yo+sZVC3zAnFDMKdB5PNM6/1Q5Vxh0QW4Z3z4OI5EnpEue
f1MY+on5se/+o5Nt3oWRwJMcz9RObHZ3RI9w2EeIxXrx3b73fDiJOlJVCzxf
RgR0ohUs4IQOESTwcBFL6r4jcH6OtwSuoEjoiF6bqJ8siSQ7HRv00JT1wSj0
xd8ywR+3iYIu5JqJuLovCrrnk5LnrxBNgs88aiKfGRONPvxjptRVRUOnuUvW
FfwxJPJ6jldF/WJADHQCq0zkbS9jcH/LTOQRLWOha54udSmrY9H3Oc1k39pC
yXuxUvdmMrHPv4wjgSdGmsCVB+OwXoNN8Azv40j0b31rgs/uHo++tZ4SLx+L
R59qSxN8U0QCrq+JCd53fAIJ3FbXRB3sYAKJfhGeP6AvLxF9dT4T/OeqRKnT
MoFrciVB5xsvefmmSdDthpjoExqfhD6A4iby9NzJ6JMubKKvaFAy5iLkNrGe
LBn9/q8NiRNSoGO7a0D350+BTumyAV7m6xT0MRw1gC9Hp0D3yPM7oZ/4KwX7
aZMBfHA7BTq9PwyZD6WiL+B3yYvXSiURf2ca4K/bp0LHNd6QfGkqCZw63ICO
+IjUlQ0wUN/IlUbgCwzUscLT0D/b2kC9tHYadJ0tDOCqPmkk4vtHBuLy6jTo
djWpkzuXhr7iLAN1sv9kP3S8Ab40Ph3+McxgYu5A/XQSeVCQgfrv0HToyvIY
wJUr0qHbf6GzxbZM+FI6dK73dSb8Wu4M6CIv60z2T0DHfE4H7mucgf2xQ2ei
L3loBvrc1+kyP8iArn2hjj6WOxnoR5yjM8xLyCSB1yfpqAdkZ0J32l/qHD/J
lP3HOvLNkZnoy2irM5umP7YhE7qwllL3eDmTRD72sY68o1AWdNo+HXUybxYJ
PJf64fqz0PcYqYNfHpZF4r8VdOShK7Og+y+hQ3d7Ogt9zC+lTrVANvoq7mvQ
zWZlo//6nMYw1yWbBF48rDGhh/khG30rezTwuIuzoSNboYG3/SdbzufRwHu8
zMb1zdSY8FshDswVGSl58/oO6Mi+05it+p01wIG5AW015L9THSTwXHNN1lcc
0GF+pLEPc4UEH+eSvH2CE/3O6fL6DSfspZKGOmJvJ/r0S2rAfxOdiCfvVOSj
fzphj3clL37HCV3eNRV1lXwu9GvvUoFPslwkeKQtqsxDXZgfs0xlYh/2dkFX
P1cFHzPXhX7+4SrqtWdd0B1/r6Kv7T8X5oB8rbJ7zBles7KbDFGAUGW92o15
Hw1UPN8v3cBDHhV80w9uErLPGBX1uQ1u9J9XVZHXnHKjXzmvivrUczf6xl4q
wK2JHhlPFCb6H+p70H9+REHdrbcH/uwvBXnORDlH6E8FOtYcD/p7ZypM6Ecf
eKCzG6MgPy8k5/4MUrA/Q72Ya9NJQR2kvhfzRppLfr+/F/359SR/P9tLgq/L
UFB33OeFLjRakbyWV/ZhKdATFPBBV5dP1h9SfJg785CY0Cc28mFOzHmS9uEj
kX/tJvAlE33o09hEiH97fJjXsIBQxz3nI6E7mUDoMy3gx/3YfQ22LjTej/tt
T+hr+diPOSEtCfxEdz/6/E3C+v7iRz9/EiEPm+dHf3wIgZ857idh58UIPM4d
P3T3j/3okylC6LP6x8+E/iuYCHUyP/xjCpHgIyb6ZX2bSMTp5n7oqQJEAldE
+KGzbUIEPs+PunpXAv674wPvPpjQ57PHx0S/1ihC38Q0H3jMWQT/2Msn+0aJ
BD/t9cHecwj2U94HPHBCziF65kU8OEvAk7u8qJc+JugO53vR1/COYA8/eKEP
KKFAx93QCzxQScGci2gveA2ngrktBbzIs00F+PiUB/WcGgrizSIP+kpaKJg3
8Z0H8b+jQrBTD/iUvgrmBaR60GczWsF+yeMBHpiiwL9dccP+FyrQia52Y/9v
UtB3McAN3m6vQqJfoqUb+OWEQqI+7XWjHnFNQV9OKTf4qYcK5qXccYEHKaii
7+kPF/BUCRW63MEu1FnCVNmH62Lod1MxDyHBxcRcNFJhH/ldwBM15fyto07w
nfVV9NGsc6JO/pWKeQwjnIivPVT4h1ZOJvSRg1XqbguZkp2o449QSfDVxZyI
f1NVErzySQee5xLZ57bAwYQ+9A85n6y3A/E1RyXBQ9R2gP87ouJ5hjnAO11U
MSfhbTZ4qYcq+my3Z0OH/UpF3/GkbOioCmjYn12zwYcVl3N9zGzUN6tryEdK
ZENHHamh7/hGFrPl3bm9GvrMWRbqFvxY5Ac/ZoFXa6BBB9w0C3WhJnL+W0oW
8FsHDTru/zLhX3prmIN2MBP1vP4a2TT06ZmZ2O/DNRJ20zeTiXWfpqFvr2Ym
6gULNBJ1rxKZ4PVXaCR0Yy8zUH/bJPsyN2YAL+zVkC+PzQDf9o+GfK9VhtQ3
aCT08fEZqFde4vdjE2pv0tEH9UzD8z6bjnzjlYZ5aCvTsR4FdRJx7Kt08J6l
dJzPnY6+g1AduvWy6eDbY3X0gV5KQ/xM1uW8uDTUMbw6dOT903A/mo78qFEa
6nO1ZB9xbBr6LJvpJHDFg1TgrzY65o0dTAUe6qADH49KRR2onw5/0zYVdfxh
OuwlKxX89c865tjlSZV9njrmbxxNga5olk7CDy1IgT9boCOf7J4CPn6pjvkk
6Smoa6zTsd9LpcC/79LRN7o6Gbq6fToJurZxMnRYR3Tg1btJUvevo69hWhL6
WG/pmB/lTMJ6PtYlfkuEzvuVjj6J/omI9/kN5JOlEpmIs4UNEvz57wmoa5Qw
MC+mTgJ0qmUMmb/EQ4dQ1UAf+dh46HrCDNlHFI/8N8FAPjUvDv4wxYD91IwD
j+szMI/k31jU9zRDznWKRf5Q00CfY1gsE3r4+gbm8B2LQT2kuUHRArDEQJfS
wsB+OR8Nf9zOwPyjYdHAP10N6a+jUZfsbsC/n4lCvtPHAP/TMQr5zY8G8Nbx
SNjnzwaJ8RcTItFnOVbOyaFI6OWmGCjzHY3AHIdfDeDZFhHQac0zMNfpbTgT
vMcCg1otuP95k5/DUV9aatC6PyqVfukIl3VVgzqmFN9hHQvD9/80aG/f43//
0CUMfT3MQP71LpSJfpNtBgleZH4os5ev898GvW43vfLR9FDg290G+ioPhUCH
cMig7km7GrStGwId2CkD8xqLhqBvhh//NGZY7Di9OhP9QpcNCs1TYk7N2tWg
W7hq0NBzxbIvTagKPu62QZXsP3hcBXj9noG+zrpVmJjf9sAgwZsmVgZP/dYg
UWYIrYTz5zbp/qawVxcXV0RdI69Jew90zev7tQL6dPjxxjrhiRODK/zv+90H
tRxdzR8s+VOTapoHt89qWF72ZZl0st7xfPV6l0O+W8qkrr9sdu1hZaUOx6Qt
mSsbfH+9DHQK/FjosmPLgKevZFLzynG7XzcrzQQcDjWp1P5/rr5sGIS+7AiT
qttE4PJScm6DSfYYjp9+KCnrZCad+M+5f/Lk4tC1hpm0LmaNEtWkGOJPlEnX
ahzJnLCiCOJlqkkbuoZEFD1VCPfHj9/6h75+8n1B9mEOkNAfJRRAfSnNpO/E
4I184CszTaq99fSN3T3ygNfONmmWov2X72Qu4F+HSUsKz32Qt9R/OaKu5DSp
fO0vo4fMe5sj8jd+LPifA69y2tgNWH6TtmcUqx509FmO4I/4cSdtl2PghCc5
Is/STCry4vObCw7c+99cm6HvCyc1PHYzR/BMukkfXy70SWyvSzmCHyCTqtXd
V7L59SM5wi/7TLoxovVn91qvyhHXb5j0RXb/ofcOrPULXrOGSbs88R12ZR/1
i7qLYiJ+XrrkF/6Kf/5Vm0ZNzTs3/CIumyatWrA65t7ce37hR/n1JGzeZ/T7
/bFf8Bi1TYoetrEk3XnuF/7BlHN0SrzyA//w67PbO5L/9Yu8kv99xSqRKw6u
eu8XdWt+fWLMUtXc6P/n3y9TMmb6N7vyYB4B//6sKc9bx0TnI7G/LJPGdG36
aO7D/P+bq1RvfruSf3xfkIRs1/dh7lJhzDnj94e6YBHwLPx8j0+2GfXdsGKY
j+Th6/GGG0RaCcwb438/om7ulFmDS4I3cZkk9sHiUiT6lvn6v7THqrUNwjzV
dBP5nlUaPHUWt69vPx1XJLwMCX/B7enW928mOd+VIVGH5vYnzOO3siTmAvBj
wQ/0KEdCn5Vs0oEVN3Jta14eeXCiSW0vltv2X8NgzM1LMsGvHg1GHhppUt86
tsVWQF7N98+QzskdRvaqSGK/8uNpB+sUsDpUIoFfok2yH++P2ZUxh7OiSWd/
v5qa93ll9OOWkXO1BldBnhxkUlj9Rafz1q4KHr0kP3/GF//06FUNOIP7A1F3
qludhG6suEncm35+Z091EviT+5c+Azc3WtY8BHlFMTln60gIeLD8Jo2cM6N9
o9RQzAH8zyBRd5wfijmt/xok+m9yhaG/+aVBi97m+i2rXhjmFzw1MFdpTxjm
Xj3n8eurY1pGpXD0h10zkE9NDkdex/2pMdg3Lvp1uOStDPD7tSLQ/86PxTyA
GxHoFz/9wZ9GyvmmBgldwbRIzI88YMh5bZFU0050+OeCf2gahbmOPD6IeVA7
otB/ttnA/NuoaOBSHn8E7hkWjTx/rYF13B+N/lQev0ReYsVg3sZiA33OK2IQ
93j8E7rdqrHA5dMMzB8bF0uivj3hw5yfWNjTKAN4rU4c8o4xBol5NFPjSOjB
hhjgxwrEg7f4wUD+2CMec157Gfi7PfHIMzsbmKP6SQLmX35lYG7y6ASZdxnA
X6UT0T/fxEA+0C4ROLmxnEt0LhF5/McG5g1qSXguAXl//ZOQx5ty7t2DJPDy
fgN9zU2SMQcx2QA/viEZ84k4fhK/WzgFc6ijDayLmYL5ORUN5JOtU2B/JQ3M
xZmSIufkyblA+1JkHmoAHxdMJYHfnuroK01LJejsdbK38Z4mqXjOD3TUJ8an
4r6u6jIepJLQYRzTMa/2SSr60w/pJPpAqqeBZ2A6+LQGaai7bdfxdz+kkcB3
m3T09W1LQx61XAef8iKN0GfM8bBNYASl43yzdcwdoHQ8h9E65uR8kw5c+pOO
/PH3dMxz7K+DvzubDvv6Tgffel9+v52OuQ/JGZiXwPMDgRdbZGB+Yn05T3xk
Bgkd3Mdyjs/GDNQJSZfzezOQhzt0zFstkwn7SJFzlSgT82qj5NzSvpkk9KkV
dfQVL88Ej1Fcx+8ey4Td5tNhrwWz0J/4TsO868QszA9+pGFOUfss9KNe1TCH
cmIWeHd+LPz61izs32NyfvlN2c+/WZNzRrPRj7lBI6EbqZkNHnqlRgKnd83G
vpyjIX+Zly33q0ZCl3MoG3nvMJnvPs/GXPCBGvBuogNz13tqqIfUcOB3v/ow
/9wB3qKpnEO0xIG6al05t+idA3M0PRr4m4JOrJtfI8GjpTjJli38kKDJfevE
XMVqGuLCCCf2YTkNfe07nZjfUVBDfnHTSYJP+VdFPlrUBd7hgQq7c7jg366r
mIPe2IX7PK6i3jnFRaIet0uF/9vswrz1DaqcY+2i4zycdVqoIp8s50Z8maei
PmC40V/6iyrnzLoxb2mwSqJPaLybhJ6opwo7XOkmgc/bq6g3PnLD3lqqyO+D
PYhXtVQSdUO3B/ONFJVE3t3Sg37rJFX6Ow947EgVcz4OeeRcZBV+5I4H8wGC
VMwJCfWS4A9fKbge8uK/txQSOrHWXpz3hIJ64BAv+nWPyrlBG7zYv1sVzPW/
6MU+XaNg3nOQD/c3W8F+jvahDjhVITFPoZUP8zSGKeAr+/ngn/oqkt/0oV+5
g4L48ZcPeW4LBfzsWx94sVoK4mGcH/vapUj/KufXxCsoQ/X0g0cOVZA/TvEj
fpRQED+2+5Fn51ZI4PbLfhLp2xNCPbEgYT7EFSKh565KktchzEdOkvPTtxHs
VSPgqRWE59OI8PymE/bHFwS/P5yA3wYSCb1dfwIfMILAw3Qn4MC5hH3/OaHe
+SeBRwgQ+KY9RGKOhEfOjT9HmHeaQMA51wn3WYnkPH4FvEBJQlzlzwF6L8Kc
Wf6cxPlP+UnwCplyntRGv5zfqWCe10w/4jpfF1G/6+KXc8YUzMep5yfRHzJE
AS+X4sdcrbHSrvLK5z5Hwf5858OcgnUK5g2c9OE6D0nedbVPzlNW4C9H+LBv
ryvAP+18wEXvFOgQTB/q4cVVvC+iqg/2V1FFXHvuxVy9dBV1rHNe8CGaCr+Y
4yUxH6W+ijrdz17MNW+tgsf92gu/+q2K+YK15HsPflLxPokoL+yb+wWB//N4
SeioflMxT/C8B/zXFhU8ww4P5hYdlLzrHA/mgZ+SPG5bD+r191Xw8KYHcwte
qliPqh74i7wa5hH/54ZeopKG+WCn3LDHaI2Efna1G/yAW4P//MEN/kXVYO8d
3agnc78u6vX13ahnttcQ56Pc8JPfalLnIOe5/6Bh/x92YU7JdA34aJ0L9Y+F
ch7dOBfmsqzXSNR3Grqwfrs08NypLuQxZzRZB3WRqINf04Brnjgxl+CJhnkK
TM5/zyPngc90Qm9QTgcv1ckp51/r2F/NnJjDnapj3lOiE/VTrw5cWtgJvUdA
l/PWHahPNdIxn2KRQ55Xx3yaYQ4S8wB76CR0U20dmBv2o45473CA752uYz5c
NQf86RwddcL72eBrV+mYv3M8G/50m455rDOyMVfnLx11jj7Zkq/VkQd8nA29
xhX5XpesbMTppxJnPclCveadDnvfn4U8tKzEucuyUC8rb0i8ngX7jjXwvoiW
WZhD45DzMjOyEH8tg0RawnGOsLdPDOzHG5moN3HcLfDivkzMO/9K8oJDM1Hf
7WtgfkSbTODJwQb8qi8TcypHG6gj5svE+s8wgIeeZci5U4acX5EB/7vGAE86
NgPvHWAG8r5vMvCced4k+kj1DMSbUwZwStUM+JubBubb3UvHnJjHknfcm06i
//m9QaLeOjEdc02KmOAx26Rjjl4pk8TcHy2dRF2hqon32ASnQx8Sa8JfPkxD
PYLn1YK3ZWmIc14T9jNRzhH6yMQ8z45psO9PeN5t88cuOUeouczLy6QBn3eS
84uvp+I9At1M4NVVqbjvH0zU3aenIh8abcIvdUpFvB1n4ndqpqI++ZuJOmvJ
VOCVleaH+Z4keN8/TczP2pACfnejSaL/cXQKcMheE/bcMwVx8h8TuCkzBXz3
GRP2VSoF9dMbJtZ9QTIJ3dBdeX6eZwn7eWpKnWAS3v+S15Lz3ZPkeljyvS5J
mANU1oI//y9R1j8tzH+elyj1KRbeL9MyEfeTZAEvFE6UegQLedGvCZhz57HA
92QlIL+pYaHOei0ec4LqWXhOs+Oxv5pbeB9JWjz8XXsLcfVAHPKCry3wDb/E
ob7e2wKezIjDvu8n//5ILHiQoRaeV9dY8AcjLehAgmPlezws6F4OxQCfT7EI
cwligJfmWtAFBsegvr3UAk7aFQ28sMyCfRvRwCfrLNQV/43C+Tdbsi4ShX25
05LvfYqCP9pnIS+9Einf/2Eh7xwVies9ZmG+VHYkibkEFy3Mb70aQYKnvmXB
r/aLQJy6Y8l5jBHQDzy2aH5qU6vBmnASddUXFgV9GvbzZ73CkRfnDZBNG/cq
FA47KBagz81V545MCwPOKh4g6J3DwL+WDWDdHodi7ig/XnE3+N5PW0Ixtysk
QHGftOoU6ghFXK0eIFueSrdDoO+KD1D9XCO/PDw2BHqrpABtHHJqqhodAhyb
GiAjeV7jzouqQ8+VHQDvtbYaeAZHALowvRrydjNAN7uooXk6V4U/CQTIHqMx
+nAVEnVLI0C3fns5akVVqcf8NABc8HVl+V4ufr68oU3YD5Xg/1oGyPnPcvXv
QxVR72oagL+MrIi5u58HUOdvWgFxrH0AdYeJwbDjrgGy5b1Pj5WHPrVbgOoN
G6Qt/KQ83v/SPwC/3a0c4nfPAHW6V/p4s3llUU/uG6D9f7yLj79fBjhqcEDy
eGVw/4Pk94eUxj4YyZ+XPdC/cGmpBwiQGIsSFoT7Gxuguw0P1XjYrBSJ+bfj
A7TOmFo87eeSeF/PBP68bP37peLAJeMC1Dl42t2M8cUwx3hygGLzn//sSIWi
mDM0KwBc9F9h4KlfA2S3GzxrVQh291sAPOHlAtgXywLkv7p98Nil+eGXFsn1
vZ0X8WlpADxvIA/eN7A4QBsuzok5fDMXcPBK/vzaDamV9uS9X+AWfizy8U/e
+oUf48Depi1rvXrlF329/Lhd6qrX67Ne+EW8+DNAPZT++2Ysf+IX8XlVgEa8
HVNr6MGHfgEkNweo8uyMYzER9/yCT2L8encWKBrd4bpfzEng57uaueLO0vLn
/YLfWxegKNe+BHXVLr9Yz10Bep7yh8up7fKLPGh7gGKizzQIvN6QI3gyfr5X
DTZ8/Prk0RyhP9rE98ObZnke1T2bI/z27gBdWLrt7eLm13IET7M1QNu6Lm/1
k3knR+CgvQH5/qFHqFtsCwCHd3+SAz1SgJYFa9xkn+cIemxPgO40u9Gjyf5X
OWJOIv/+8YmHnngc/+L3d3B7cN7uf/Xu+xzoX/n9XOzU/YuNuVBn49eDPvM8
TOj3+fWL+t6gvJjPkBOgqbNW7sxbMz8T8XRngMYsjhq28VABJt6/wa//QOOM
mTOLFYKOjf/+wG2dT/0ZU5iJOMZ/b3L32OVxb4ugP4N/3ueBt/k3zYuhr44/
v2Kel9WSnCXQT8XvB/XqkqgL8vM/q9t11dx2pTAPeQN/fk023VfLBDGBjzbJ
9X4QhLrolgANij+9KmhvaegY+XqOvl34I09IGanL4fvXHgv2ogx0bGsD4G0P
lYXOltuHwM3fl0M/ELfXwu/Xja/qLo+67+oAPek7/f29gsHQJfDjwr/nT37z
dzDmxPzOE88LSxpG9avAxH5bEqA9XxSIu+qviH5Rfj4xl2drRfTrzQ9QGyEg
r4Q6G//86qj94QPHVobuckaAGk3s3yifvwoTfpAfd7Ed7uUqmOsxLUCq/YKQ
plWhg5saQP5XuRp0DXw/ty7XpU2109Uwf2A0t/eqYyouXFodfZjcPzSN62I5
vCFM6L9GBPC+lKkh0BUND0A3cD4EcxGGBCiv3VDzWSgT8qmhAamLDEUfOPdX
Yk7So1DMreHH7wNBFRvWC8P69g5gPueWMPSP9QrQ/cENW+6tFM5EP8Q3AXq0
c2mw1iEcdXzuby9x9xC9Ohw6lK8DyDdiImCv3H8LfDg2AnMJ2gTk/OgI9PE1
CSC/9Uai7lgvAB32z5HoY6sdAL49Hwl75cfQ4UWhn0wNgDdZEIX+JH4scE6+
aPRTUgC8dPto9OU7A3jf0x55zOObwG3vo9EvlB5AnbhLDBNzIsMDwDnHY6D7
Cg1gnl1KLPrXKgWQh/aNxZyKMgHk4ftioWvg8Ro6kDjoBHg8F2FgQBzmBeQP
IM6cjWOCH39pyXnN8UzY+RsLefnyeOjEb1sk9KLX49Gv98ACr9EkgQm8cM1C
Pr0sAfv3igX7eJeA/sfjFp6PngidH8czoh93XKLUwVuY11g0iYEXslBva5WE
57/FAr+2PAl98Jss8MAxyUz0n3D8Jcx8eDJ04oss1GH2JGOe/UwL8bpICnTa
HN9BH54CXQXHf8KOv0hBf+lwC3H+1xTocAZ+wIcp0BH0soCb7qZgTkMXC7xS
yVTojrta4KWNVCb0qBy/ov8hFe8baWbJ95qlQrf4icSPu1Ix/+UjC/nds1TU
zVWJ/4LToHNwWqhb1EiDziLbQh9LqzTZb2whn52UhvkG4RLvrkuD7ijIwvse
HqSh37KEhfwmPl2+D8QC72ylQ8f43pTzbNOZmHv7wAQfuCAd80vPm6gbbU9H
X/oFE30Bj9OhOzpmIt8NzsCcnEMm+EJXBuaNbjWRB3+TwcR7nTaZ4JvmZzAB
j1abyPv/ykDf7lwTvMDdDCbmek8z8f7OapnowxllYr7tR5lM8HKDTPAo7TMx
v+A7E7zx0Ez0vX5lyveOynn/bUzUW09nom+liQn7qZQFndfHJvh9bxbmaNQw
Ub/ukCXnl5jgRcdlMVHXTDBRD9uahTk2ESZ4oMtZcr6Mify/QDbsqaQJXJuU
jfj1zgDf3zwbcymeSF3RhGzoNO4YMv/LRv/6VQPvK/g7G/2DZwwS83GeZ0Nn
dFTW5ao50H+ZYyBvau7A81ltYH/0c8BfzTEkH+1A3+h0g0S/bo4D876Hyr//
14F5MQMM4NCyTug2exgy/3YywQu0N8Czd3RC19HcIDGXZ4IT/fP1DNRDVjjl
PGZD8i9O6JBS5fvGXjgxZyPJkPy1C/6lioH5/zVd8n03BuqJXVxyDol8P8lM
F3RCb3TkeRtd0Hne09FX8cAFHdpZHfX1im7MQzms471vSW7Mwdki33/RwQ08
9Ifklwa50d87R4d/ne/G/PpJOupR+92YdzxCJzEH464b8wD66eANK3gwB6uz
LvkRD/zPZzoJ/WgHD3S/DSXfNdIDnVdAR968Us7H8Ong/4950OcUrYNXv+uR
Ojb5fpEKXpy/gI48r5YXfTr/aeAFOnkxX+imBp5yiBfzCi5r9GHeh8AJf2mo
x531wp62a9JfetEHsFq+PyPSh768BRryWr8Pz2+GBn/xpQ9zGobK94OM96EP
pKeG/HutD/6go4Y+p0M+zAtprIHvveHDfKvamnxvqF/OcdGQZzr90PGGa+ir
au9Hn3YlDfbR3w8dUUkN+oJFfuhK/1ORr2/3M6EPvqrCf13xM1FPPf7hvcEk
+8ZV2EeQ1K1vVDHPN56wfgtU5JeZxASfPUvF87AI+ORnFXlXQwIe7KeiftGJ
oANurdJ6mxHuQ5iTUl9FXj6S0Fegy/eFTpbvM0hXYT+LCPYYpaK+voGAt0qr
4Hn/IeDHwirZ7SZbThPW+7EC+7pFTLwH9paCus9LYuK9FAcUvD+nlAJd3AYF
fZ6VFPSxLVXw/tNYBTq5GQr4alLQFzBEwfsaaiqYY/KNgj6EZgp0uO0V6Kq7
KJiL0URBnv+jgr4UU5Hv81EwTyxFgS5kqoI+kQgFPOoSBfu3uIL5wasVObeT
cL1/Kx/mEoGnPqZAN3yKSODohwrmO+4m6DGeKpjHspVQtymkYr/9TuDLKqjo
0xhL4EsjZN9Mf0KdPF1lIu5+SdDJaqp8X498H8YnKuK5Jj9vpkIXmC7P10OF
zjycUBfppSI+FSbUuYer6Mt75Ef8GadizsQhP97XsEBlom673o/7X61CB/+N
H/Fns4p5F7X8wF+HVSZ4facf9nNaRZ9aQT/2120VOspbPhJjKN+q0DHv8qGu
WliT8cSHeeDBGvrTe/vQp1pFw3yXWj7g8UwN8/wqyPdl+DXY/xMvCb2uqWEO
2zUv6huNNTlP0Iu+v44a5qoN8ELf1UFDn85nXuikB2jQzSZ5wR8O1xjishd9
fNM1OWfVA35vhuzb2upBPF6jYY7jCA/29yZNvr/EAx34Dg266YBHvv9Mg64y
yIP3i13RmMBVN9yow93XoFPd4waf+lKDTnW2W77/Rs7r7+kGfiyuY15hLTfw
RDUd8yqj3eBBo3XMaXniQjxL1ZF/HHWhL8zS/9enJfLeWrLPr58LeofGOnTb
dV3QqbfXMYcnwgWeqpuOOXoPnYg3/XTk/6ed8F8/6Vj/tU7g13E65nN968R7
E2fqmKtR24n9ukjHvKVEJ3Qjf8q+wicO8MSbdeSDpxzwP3t05NMzHLJvQ/YN
9negfn9KBz9RxwH+/66OuaRpDug+XunQvT/KBk/4Vsd8g+PZ0D3nNTDfcEo2
/EtpOV+xZ/aH98QC39XPxvs0+bGoR4Rnw7/EGZgz9yAL+g+XgXkwB7JQd1AM
4OFZWdC71TIwL/S7LPjDT+T3vVmo47YwMDelZBaJ/pn2BuYoXshEfbCzAfy7
PhPz/r8z0PcyOhPx/Ac5T7JRpuzLMzA30pkJ/dwkA/Pkisi603QD+e3hDPif
JQYTOHhZBuo5S+WcpcHyfRRrDeTLn2Rg/bcazC6fv4jMAL7YL+d1vkpH3faw
gb6oQ+nAaycN5CNz02UfqyHnwaWjL/mWgb4AVzrq8g8M8EFB6dC9/GugD+Nm
GvbfWwN9D4vSUC/KL+c4DU9DPl5Cvt+gfRrytSAT88ni0+jD/FJxnqJpqNdU
M+EP9qWSyKtiTcyJnZ0qdWYm5ht1TMV7wV0m8uVaqeD1PSbibZFU5LemCf99
NQV1+xof5s+moJ7UyMR8u+Ep4CtamZhHEkjBfuHHwn9Gp6APsv2HvvJkxKsu
Jvid75Ohz+lqyj7EZPCL/T/00SchPx1gYm5yryRZlzWRPxdKQn7+swm8sTMR
uskJJviTtongqaeY0GWfT8D7baabmDM4KQH45DcT652cALw4T/btn4oHP7FE
zplqE498bZ2cb1sqHnXu1Sbi26o46K62mJhf1DAOdRwm5/8+j0W84scCN/wa
i/xwhwk+MSoW+OGAib66AzF4n9QxE/h9cAzeg8w/F7godwzqfWfk+i2ORr50
zgQ+ahWNeHHVRB/u9Sis520TeLxXFPbfPRP8QnQU9CSPTOnvI6Ue0QS/9kUk
+LHnJt4/+jQC+tjXJvzTxAjM9eDHQteXHoF8nR9v/nax1vlGONYnr8XaXku4
16F3OOrLeeW87rzhsI+CFvsmR6s3+1AY/G0JC3ipfhj03UUs8Hs3Q/F+tjIW
e3h5/NU6U0Oh2wyy5FyCUML8PouJusWNEPA/xSzWLSSi6JRBIcD/VS1mORL7
/POyOt6vUcliN3c/+yHSV53w3h2LdRLEdDVCP5rFlF/3TvhtX1W836eanO/9
pAriTYTFxLj7F5XRFxJpMffiaSF3fJVl/cZiG8s2mth/XSXop8ItJmjpoxXx
HvgkiwWNehDS60YF4N9YiwnesUkF+b56C/GlXzDyhRiLDSrx9Hr+9eX/j6jz
jtex/v+4vffenL33uc99zrnX59p3ySqhkDQQkiYSLRHRkiiVES1kl5Luq+xR
FBkhGZFRlJHtd53P8+P7+6vH1X3c47o+n/fnPZ8v5nryFb/6dGPWT6YDJ6hX
Y+o0hYrbcksj+obyHHfM+WfrnH2pIXWUHMeVedHFSrfYuz7Sb0X5GTcUN8V7
/y4zOx255fb6xDMZDv79nHqqjuYw5xetS79NluPue3/53uxltRXXwVFzQrXI
/3h//9rV79zHH6lBPcV7/7K2GetCNebovNefHjps55CVVemn8d6vZOqhz5bk
VEFfIsVxD21ZeLScVol8T5ridK2sQDzi3Z+KZdid7PJ8v2TH7flMjef+qXUj
InWb0h03xw2XPvnH1Yhcf977zZhcBnq5FGHew3GvTqxZVc+/EJFzj97zk/cp
cjYi83xxjrtm0epp54adjkg75D3/jxNPDn2i8Z8R6T956+eHUOIzpx85GIGb
5Lh/1X1r74XQrxG5jr3reqG0yS1+3URdp6njdr/7ZO5m45WINEPe+p2+4Jsj
z/67PnaTY9JsW81h2RN3xWR/ZiPHPdVoXpW+Qw7G6OPz3v+F73zDnjgWk+d+
Te/3vLq+Vlf7TEz6nxUct+Y0d8HKS//GpP3z9sOOHUuWf7vhPPMk3n78vsu/
J1pVvBSTfWmVHPd4nfv613j/akzmzW7YLjq8N2JwIBx3Q62u62KdysO3vWq7
i9dU3PRRrwpwc71rGZ9FKzHvddZ2ZV33RGXmvTx7U+/Jts/tSK6KnT1nu5+O
G/BE1bzq7k2uyua99TvWvKcGOmLHlD1KqEXe54Di/i2pTVx7yHZn1zzR82hh
Xfgte213RBnIKlgPjtmPtrt+QOs7O+TWR2d4m+2e6dzoz4bNGzCPvtV2l/48
p9ETKxvAi95su8du73XnhfcbkidaY7tV33ngSObgRvAzYra78O53zrRv3Rid
1q9s99sLW94s90tj5p+W3eQgNsEPXqjO6+lNlW6ad95e+rfCKaMZvLaPbPzz
P5spDr/tfnGxUbnD7zTnHHnfdi9ezdWHP9GCuG2S4qBoLRVfxnaddvfsyilu
xTodZ7sPHDea7vivFX6xd125y3/lowtaM//8ou1KHfl5bYj7htlu+O3wE1rr
tvjdT9hu/t3OnQ3XtOVcech2B46LJQ96oB1+xAO2+7f++Pv2JqV7fI/iwVeI
Iy/WzXZl3XViHHFdZxu9j3/imEfr6J1nZYWmzvGsD8N7/ad19Qctjndlfr/E
duev/bhcs7YJcAJ9ttu+TDj6zgQ1n2q7dcsGNHYlkGdrZ+PvFiTCc46z0UP5
IJE4wPOnZJ2gdhJ5mxY2+YzbkogLPH9MznUsSyIvUcWGA5CQDI+xgtKbGpkM
x/K0pTjayfD7jil9smgKXM4DFrzt6SnoTnr+JPrBqXAfN1jKv0nl+a+z4Gt/
k4o+yXcWnGEtDb9piUV+bXgaOqoLLOLFH9PwK2d5/nSZI+Wkwzt8x1L85XRX
xrNvWa7Mo1bP4BwYb8EBeSLDlfWGZy34fZszyNM/qrio8Znq+VuKy5IJV9Pz
/+VzOJaJDmwPC90BJ4s6z53q+8/KgnNnWsp/yWae14s35H3pkw1vMdOCz/tt
NnFSsuXK+amkHPyi1hb5z+dyyPvXtuBSbMuhjlRVxT+NcpkHLWe59EXlwjc+
b5LPfyEXzvEJFW8tymW+fL/i8O7Lhce8y1RciTzyKOsVX92XR931e1Px/fNc
6o0m+ePxecTds0z0Ulfn8T3eNOG+HM1jPnqyqfzlfPgzz5uubGtz8vl3I9X3
G6q4pF58K3ksy/KZ/7zfJB+yLx9e0x2mK8+5KgV8fy+eZo6xgP0VMKnf3V1A
3aHAZN2OK3BlPB5nkk/5qkDxj038x/MFKg5Ten0NC/Ejrxvk928thIdzxoA7
OqwQfs7vBs/z1UL25zbFdd5RSF5xo0H+8mwhejDfGPz+FB/zlZ8Z1K86+/ic
2QZ80tE+6hDvGsxVLvLxPF4wlG6MD97SUIPvW7GIuvRAg/p7aZEry1u9DPQW
+hapvILhyrzLC0WcF2HFqV5exH7JU7z6nUUqjjSIx6v5iXOaGNh1nx+dgOoG
nIW7/PCN/tPR/XnbT97ohM79/9KPLvU+Xf2dn322VSefWbuY571SccDzirFD
S5X+5p3FrowfP9Jd2e/5XDF8gIk6/M2lxUrnVofz/lsxeeIndfoVGpbAF+6j
M4dfWELerIdO/D6gRPE5dOqb40uYHy/Sicc+KUFnNl53mYMroS7YVIeXXqGU
PGdlXelDlvJ9r2twcO4sdWV+96AGp+C5UnQ2d2pw8T4tRR/je411urEUu7ZS
Yz2dU/oQn2joA2QGyNNO07D/HQNwK5/VmMt/NACX/HGN/oW3AsQ196t87NoA
37+Txrl+PACPRdOU3keQukK+4t5rQf5da43n82hQcUU1OFmvBbnf1wR29asg
HMu/Bevy1yB9G78K7H71EH+3UXFuWoV4368E536HEHzn+YL6xVMh6ihTBPt6
coi4fYJw5y/wFmYsxHz7E4L65P4QcXJvAV+0ehh/rLMgv5IbRle4SJD/7RZm
/6aqfP6YMP++tkCfdEFY6X4LV8Y1q8OuzK/tUZybk2H436sj+AV1ItiZdyLE
z3kRpZsQwe/oFVH6QRHyTaMicE6zInz/9yPq8yLMsW+OwPP+NayeV4T1vD6s
OOGCOsprYfyK5kLxJ8LUt7IF8+nRMPVvQ7hSn7VNGM7v7QK/82yI8+Nu4d6s
L8n69BCBv/deCB7sS4JzeFjIlbyeN5UOwF0h8sEzhOIvhNB5+lLgNzUI4Ret
E/grx4NqfQjqkN8F4TL9peo0bwdd2V91SZCHGR5ET7aGht/RPki+poXmyvi4
eRB+bp7G778UIP8W0eBjbw/AOb9dw2//JIBuSB8Nf3FkgHz9I6qO0jWAfXxJ
Y72mBfCLXlP6EVUD6G3O1Ohb2lGKnvfnSndifinn1mqN82RsKXoGmzTyul1L
4Zz9quHntCnF3v2luTKfX7MUO15Jx14cLSG/XkfnXPbsksyTNdHhD04sQWcp
Vekody8hX1as7GJ2Cf7XbbrKu5dg53vr5H0PFfM7H9K5j18Vs26G6yrvWKz0
iXVX5jPvK2Y/TFa6zLnFxBUf6nCpKxdjd+bp6Bcc9MN9XKd0RZb6sZ+bdPzf
l/z0A+zRuY8d/a5sJz+mzoU4v9J5U7rP5fx87xoGOgI/FfHc6xvo5C4uggff
2qDP5tEi8pHpSjelR5Hi1hs3dYjxvzobSifYB5+3h6F0TX1wIO4z8COn+/je
TxrYqyd89HONNMgTGT7ym5MN+IcNfPDG3zPIYxwoVHoHipf3RSH16qUGz+11
5TesMVw1R8rz/tGA99WukHW73VB10wI4Q38YnAMHC+AcnjPgrn9YAOe8gsn+
H1Kg9LWUXoNTgN1qbsKva1zA/WhnYo+O5LPf05Vuz+Z8zvsikzrZ9Hz8BFv5
kQ/mKw6fyXMtyef8vtcknm6Uj77rQNOV9a99eXB3BpnUxWbn8ZyeU583Mg+O
4KtKr6FnHhy2t03i60Z5cOPeNzmv/siFS/WZqfZhLv11S0x1zudyrq4wVV4z
l3rYFpM6ZXouOpHbTOzL8Rz2i+dHSz9sQg757D9N/JvMHPyd0ybn5k/Z2Lvr
Jn0VI7KJI6tYvF/1bHUeWtibZVn4C61VHHV7FnFrW4v9ez2T86bgZtyRybrJ
tpS/m0m+0rJcOU+wOoP9cIt1k3fqyj6ejhZ9W0kZnIP3WPQRzU/n/Oqn9C7a
p/NcB1lK3y2NdfyYRZ/Vh2nw9UdY+Jc5afxuL+6Cu57Kf8crHbFBqeSfX7fo
+6iYih8204IvtCgF/YK5Fn0sqSlwcBYp3ertyar/w0Kv6dlk4thvLXi1icnw
99dYSo8lCX2C9UoHzEyiHr7DYt1eSER/bacF73FUIvbtd8VTTUsk/jhl8VzX
JxBPn7PcCtGHDx3pmMDnX7fcMlnRwLl4zpsbluJJx7OfytucKznx+KlVbbfO
3iYPFu2OU/rttluGX/c/EoeuThMbPlKbOOIDL+5/pu7UVsM+U3mINrZblvb7
PK0d/ny6jW7s122pD+fY7pL7E+otPNmG87PEdovHpPtGlmtD/qXYdtulxa9O
D7d2ZV9dxHYlp+LjVnB2b7Xd3pcyt764siX5+462+/2HkxJ2HmrBeXin7Va5
7fed+682/18eJLl5Sc2RLZqjV9LXVn1OzagPPmgTL/zTFDvmXa99rP28uH+a
oN83WPFzb2uCXfCunzixqf+IDxrjl46wqWPPa8T595TtPvnDkekPf96Q+zXa
doen1jg3vldD/v5525UcHtGAePFV2z07eeCMV/vX5xx4Q+VB3qqHnZ5su6++
2f1Ys2116V+aYruXVxR1nVhQB3s03XbTuw+f+kpxbfbtLNvdPjC67/7jNdif
M2zimo+rK30F2y0oS/ycrUq88Kntlqnq/ru9CnovH9ku3JhKPP/5trum2sGf
1nWpiF35zHZ370767Mux5al3L1U64jXLsf+969dvsX/8vs21mPTHltvu0983
qJva8nJM2scvbPffH4r8H318ISb9iJU2/PtP/o3BebLdMuzKkTvPxCQHbpXt
Ht0089ff1xyPyfhije32OX19+MK7j8Sk//it7S73xTerOnVv7Gad5szg134b
2nZbTPpvm7z16n943UMvvxuTfr53vXX31MHB3WsiMr72/v7fU/8uqHtyV0Ta
jc22+0bqsvlXnMMR6Sd4r+f8/uDYSfknInK/77bdL25dVPzeiDMRmU/crup2
d5yNyDk67/X3JnRt1vPl8xE5t7fLRre6wqWIrDvv9X5vGeeqx9WI7EPeb7uL
Wn6RtenU9Yjs//Vef2HtwS0L+5UXN/99++DMwZsaV2T+7Dfblbj905Wo+x20
iQ/jqsAB8F6/Wm5O0aNLqlK3897/8+3R9n9kVYcT4V17q/vR1/6oIaSffMDb
f40/zf2icy0h79chb/+XgZ78dahLeu8XKfdph/da1aWO9rvNvpxRjz62HTZ1
i0frU9fdZ7sN8pLe/DOpAX073u+RdaQjDeBDePenLOvc8ceG1FW865femtH1
yluN4Jh4/172dXdozJzpL7a7ccNdu7fXaULfg/d5ZTLT/zZpSh/LHtu98PR/
60dOacpcj/f3oyo/tG72Lc2YD/3JdmX/fbA5/HjvebUY4h4bl9eCue1t3vNe
sf7ncT+2YH7R+3vJBXu2JfO9P9tuw196Vuz5YCvFibHdu8/MXtguqzXz7Wu9
57F81n3vHWhNn4u3frK77bi3xbo2zAV/79mvsvmLaW2pe3rrt17vzgfyU9rR
l+ra5JlmtqPvw1vvo97Y9vbjl9pRx1zh2RfrgR5re8Yp3q7t9lvVbNP4nXE8
b2+/vPHLgg8mZ8czH/6V7YYru8OrTIqHQ/S5reouCdR5ltjuw2WFnPwE6uif
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
f6d2/sYNexpRv94YZT/c2siVee6tUWXPGtLPuM17/7HXq2d/0QB7uz2K//pL
ffypvVHxRf+3K31yS336Mr2/l+f3mHr0Z/4SFbd16nGo/Ny61LX3RcXt04u/
OtC3Dvkw7/rk69MPVgnWou6zP8ocR6ua9CUdiYr1uz64q8Hv1Znb+i0Kx3tQ
Nfo7vM+X8VWjqnBGvL/fMarc7dNXVGa/eNeSY/lmRVf6wd517RaXU1ZMq6D6
HaPEI83LK721qJj0U+ln7868EZOffyoqPv78mbePaVdjMs71Pm/yugGt7/zh
Uoy+T+/3rT5TP2/u+Zis4x2PwrO//2xMvt+hKHzLmv9QB/HeP79tvT9v+/Vk
THKn/oiKPqM/3jjxy2Mx2Xfmfd7dq1b/tW3R7zE5j3o4KmpWb9b7t1Y70D/w
Pu/yl5tH7z/+bYx8WVQMe27L48crLY7I7ea9Ps232O3+xNaIzGv/GRWzHho/
5acNuyM378d7HZf88sdbhyNyzuCo935W9cs1QyciMl7yPm/dQy+nX33nrwhz
tlH04379B11c7/dUL0tcp5+PyPvpPb8XL79d0rvJxYjc33ui4tGyxPzMyxF5
7nrPq1W1jRWSh16PyPhuV1QYj79v351eDt1Rbz3NKXr0sdjq8swfedfS7tep
SJ5uRxT9jP8qYee86497HeydHV+FvMKPUVG2nGb9WVXpinj349aqJ2+8Vx2+
+uaouJ7cKP73bTXQJdjkfX4ZWOzWWvBtV0eFnI8YUlvI+vaaqDj6RqTZ8L/r
qDpAFJ5ohXrkVb39KefoN9cj7+dGRdfWjxXse64+PAxv/8m+macaEId6+1v2
dV1poPKiUSHKGt63NGRe3Xudulsjxa+PqvOqMet8nree3ojPnx/fRMh8lWeP
qq85ebny9CbwQT6OijsHXhAZrzeFEzjLs7dvjDhSN7kZ+gUzPPvRJ3HZH/ua
EfdPiZJ/GtMc7tkUdT6JFqpO4J0X3csqwy3hWXrXEjv2Q0vmo1+Mig8Sexdc
6tcK3sYIZS+jreHBjoyKUWUCDl+15vsN89bD0e6PPzezDefyU1FRVtY58GRb
9vngqOhSVvhs0I683MNRMdPf+NNcux1+5cCo4lu3I8/mnT9Nd3y55Xh+HHFu
z6hYMqA00PyZOPbxXVH8oZ/jqNN1i4q73EpD9reOh0cUVdy2yfHEjUZUTHlh
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
bObYjyfhz02x8W+HJBFPTbc5X+KShMRffWLDj9mSiH+01KaveXiikHmiZbb7
7+mC7FYXE1T/p3d9z/L8g18m4E+std1t0yd0bRZIQM9tnc3c5vV4nufPtjt4
a2b1zh/Gi5s8ZnRf48mvn7Dd2l3XxbZuiCO+/NPmPBwUR337rHd/6uy8UVIr
jnrDf979PtbBSn+mHf5Decd9NTD3xfMRlReu4bhjj5ZOWrajLf5ZHccdf2LB
8wsatKVO0MCBd1XUhvOnieOW4ZB3T2pNXaClA69zQyv8lwQH3lurVtQd0h1X
e/DqlYntW3L+pTnutVx9+LIuLbBnWY5blhavvKU5eoZFjnu08m7n47+bKf1l
x63Tf7Svamoz4knves7LteYNv78p/Sm241YvePjGps+a4N/f5rh/rYy/eKBG
E+panR14m80aU1/sqn7vE43Qtb7bcbOqd75j84WG1PXud9xynz+w3nYbMEfx
gAMXK78B/U4POW79z3acer5bfezJQMf1/352dbVZ9ThPhjvuiuNbR8+pVo/4
5UkHjsPl2sQHz3r3P2HnoTvcWtQvRinefLOa8NRHO250woZFE76sLuQ+HOe4
Vcrw4JnVVN+DwxzXu1Xoa3vVcUOjH9k+I1RZ+UeOu+at6Oypb1SkjvuW93ys
2h/1vVie5zXZcUvuywpXFuXo/33XcUf0jt3rP3UtAt/LceNOhMt92uFyRPb/
zXbc/8pHHz70wH8R9rHjZssG7PMRGdd/5jBH8f4/EXSRHHfj58sm7rhyKiLz
vAscd9fl+FlZ/Y9GZB1+oePe+/q5hxpfOxiR86lLHPdG/IAtiSd+jsj7v9Rx
78wv1/XRw1/z+V877rS6C75e2vKjmIz3lnvf9/UP4se9vC3G+e64OY0WtZ64
e29M1s2/dOBiNTr6v9eHzH77aLdqx2NSB8d7v2EXBy2xQ2di0m5/67g7W7Wb
9uH6f2PSfq5y3BNLpu1+pteFmLQD6xx3Vtax23v9cjEm609rHHdV6frnTp2/
EmMO0WH/fn4jJu2P97qvarWjf+aVh/u6xVtPpVumNv29Arzbjd76LatDfViJ
+YrVjju67B98Uhnu+ibv+3/3yrcvPFFVcfgcd0yDfr9e/6Ua5/YG737fvu2v
pNo1mA9Zp/QG/qgJf8N7v9v/2v7PtOdrMx/8o0N+8q86ih/guLVXO94Sqce8
p/d5e07ub3v6fD1X1pO3Onzu/Pr4kd7fL5pfmFY51EDxWRz37UqffPpgRkNX
1mHXO26bCRVGxddtBB/S+36SHz6uETpprqM4OY3Ja/7guJ+vHPGZ0bEJ81bf
OW56uXUFA6JN4Ut4v7dM5rbF3qace97rfX5utuDDCc1U3OC4j1YMRyZ2bk5c
v9Jxv2o+xD12rDnzkd7r0k/Z0YJ51VU391tL/v1XDtxxvRXzX994r4tvPu9T
rzVxtbd+ip7yLGD5NnDhvPVWJst7Y2QbuJDe6/L8yWzLfNNy9flN28Hb+9Rb
n1VqX2s4uB11g/lK/+LbduTxvf1y2+Dw57WT4shje/sp6enmax+bF0ec/onj
fnql3Jyi8vHoZn7ouHtnb6nyjhnPfOD7jtv30eKz896JZ97bez3nlfE/rK+c
AMfL28/Sb3ouAR6Jt/+l3f0pgfeb7qD3mp2o5r0d7vvERFf213nXMr6sloQf
/4rD3HS3JPirnj2Sff0fJcFHfNHBX2qcrHSAHeYm+yTj13j2kLppMvNqnj2U
/nEghfd5ymEu8fUUPu9xB07HcTWfNthR/OdUeBf9HfJFX6e6cmyij0P+7EYq
efC71ft1TmOeu4fjsk/TWJ/etbSDV9Lg5HVxmAt7Mp249xaHOcIj6ax373yR
3J1WGfBlAg71hHcz4HQKB3/iXAb8Ep/DXNOgTM7lAoffPTeTvJh3Hsr4omEW
87lJjtI7zOKciXfgra/JUrxch3xIo2zqCA0dV/J9hmeji9bIgWN7MBvdpWqO
K/PUgRzyVhUduB2Tc9R9snmeF3LgGV+2mcvMyCVPesaGA987l7zJaZs5tudz
Fd/Sxi4sVjq6nn8i6wc/5cI1/s3GP62rOJk/2szNZudR19pgu9QP86gTeCet
XJeT89gPZdyrssf9bR66eJ5/BRc1j7jzc5t4qV0+vKI5NnaoUz73+0Mbuzc6
X/H6b/qf+a6Mx8YrztPWfJUnt1mPV/LJY45W/lh2gaqL2NznrgXwVQbYSk+4
wFV1WOJLt8BVdWTFZy4grulmU0+5VoAOUCcbOxMphEtr2+hB31Xoyj4DofSR
3iqkbuC3XZm3W16oOOWKI/VnIfz4eJs5xeo+3rep7cr+ult9zHvWsZlDf8in
5ktt9Axf9ZFXuKK4n9/7iLP+8+KHsr60Sz74/l48AX+1iPX+p4WeVPsi+DI7
FQfqoSJ1X5W+2Lsqb73BcumXU9zb7yy4ileKsDdLFScp2Q/f/hPF2ezkJ8/+
rsV6GOKnLvOeBUd8quLDj1V6YOv91AlGW/Acz6n3G670D9oUMz/6qMUcsyjG
b79XcTmfKnbL0iObe1jMCb9arHSbFbfKLWY9hy04QGeK2RclFvaldYkr60V5
Fva2Swl5y9YW9mBkCXamsYVez/sl2KlqFvZjTQm/+4YJX/3vEs7j04pT26qU
vztlkp8tLYVj/4vi0D5RSty71aQ+M71UcUjNm/kovs9yk7nvXaXotC9U+YSa
AfKas1R8nx5Q/CSTfHrnAHHpRBP79WIA+ztMcXfnBqgTDFT5iz0B9AgeMvn9
JwPwge41VT0oSJ2uo8k+CQepUwdNfscjQfhquaYr++ZfDarvZTIH/k2QPGlz
k3X4900+vMn53yhE3bmCCdc6EFI6g0pvoFsIf+mw0nt8NUSdYbeh9KdD6D6v
MdBf2hDCXnxhwAU7GYLvOt+AA9Y47Mr82McGHKz8MP7AG4aKZ8Os9xcNuLOv
h9W6MOBGfR2mjjHYgNe5Mwz/obdBfa98BF2BOwxX9nFlRXguxQb5/q4ReAf5
Bvb2ngh5+1QDXv1rEe5PU4N8/zcRzudqBvn5vRF1f3TqsRWFKwuWJ5VeaRPB
PPgu3ZV52kTFT9+o46eVCPJGqxSHyBbkORfq2Le+gn/3nu7Kua7HBHWLqTr7
bbTg81/QXZl3miTwzwbr1OdnK758X53fu0xQp+umq7llwXmu6fzu3YK6k1/n
/P1DwOtKUpzwa4I8cXOl51pXwx+trpMPa6epuFzjHM3Q0Bc5rHHfhcY+26vx
PDtr1C03aCp/oql1qqF/+aSm/EMNO/G8Bn9xskb+6i0NHtjLGhzyjzR0BEZo
cIKWaOSxHtLYpxs1+B3e58h+ll81+gQsDTt8TIM7X6ry85c1zr80Db+tos7v
ra/BHY7TXZm/vS6wT1k6ddqzgnOwRCfO+0PpBd+iK76j4Jy9S0e/wHsO8Jp1
+F2rBPXqYTp5yRkCDt1rivc+XnBf3lG89ueFK/lan6t//7AgvxvTOVd7CvKD
P+r8rlsFdny3zjnrE9S3D6vvnyHgpJ/T4Q80FvjZ3rqHvyPQH2xmKJ3NCHqd
yQbr/osI+XBvX8ltNzNCfdww4HE8HmHd36l0Wbx9J8+Je5TuSX6Ec3OA4cr8
Z80IXKfhBnWZv8L8/1cMFS+FqbfMMMijzgrjV85VPPZRYc67mOFKmdC71Otr
DfwEX5j89y8G/kL9MOvMs3PMi4eof/1lwIdYHVL1J0P5UyE4PlWV3R4UIr/c
zMSP8uym9KM9uyw5L5kh/EKfOmeqhzi3HJM+gD1BrrubPI+lQfKn3jkg8/+z
lG7HEBOewMNB+qeeUHnxzkHyb+NNxdsOsj/eNuFh3QiodWVyju8M4NfMM7lf
CwJw274wyeOOUdfrTPy6BwLEA9tN4qFAAJ2G303Fzw8ovUeTutD5UurTF03q
cptLuY8VLdbVNKXLUtvCnx1Sin5vK8ulH6WUOCXdQj8grpT+Kp/Ke18oUXrv
Ki/9a4kr5z86WPSdzSiBc3qXhT3y/Arpt/az8KPvL+HcHWHBe8gscWX/7EgL
HmHFEnTWXrPwxy8WY5+mKJ5mrBi++EcW+YnpxZw/nyrd2oHF5LOXWfAnosXu
zbw1+tjF7k2ep4yb9vnh1O2xqDt94ye/cMRi/bznxy6ft4hDn/ETj5xVfE3L
j10sp/LKiX72cy3bhZNYhM5KMxs7sqcIfzbdxt7NKnJlHj5J6Yw+V8TfeX60
zOfcVuTK/nHDVrrKRUpPQMUh132qnmDjP/3gwz/2/HxZ1/jEh3/gxQWyLveY
j/d5xFY6Qj64LU/Z5B/ifK6ca3jFZn9dKaSfa4LNut9RCI9/isq7zy0k7p1h
w1OboDhInyte7+2FSrfGxk62LcRPWGlj1y8VYBdW2fSxrC/g+W+18bvfLsDu
e3GanBcbWkB/4h83dfAK4Iwds/Fvmhawr7zXZb7yQr4r817nbFW3yqceckHF
He/ks5+8uFS+74P5xC/etYx3ovms00ZKp7JJPud2W4fP+StPPT9H8UHzXObJ
lG7kjDxX9qXkOvA7euYRn+U79Fn489C/1pWOaaU8OCCmg67CH7mu7C/t6MBX
+SSX87u7Qx/WhFzW9b033z+Xc6Kfg39SmIsO2UCH/Ee1XKXL4fDcP8pR9UwH
fomVg7871oFXdz6bfokXHPq0PsmmnjHJIV5Jy0bPbapDnb9qNnnAaUrn9cUs
/O7ZDroeoSzsz1z1fhsysRPzHPyqJzPpd1vhwAtLyiQv+JXKo8Qy4J4sc/Cr
Hs5wZZ1njQPfslEGfuMGB57Wx+nY+Z8c9nGHdOzjNkfpvKXDDfzdIW6amca+
2+dwLhlp+EMH1ff5I5X+0RMOdmBeKn75GUfFcan8nrMOddW1KfgzVxylR5ZC
f+x/DvFs1RTqs1cdxVtOxv+vElX6EMmcSxWj+DkHk+g3qB3FTs9OIi9SLUq8
1yUJ+1Y/ij9WPQm74P29PE/GJHKOtY7C501O5D4mRd2Vo8uUaRPw0+Oj6NQ+
nsA51jbqNlg18b6vKicovfqo6w6vUvva6niVP/G+T1zw1+L74nlOOVH8t/Lx
6HflRd2dJVUeWDg1Dv2XQNR9O3nuzL2BOPZBJOpm/vPckrSqcZyDwSh5/THt
8OdKou7y360+Wmk7xY2NurPqlR/XeW5bzgEjil9yoA15Fu+6+YIPP6t+qDX+
Vvuou7egfYUdXVur/RV1u5b2uHFsUSulZxd1T8/f/9SsSy05r52oK/t9c1ti
nzpE3foHxt+VM7aFyt9F3SfnHZvz36TmnJ9do+7+EyXHRyU0J994ZxQdxfua
0T/VM+o+1uTCstUzmvL8u0fd4zumbP13XxP2aa+o6928rHDlJuSv7oq68fN6
hlJ6N1Z6TN7nN+/2jz22kfJnoy795A3JB3r//p3z96WmtGhIfHFvlOfwbAPu
1z03f299V84Leq+/POCJqouX1kPX8cEodalNdakLeO8n+Sz76nBeeJ+/L7tw
10OJtfH7+0bxk2M1yafcp/79rTU4l7zPm/n7fVbto9Wwz96/PzxpS8Kzi6py
Hnv/3n9tz2uNfqqMDqv3+j1lQP5AJeL9+6PEg1UrEnd57y/7ab4sT56id9Rd
eLLpqbF/XY/Jer33fkvLyiItr8XoB/buR4NbzuVPuBST4XG/KLzvSv/FZFzg
3f9ej+1La515NqY4K+jUDjwTk5wv73nt+KJvo0qvnYxJ++Hd7+37avT1vX00
Js9X77rHo58tz625Pyb9Ve95r//1wJ42q7ZTl+kWdVtMCPx25MvvY7If8o6o
+0CV9MMH+q+IkK/w3n+FP9Z39raIzFt38p7vHzXv9lZpRM6he+txdLd30hbE
DkfgP0fdSX07bksedzwizbi3no/s+aNn226nI9If9tarXKdJZyPSD/HWd6PK
l80PEi9E5L739tNdr3Qqn9vmErrD3n6TXO0zVyLS7oe8/XxsXP3vE66jNyGi
7ptlWKBr5Zgz8/79yVYVl+wKVGDu0hd1/zBX1kiLVRQyj1EadRtmllVCK9NH
5e33jlb6xKxKVekzzIy6m/uPaLOvdzX4xt7rWT1PvjLmQnXmb+Oibs17zjWe
07wmdfvEqNukQ/+UFw/XglfeLura1V4rerVHHfo4Wkapk3xfV807Rd3IpxeO
Dx9cj7nAelE3wzdyZuMe9YXUc60ZdecNTzi7oW0D5n9qRNEv+K0Bc0R1oy5c
q4b0TXj2Utavwo3oW7jmuCNftofVu9JIyP4Cz14PKhNaPtdYze077o57W4x9
7eUm9B1fcNysUw+Ni9lN6YP8w3GHW2diU2o1o+/GO0/gYDSDH+Nd73z85yvr
pjZnDv6Q4xa13TV2Qv0W8FR/cVw5v7SgBTy2nx14nFtbKv0Hxx12tuu4fRNb
0Ue30XE3tThfb9LfrcTNOtfmi/81b/p3ayHzJDHHlVyvBW3os/DO190f3NVg
5ti29DEsdthvVdvBNVl80z9qR5/Hh4474Yf1y2cdaidkHWeO445teeZS30pq
/usdR+n4xTE3Pt1x9bgKdWadiIPvPM5xx59eM79pQTx9v6845NM/jBcy//OM
4z5YtCExoWoC89DDHTcha8qXCbclMEf5uOPGPfXRthELEtQ8lKP8tkT0Rh50
XDmf/nQic7D3OPTh70+kD/IuVffJSqJPp7NDPvrVJOYwb3Xo+9qdRJ+14aj4
KJnfG3Tg/72fTJ9njgNf7XwyfYdZjspzpQi5Pz1/Udbzf06hL7KZQ57x3xRx
U8dbxofdUum7qemghzcnlb7DqzZ9fklpzM9etDkXnk2jr8Pzb2XeZU8a81rH
lf5JYrrqw7Hpc5uczn7bY8OjP5NOX57nb8vv1TmDOd91Snf7wwz6EGM2ectz
qs9mqU3cNiiTPpN5NvUHN5O+hpm28rMz4Ze8Y6s5jCzmfCepusx3WXC7nrXx
k1pm0wf8pE0f0PBsQX5S1Wm+zaYvqr9N3iM+h76yXjb+3aQc5gg6qbrDnhz6
ODooPY9GudyvoM2cSyiX9eDFW9LPHJFLH1yq0jGflsv8eJxNniiWyzxbXaXn
UT6P/VLdxg/LzUPf4qJFfqRLHn053jV1sTz6BI9a6EF+kAf36BcLHbDdeczV
brPg/1fJh++4ysKfTclnfSy18Mv65CueqopXn8nH3n1oKR50PvvjTcuV81B7
8umrmGCRt2tQwJz/8xZ5B7tA8c4t9s/dBejpDFK61+8WqHlHi7hlSQEct9ss
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
Qvq2PWE5NXP/qrvnkabg0dy/J+PQnibgfidX+mU0Yb48yXLM0+8NfiqtMXiG
8ZZTfdeXz3b4MJr6b5x6PnMbKXyM5WzZMax6WdtG4DImWvgjTW0gVF/Mebl1
q8ljDtVX+FLL8XWotnfvx/WYE7rXXyGvv/TbOuDK3PelX8iM2uQ77vfVrxCi
eb8mc0P3/WBMXPJHDaLAk/zHcto+uTflzg+rgy90f1/Tk03GzrpUlfg1Wums
jaoC7sR9fWtr+5c7774Zkn7N7mvJN6lxIyTxte737e3vWXndfy0kcR7u85O/
q83lELqx7v16o9/xrDPnQ3Ke4j6vlU2/va/a+2dCMn6462drTIUw0ImQxGu4
66dhek3bN/lISMapgZazLOrK6/agvSF5Prqv6x44fv72VCck+1O9LWdkr52P
3HdyXbnMk9z1Ht6//skHP/++XM4J3fW6ur9zf/vXDpXLfnMvy1m/ft8S8+SJ
cvB67nkyqsvC5tXPwPfoYTk7l3y+9EzwfLms+7pYzt1LBjT8tNrlcqlLdq/y
R/j8Srnsu7n7b3ufPn8OP3u9XOaxltK96/h3ufyvYTlHF6XtTr14q1zmSe77
44f0XlZjW1V0Ikvd8yi7wsi2uvJFtBx8EGtQx7iv251beWlRh5rw7wot540K
WaeltejjFVnOU+7yr3a1NnVBnvv8fg56TkfVo2/inm/2wb6/a7PrU4dmub+/
46QrSRtvQ88/x3LmvjhE2zimIXVUouV4Vjc6vnBxI3T0Wrr7p0ftx+6KROOb
1sy93xUEopzG8Kfc9yWfZHdj9Jnd81rmaa81ccChuufrA82bzB3a1JH5T5Ra
b02bocv/l+n8p0UFo6sZv/emST+2vDnn/HXTWbP0zLrEbi3Q7TtlOnVzuu7t
/VcL9DHc129eWn9h1W8tqYNOmo7k7+yKcSSv7rDpfBE6vKzrO7H4RrrxsEIl
bUCnVkofxnSOth/9SI3EOPRrd5hOhazQo2viHOmHu9N0/m7Sc/l7i1rTV9xi
OlKWaUgb5VdhOoM61137ZY226N2vNp0+16a93rhOPHrqbnzf0/qbnU0Hx6MX
+57pXBGZef02xpMXLjYd2bdslUBe6+YXt8p++WrysAT0++aZ+EX8LwHdyVmm
8+jWZodP5CeiX+LmL8nd4nbeXJpIXezmNyPWZqUU3krEN9LNf9YU3jvjz/uS
uJ4xpvP6oBv3dT2QRB7e18TvN6Ed666f8mea2Y77f7+Jvvnhdo7ESdytdCdF
Mvon7U0HfkMyPlm6yreqppDnlimdmX4p9PXzTHS1v05xZDzPMdGlTkhFPybB
hNc8IVX5KZjwCL9PRae3gfILKEv7V1dUnhML07hfNUzqmaNp9KmvGvSrJqfD
X3PzY3Bq6ei4nlB68SIDf5KfDOZVj2Wga+nm3/I6zmVU9nVVvy9T9VUMeNbz
M7nOdYbq32XC715mwHOzstAZf8vgd27Iok8+36C/Eqf4qi8b+IeOzEZvc5pB
PvRdNjq5br0in0dZDr9ntPILW5hDn/dRQ+kY5aC/8JDSfe2WyxzmLlW/LFb+
Ep0M1s3VXOVLZ6ALmp6HfpHf4N8NzEPvNMtAR+SVPHR0Wxnku+vy4Is2MpjX
nspDB6+uQf83xoNvRjWD/7b30He+qHRqRnsUX1t3pA/qfA959VHlx7fRw/ny
vY5O1d8e9vcmnX2dnI9u8WdKt6ZTvtJZVfX15Hz4pe/qzIPW5SudTh0d5eP5
6Oe79bfE5zX0ots8SXdknzjgRdd2mA5vfqAX/5O+OufmHC8+J9115nsbvJwn
hs48/YaXvltAR485zUffO0enPmjvQz84UfkBDPFxvjZS9fxrPkfisuro5Oub
ffAd/9LgRV/yOXJedVFzZJxOKWC/HdXQ1e9eQJ20V0OHdVKB0gnV2K+LClj3
azV02vep95dr6B79VYBe5xylP59ZyPp/QYP33qWQvHScBl5heCF1+GMaOsRL
C+HXPqR0ajYXMqe+V6PerlnEHN/W0JnLKUI31a/08zsWMefJ0dBPf6rI+V8d
d2W01Fgn7xUpHwGN/ufPRVx3NY365+8i1teFCM/H4+c6jkRUP8jPHGtXxJH6
MU/7uZ9fReivLvezn1aqft93fkf6iS6OoCt2yU+f5qUI/qkJxfTdpyrdnDuK
0dMZrXRsRhbznAZEWNdz1ftdI8SVHcWOrF+sCPOKs8XMWfIj6IU3U/oVqRF0
YrSAI/sfzSPoaT6s9DHqKB31NwOcN+fCav4U4Pt/CzuS5/VbgPN1X5j+fHSQ
eOooHRpvEJzGqjBx8cEgejbvhKn/XwhSR78QxjflXaXzPSkML/lgkDnLsDBx
50YQffi+YXSms0rQn74jTL9WL0FvtzSM7vjwEvQZ08LwlBeUoOfTKuxIHOKq
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
0P8BocrcCA==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxEXWWYFFfTxWFxt0XWXWd3Z8en2ht3CC4BQvAAITjBggYieAhBgwYIEpy9
eIJLCE6CBXeHAN/te5r3y588zcxOd9+uW3XqVNXp8A69GnbKkytXrl4VcuWy
/l96FDsw/xeVOpT8yL1+nIv29cj8cuM8leJbTdn1bJOL3o59ev70LJX6/zOn
1OKLLur/WWixf8aoFBI6t018ETc5vkgOrz5EpSnXHlc/EXTTwzF/NN7ZRaWS
g5wrAp+4qXi91VM7tVOpWctfc+4Oc9P5CW87vWisUpOdSxfVneemq4t/2BPm
sv/+qJvOhQ5p78hS6Xr7+X9lvnfT8zh+IdEqjV3S7IAjykNPJjfqF1VBJV/d
49+2CngoT+LY8mcLqFSn3KSat/t5yK0ZfV49UIh/+k6Z7aEM67+rCr3c1XF5
u/UeuvT92DEtTirUaXm7xg1Pe2h7w+nhk/cqlO/GpLh7bz10f0gwq80WhfpF
zXj/TTUvBa0LX6TQ4FGptX9u4aXGDWPnjf9Gob/rfT2jZx8vzjfW/v5cL0W8
ff75P/0U+oovw9L1Xns9+Ocbyr05eN9Lp250TXzeTCHr9LElfbT5P77AhkJH
xp249E+ij7Z0C3k1L1vBeWv78L04hV5c4wvSz0fWY4krq9Ctjavz3pjjI76q
c335FFpW5ph6hvHj+t1mf3FXpqMvGl1dfId/P0x69PE1mW6eXfm6VTE//Rtc
9PeOIzLxi/ljd4SfFtelMu13y/RYOtr5lOGnjq0v6HnXyDRv/JrLtz7306mQ
LhHd58k0/2X6v6um+WlEvr1T0qfI9N3B4WbOdj99PPysf+CXMtW1DOian7g1
PO3eU6YrH1XYeLxkgIau+q3D8PYy1i0tQNxqDpYMylTK6dveUA9QVdcn6qfZ
Mh1w7Pk1ZViA2l0/FnE+XqZdX/EH/l0Az72sTAUfljfrbwvQIX7aofll+mYe
v6BLAcq/8DtP7nsStejo/bve2wD9PnPr9G/+luhnblZrIoL0il929CGJdh6Y
r/2mBGlDNreELRLst1uQBhSJihu2UiJupeM+HhqkMyP66lOnS7jfxUH6r2Lf
06UnSLSbm0/jE0FKVqrcudJfor3v1g5+nItoR9qshIqdJNpEI6/sL0RUuQG3
4AYSbfh54P74ykQea6GCElnb6/cYwnonStTbeuAuIm7tTdIqS1RiTsaC9fWI
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
4xXoOtlK70Fxi4psJ/DcHPeJnauQ9esc28lYlnl1WZ2LFbK/KcV2ji64NG15
8HIF+SDb2TFj1Xfbav9bIc/nZJt8yq3XK2ReIMm9/4+feCOlalXqHO7+Tq16
//27dleDo9jB3W/7V18a8XwNuN9tbOdYowGD6s2pid2Pc5//8Vs2lw+vDXer
mU3816yu4l/YzmLfoXtXVa2vdHht59Gkc9936tIATrVr3+Q8W+NGzJPXsOEK
PtaYOOKq5Tx07enfVkxrovK+ljN/efzG3r2aKs6q5SwckrpvaLM45qVOuPa6
QeBSx01x5PX/tJycUE3nkUnNOOfc63d/GjDg3Mjmip+ozqveLZgX3mspPZqW
SofVcsT9zdIu7WmJndxuMef+ZCviys0W3Iv+rRXX03LWV2xeNSK+Dd//J8up
HgpPbfJ7G/x49/yaM6fBCy9daov+xZcWc4CvtWP+erXlFI5qefFjvb3ii1jw
DnM6KM6opfRAOpD3XqD+fn5HeMDu+fuFEVOU6fQ/nrv+R8cbOrWNd2R/0wzL
GRsbEJkSj5853nLs2PjK0XjinMcs56+lTy2NCyQwjzvWcjrEBILmJjBP+KDF
+muUyLz9CMtxN+e4rg8lKt6I5bw57IEu3b9PJC97l+V0jIG7wknkiW63nNBP
5/affDOJuOUm93nF6vwnkpjPvEFxMc1k6h4hi/hjUzJxQJmFvlbTFPxsj0X+
YUwKeYRsS3FNUlTewaL+4EllXbZTXMlFqdTd4izFjU6D59fYQifkjjTivOum
yv+nwX/4x4QLXpBOnHfCVHpO6Y6cc/1L6YFdSYc/sE/pmd2WAad5t4m/8H4G
cexmE/3FFpnwhn4ymYt+NJPn95Xi1GzNJE7/zGTdlmWx/t41mVt9N4u6wFz1
/c5kEcfOUnz2O7Lhn0w2yad/kE0eYJxJva1+DnXWx0z24cs58NyHmtQHDufg
Fw1QemjhXDiVA01H9qs9k0tdoYcJz/lSLve3c+Xf5xGH+k3mQr/IU3kykzn0
pvnM12ebSg8lH85xB5N93zef+dZGJutuRr7S0TOJ39blOzI+qmLCyb2ej07n
eQP+b1IBfOCjSu+ul+J47lFc3XEFjvS3fzFUfrUA3ZqvK/X/CrB/qw1H1rFa
FsL7XGY40q8ShczjzzOo39xdiF8702D9zCyE0zvVgNu5phA/e7zB3OrFQjiA
ww30NDsWwS0daChuUBH74RYDezmuiDxquUE+eXmRilsUl+bXIvhJZQachfrF
8CoyDLiGRcXw+eLV7+tXrHhIBut+ejFxVjWD+vanxehqXlD5hr+K4Tge11l3
jUvQtd2pwxmwShyZT/tJZ655cAn7/2udOeo5Jdi3T3RH6jx/W0JctUR3VB8j
+/llnfxwWw9cw4k68UhXDzrPY3XW2dMevtcQnXr0Mo+TGGuEvEN35FzNTg/3
rbvOcz3rcSR3KazeL6cUrmqOjh3vV0reN01nzvXJUuLmNjp6AO+Uwl2tq8Ot
+qWUedaLGva6oVfpEGjUb3K8xOm7Nb7HXV7+/0aN+HyClzzJWo360gov88pL
NerfB9S/n6UpPm0ZekuvanDC88uoU4xT+cJBZczrPqo5ss71SBlx9V1Kb3RZ
Gff5Vg3O6M4y6kIhjf6Bmj41r64prpcPHnInlZ/rqfQemmucQ4/7nPc3uxu7
toZdfsuHPsfJCHZ7q09xeyPsm/988Mu3qnxvoZ88aUUETltfVRd5L6Ly8X6H
PifFrZ/rp09ipuLWfOt3ZL33CcW5OeOHOzkygv1tE6jM62KH9ADzyeURuCLD
A9hLX4Tz4tUAvOHMCDocHwfIK3SIoPNwNIDuSAP1fudUHeUfoXSggtTxDgs4
8l2CPKctgvPl8SB5pq8FuheLgqovQvHn1wc5T2YL+hFOBonzpwr2YYsQegkP
C9a9PwSH+W7BOTYohN28RXDujA1Rlw4J4qG3QjyHXEH+Y0sIPliKQE+5Tljp
DAnm/uPDcL+rCLgnvjB2c3OY9TAqzHpdGKYePCWsdCTDKh8VVnXpMJzvTWE4
zHpY5VfCnGOXQuj9uJ8r+2X/DKEv1EnA8/02xHlWLBQ3XOk/RwXfZ3hIzXEL
zuHOIepx9wk40cUheMIPV9ZZguRLpgvywgeDxPcLBPPqS4P4oysF+lYzgnDi
vhI894FB5v63Vt6XIHPlxwTrqlOQc+G0gCd2LICeY40I9mRtAN5+c1VXWBBw
ZJ4hPUKfxBMB/KGSCHXXLgHm0DWl15AaIH/cO4Kf9J+fdTMkQt/EZj+6bo9H
4PC/53dkf/vkiNIR9lOffiMCH7qnH793QcSRczIeP5/3eYT1XsPPfdmo9Cj2
+bj+Tek9LPU5lTrLkj8ww6f8+Ah2qLfPkX0RdTWnUn9d2r/2GnyIBj6lR6/B
c9up9Nq9GufEwjL6LUwN/vvEMuW/a+yPXmXKL9G47/Fl7Jcx6rpKmSPzNM9o
2IVdXvo/XtEq87yKP63B63nai9+7UoND3MeLXfha43vlu3ZcBqoaz7uxF+7I
AQ09lJ9K4aSc0MgDvlsKd7GGzn0eXUq+sKGObvitpehptNepu2eWwm9P19U+
8XAOFKpz9XsP+cCQjv84xaP0b3WVR/Kgn3qLTp7S5yEOGKyzbhM8rPsHlQ7y
/hKe+5M6dbr1JdQvX9Lx56eXwLmfpVMXHlACj9o9t2WeIU/pOrnnOlySEvjH
jk7f1c5i+qk2KR3nBcW8zx869nN8Mf7rMR0d7s7FrPvzuiPz8S2K6c+rYdCX
cqKIz2toYFc3FCldPFWXeKUInb7MyrpGkaPmSHnfQBHxQMhAj6VRkSP7nrsb
9KXtKuQcuc2gT2t1obKzii/4WKHSdTHYb90Llb6MwTnQoZD+tGkG5+LJAs6v
6QZ+k+tnohdmUEebqXTJlipd6bsK4Iq519Ie+wuox6014IU2Vv9+i8G6P5iP
Hd5ukHdfkA835Dflp47Ix887ZrDuSvIdNYesOOD5yi4a/O6tecQnNU38hEF5
nFtxJuds1Tyly2PCN3k/Fz2bVJO8a2EuegLFlXWQHOIJ1++X/u8jOZxLltKV
Ts+hX6uLiT+5PNuReUM3roBnk40/28ckj98oG92GYSbn8utZ2CP3WsZHeVlO
Zd1Dft6vmdzHKabSBcokrp+mdJubZqL78YrJuvk6g3ztOyb7vnMG9X437pL5
1t/S2XcrTXV/0/HnPzXhKzVKVzopJnHmN2nEOz8onbAhacQFv5iOnH+4nEoc
tctE/+75VPX8TNZ3QMWxbpwp+x6Op2APzprwbAalOHJOwY1TpX9cL4X9/J9J
38OqZNZ/NaWT3C0Zu1DPcoziz5/59VgSOpNNLKdl648+3z4zifp7S4vn0SmJ
dZ5mOVdWeXpNXZmIH+jG3T0KNu2b0DORdVhkOe/Xfedk9SaJ2Hf39RjO+Ie3
EpT+lhtnd9m/47cGCYpfrvIoa+OJq7tazv2tQ4mLRivOTtRybr46OnCv0wn/
u6flzBkoLo5t1Ym44E7LiWF1vjI64o/eYTnrD2xYfmR8B+zfvZbTNyb8O7s9
9+t+ywl3mN5m8d/tiAOGW47k5Fxvi7890nKmbfW9N2t8W77fo5azcUzb+5Z8
2YZ6+iTLaXLnjfsKv2uNHZ9gOdlZXTtHdraiX2+65aQkDerf3d8KTs90pZt3
X0vy1a9b+NsvtKD/eZblvKc/MKnd6easi9mWM/Vc6dtNEpqj7zPfQme3YTPq
Ze9YnF+PxrF/37Oc7SH3Bw1uSn/DB5YzUavRXtvehH6eZZZzw8aOg2umNqFf
4iMLXvTMRpwrqyzqmkcaUJ9ba1HXXlKfdeleVzxdPHDr6LrovHxvOc/Xfrnr
6mp1iGc2W077lOWbCuIVZ+dHC950jZrE+z9ZjnVXZNaHR6tzfuy2nGNPHByy
+e+qziQ3DD/4i+VcvtSmVSOjCvozey0n1i58pu+1Cul3/Wo5Naese+Ourlcq
ZJ3YfX3hvD03tE26VCH//pDlpMWEsX84WyHjgN8s563HGr/W/uHTFbKefNJy
/jhe5bkvxh6tkO75Uct5+odpiUOmHaqQc2l/W07TRemvrc/bU4HemuUkm3f3
/rbd5go5hnvectLNrEvVVi6rkPHXWcsZktZZSxxWEZZ+jPu67A//YntY5h0v
WU6iN/fgolp/hGX++6rlvH1+4oxz/x0NyzjoguUM+nxn+RO7Tobltv/HcpY+
cOHN86FzYdm3ddHdX7H5kpsuhukXsZQu6+WwTEv8azkXmkw7Gf/Qv2E5D+R+
Xgz7kjDyeljWe9zruCFnMqqsr0pf5RWlo76sOnXn6raz592DBdVfqUHfsvv6
3Jm/l665WJO+1P8qddJrU+erajuXu20YW/ByXeomNW2nZ/ZnH7fdVo++ZPd1
OybA8F0DIdd7bdvpIRMfjYS8fzVsR84THGkMD/e6ysN+2IQ+i6qKTz6hqZDn
qfv3A2PC1tE4+g6uWU6/GCD8chx1Ffd++npf/zO/ohn8Rvd6TExAYE1zOBNX
lM7lTFU3cX8PXJSWzAW790f6xe1b0efk/n3nyGevFae2hofsvt8mT+mitKmt
6XNw/37uim+q/7iojZBxtns9VP/WO66oLX2I7vP5eObaHmfrtaOPx10Pklvz
Y7v/6cbX9U7ILJndnjqv+/fT3pwYPDGjA31xf1rObcVz5jTo1pE+R/ff33jT
Tzuu/NGROT93fY/0nnu/bH8n5rCPKn2hLvHwWY5YzvFQlSVdp8bDS3D/vlGT
DVsPXoqHG7HfcjwxUNpTCfSx/m45pSNHVehbE+gLcPfXCC2hWqOCRF7fYTm9
Yo1zMxLhMfzs3u8YJ6xxEnPl2yx0R3omwTlY79rvpfPfq/tRkpD94e7+Z94j
Ga6Qay9k3/tbycwF/2CRR6uVAm/2W4s46I4UeB+uvZH9XctSmEv+1IKX2DoV
TsTHlspTplK3WmEpXbFU5jyXWMQ5vjT6TBZZlXlcuBALLOxo23R4K3Mt/Isp
6fTZzbHg4R1Op6/ctc/o62QwZ/qypXSEM6hrzbSIw+tnMicw2SLeuj2Tvi/3
vJBzJ04mcwuPuedrzFAXZdF3PFrV/R/NUrxiy5H1pvNZ8DiHqbp/t2z6Ltxr
mW96NZt50XssdGha5FCn7G9R/xiUQ9/BjRZ1uIM59HV2s+jz6JxLH75deT8V
h8c9f+WcdY08+ljCFnm4+/OEnD8QFny2ijz2e6l6ni3z6QPNVH/vyxcyn5Ri
kdca8f/Xcu73zXx49K0s6tw78xVvxiKOupxPH7frj9BnXkBduraqw/QtoK/6
qkncPqGAud7LJvmBNQVwkU6a+AkXCpiD/dsk39dBzeseMKmvWIVCxhe/qL6b
6YXM+f5swtf/sFDIvOI3Jn0UhwvpS19r0ldQrYi+pY9M/LSiIrE4Jt/7oUn+
oF8RHLKPVd/N60XMQb9tqnxQEX1Es0x4rCeKFNdB8d/ji7kfz5nE5Z2LmfN4
wsSPGVcMf/Fh5e+uKqbv6wHFo99ZjD0bpPp2qpfQB9TXJD9cVsJ+7GqqvpgS
+LHdTPLAk0rYPwHV5/NlCfslaLKefy4R0p8sNIn3Wnnom3bjA2l/O3uE5OC1
M+GvjvUwv9/aZK7mLY86n0zyoT944OhcM8j31S9lvv2MgV+SUcq8+QmDuLpX
KX0wfxjUCyaVwr/ZqXRdF5cqHoLqA/u2lD7GNQZ1isZe+no/NYjHS7304Xxg
EA8M8MIJecdwJHdkhuLyvG7gB3/g5Xxz4zs5N3nEy7z7Uwb1raQy5v5HGcwN
+cvUfLOh5oTKmJtx40tZj52lOD49DOz9hjLO854qnj1axnkTMMhrNPPRh1hs
kK+1fZwvaapvbrBPyHM5zmAu42XVh9fSoH7i+OCJ1zTw06746ON342/Jbe7g
F5U6s3J9dvXzfffqSv/Zj73arhMnTPczb/udTl1jjZ+51C+UHuQxP3Pay3T8
wOYB5qjn6ORdjQD8lZd08tYPBJh7maSz3ucGsJcjddbzugB9ySOVzu2FAH2h
/XWnkssj72tPxeMPBlnflu7I/ozeQSE58ppOfm1SkL7ZQl31PQXRK0jSmRPa
FaQPu5mOPfs3yP5ooJPP9YSYs7iqORdistv3huDh/qURHz4Zgme/S6M+915I
yPzmBk3VA0NwW9ZrKm8UFjK//5mm7lcYbtUSjfq3GeZ5vakRzw8Mq7khDT33
18JqDlBTeodh5uCHafR1nglzXvfT4CdXE/BKyjV069oIuHC6+j7Zgj4Wr9Kh
9Qnm0NM0+PU9BHzZlhp9b/0FczdVNFU3FXAF/omQ/3hGiEo9WVk/eEvAZ9kZ
Id+9XMAT+i5CnOoI+ujWKB3ZzYrfszJCXeZvoXhEEdbff6qP+cUIcVX9COth
bITzoUME3tPICHNkRRH61vtHlC5mBHvRrTKfGWEOIxKhrnq34qvnq3zq0xH6
+DtFHNnvMjkC56NJBD2b+RH2c7UIcdLKCOfxKYGu+w8RuGW7BHqe2yLsvw2C
ePJAhL6hdYL65j8R7O2Hgrmn2hqcnzmC9d1aw3+aKtCvTtUqOUfUBf0aPLQh
wpH94N013r+PIF/cT/GxOgvyIMM1IddNmcrXP6vBp8pQ+sqTNSHz062VPvMC
NTdQVxBnrtaIL46FyZ9WqDmATWHqv9s17PuccGUelT7/mWHys1c0+taHh5nb
qa/zfSJh8jZxOn1gCWGVb9bp4zwbIr9VpjMXuT1EPapcp492TciR59RNio/2
RsiRfvXdiuszUOlvj9Hhs3QNwX+fpBM/pYY4H6fqcEUuBom/Fumct0eC1Cs+
07EXHwepj32r+OOvBKlnbdeFzPsMDZL3/k0XsbJwn0iQ+so5xavLDSr7oHh/
/wbIu7Y26Ds7GnCkOxtvoD+wJIC/mGPAWZkZIF9YbBBPDQlQV+uqeIWdA+S7
exvw1VsH0De538CeX/WTdxltwOX41U9efJLB3OYKP32RLxnMeU3zO9Kvf0vN
Id3hp06w0oADE/GTH1ljsF6a+qkb/GDAHzruox9ht/o+3/uIN48b6A0s9lHP
uqA+f7yPenhVE/vR3YdeS2MT/rzHR/9SO1PxMXw8/yzFr/6rjDqW11R9qWWc
/8JEv2FyGXXj3ibrYVgZ/Tz9TXgd4TKlx6i4P/XKiK/HKm7OKS99wM+b+A/7
vNTnXzfhZ8z3kqebpXiWU73k/94z4Sb08FJH/VxxgjQvefb1io/Z2Mv5/6tJ
vH+8lDrc76aQfVjLSqlPnDLpg361lM+7YnK+3FdK/ve6CX8oWoreSj1LyHOw
TSnxQnM19/iHhzxUsgV361sPeecCi/X7oqcyDyhk3Xi4h3qOaeHvBT3UKbtZ
zJW39TDX1kdxgc6V0Pf9gJqj/KmE/omHLfyDt0qYs3jKUjzVEuzpixa8N7ME
DsF0xY/NKOH+v20xx3+9WOWfLThfm4rJs32u+NMritGH+cGCSzammPhpgwU/
/5ZipY+lOELZxdQvDlvY22rFStfZYq5qcxH28bwF/++dIuLJqxb5k8eLHPwK
m/jNKoKr0NQWUreuqIj8cHubeP1qodJvttHT21LI/SiwsZ/zC9mfHhue1oRC
Pk+3RaUOrtKlJd5sUUi971Yb/av/CvBv+6o55h0F7J+BNvyQ1wroMxxuc94/
V0B88KCaq7YKlD6YDWewWQF1OvdaxolVCtDjeNGGT7UpX+nN2+y/Zfn4v4tt
xWvKV30wNueXnk8f76c25216PnPrn9v0le7Ko0/sa5u++sfzqDtutolfOueh
j7PDFtKv/zsX/32PrThmueRB99twetNymZs7ags5L78jh/V70mbOfkQO9vVf
G95YixzVrxTFX/8l25F5yAZR1n/XbPrC60XhBzXMds7H3OWWUeZEPs7CvrWI
Kk50Fn07naKc1/WzqG9lR+kDX5hJ/JUZZc7ohkzi9VzFATidQT+PL8oc4rMZ
9I+UK25LrwzVNxFljml3uiPneTpHmUOZlE680DOq+Mjp5IVvjTJXeCANf8K9
Rh9E6eL2i9Ln7knD/gyKwkf6KBV7PzLKeuiXiq78aMW1qZ9Kn9XjUfher6ew
Xp6Poo/QPYU6wdNR8lXVUrCnz0XpU38rmTnVKVHO9/Jk+oZeiAojlobflUQ+
4rWoCOz2Dsh5K4n60ryoeO7zxuL+pCTi5bej4oma961/Z3Ui8eTCqOizaeGq
94YmEs8uioqf114JP9smkX6H9937Mbe0xRIngee/Iiqqze1k1RmeQN/pZ1HR
If71+d81TiD/tioqZn/Qo/HWVfHkp9ZFxTtjh/R734hnbuG7qNjT8h7P9zXi
qUNsiIrmP+UsnVSjE/1P30RF/b7nWywo68h6cF/Xa7TXXtndgTne7VHid7OD
Ix+bex3Diz+Z1p66z46oqLK+aPDRu9rhP/0SFXOr9Qs8c6StI+36b1Hx+0Nv
r+5WvS36iMfc9fFuzbwrndtQ5zoQhf9W0Zq5p0NRsfQ39x80aq3Om6gY8tmd
g5fd1Ar/y/33mT37D01Ib8lcx99RMbGOd0Lm9hbszz+jonjw0bn7E1vgv52J
ijq3P5Xwvr85+cL/ouKWX/q1nTS9Gf7DRff5b3l02p1fx3Fe/xNlDjcpDj2g
K1ExMCYMOrgp9afLUdEv1tB8rAn+/9VKDlET6tNVykW0Zf5TfR5uxFzUv+7n
ffnio4e6NySeblAu3suae/jREfWJ36qXiw+HxYRL6+EPVC1n7vy1OtinWuWi
3vgzDdr6ajMn417Lc2xuTfp4apejF9SlhiPPPff9ZL/zuWrkt9y/PxcrE9xa
lf5l9/ObzZ4+RP/2eoXMw8WVi8Ozhz3QZfO/FdJPca9T3/us1qc/Xq6Imcn5
7vf5aOcX4d/fv1gh73fzcuZ265yrkPmuuuXEH0+dqUA3ulx89unpL3sN/btC
xhnu6w+8u7Tp2lWHK2Tfqns9tkTct7jH7xUyj16/XAyZs6r9crGtQp6D7vuv
fSBGpllbIe1ko3LxzMXpmXlvvReufD+5XttsDEv/t2a5mPZzk5v/Kdodln69
+/r5f77qOu6hg2HsQLn4dfuhjPePHQvLupP7/RIOp20PdTgVlmNgNcrhTiSc
Dcu5I/f+xKhQSX+cD8vzo045PLnvL4Xh9JeLwMJnLox74WpY+pPVyoXUtW7y
X1jOV7jPX9Zh/FWYH3ef/5zza858klYNnoH7Ohz46synnFVcsC01mDd219e+
ReGrLw6oxby4ux7fOH3DtS+X1IZ/4r7+zRt3bayq1YWH517XynS/Qfv6QvbT
nI4KWZc9V5888l9RIesuzzYk7nP3T4xqNalzY1HJcUIXuglx9tGo2Nlje40e
l5rgJx6Pio7D2n/YsqIpuiu7ouiLbIyDd77HPY9aZd2fP60ZfBz39V5LdlVf
WqU55+hW9/z4+qkZ2fOaCylzvzkqjvc5Mvq2oS24D1uiYpc245m41JbkJTYo
+7ei5f84YOlnk4/Ner4Vz+kH9/fGCnd3tBZS9/rzqMj6/fvA2dptmLdyr7uM
vHnXwwvbcD/Xup//3kenJo9vi9+ySt3PjHbMI37s2oeb778o/mrHv/9Icahm
tycvsiQqYqrH12/pAI/Ute+PnAzeMWpvB6Uz4dq7WN2nVifOxbnu87n98Xrj
R3bi+b7knpc7rpdtSIuHY/ZilHzNpHjmA6dFRSvXPCf/HE/c8WwU/6lbAvOM
jyvu0UsJ6Li51/lxu0flXkggz/5IVIy/Z2F5RnoiebThUXH093Up381J5Bx7
ICpWL9w+Y9WlRPiEg6NCq1s07PrYJHQE742KM3NevzDg+yTygO75K/3fmsnE
Ae55LePHJ5PRQeoaRR9yazJ8uW5R8tttUsiju9eyj2NiCvNs3ii6EFdShOQU
FEaZAyxOZZ4+KypUHwM60e61zJP8nQq3NzHKnFM4Df5E2yhzuh+mcT/aRxVX
P13I/HeTKP7wHemqDhklX/5jOvNM7jVzbBlwof9R3Ek7g3nTszb1oQ8zWL/H
bPLdwUzuzz6beHdyJpzRXco/PpQJ5/AXxdnJziJO3GbD2XwtizhxnU3+fV8W
821f2nCrs7LJ26+y4SFPyIa/vbTy77PxQ9624c0aOeRB3rKZ816UA09shs36
upgDX2qKrZ5TrpD+9jgbzsPMXLjsD9k8z6Z56H08pPzPm/PQCRhkEz+vyuN3
D1Bcz/pKL+EWm/grMx/+TFcbzvrN+ejcuvECfZH5+NnCFpIf9lE+Op9FisP5
ez5+ZrrNnHX9AnizHWzmOoMFQvY5udfSDt5XAHe5ic0c4BsFKq9hCTk380EB
88rnLLgBvxcovpNFfSGpkN/5m8U6MgrR0fzVIh95i9Jb2Kz0e2YVwi/4yoLv
/1Uh82ifWHCT/iwUcq5yscXzaV6kdEctxTktQjfZvZbxce8i+AZuvCnn4ScV
Me850YIDta6Izx9uMff+dxF80qGWkMupUTHr/G4LfcviYvJ4XS0hx5aHFau8
tUX9/ali1mnAQmfli2L4KUUW9eHfi+HApln4H5eKyYu2sdCPLishD9JIxdc3
lRD31rKoz00vEZILcdZEz31ZiajUy5Jx8r4SeE17FBenhkfIOfEtSm8kxYOO
2VpTzbF7sENfmXAinvUwz/+BqeoBHuKE+aaQoOwNHsUHMJkr/88Dj3uSST47
TdV5HjZZP+Wl2N9hJvvksVK+Xx+T/NTrpfCee5sqn1oKz0o3mRM9WMr6yzfJ
Lzb2wpvKUvpkZV7ytJ2UftydXu57M5N6//NeeAr/GXCfV3vhSZ8zqM8e85In
OmwI2ddas0xU6tvJ/ENeGXnprw0V36k60GpDqL5XdFQ+MFQ9qgz7Ottgn68v
QwfgZaWvca6MOslThpB9ss195M0fMjgnDaXfcK+BDs4QH/ottyvu0EQffGtL
6Ycs9ynusoFezm8+AffFIP696ON5tjfgUHRU+gwNFZdb8+PX/quTjx/ph193
Tid/MduPjt0unf2wxs+62aITD+7308dRodMPUj+gdPR09kVqAB3St3Tu3x0B
7NVMpc8xIgCv5mkd7vycgGBORVdc5YCQ+c3bdb7vHwH29Y264uMGWVd+nX6N
7CDnbaqOPlznIHXsRJ1857AgfRZNdNbhzKBgHlJnva8Jsm6PaZwru4PEsfs0
xYkLMR//jUY/QmYIu7dGE7KuZIXIUyzQ2E8PK07/yxr9L6+GeB4TNO7LohD8
n9Ga4oqFlE6QJmSe9HKI9dJDUzpKYexHWBNynl2E4WLnaXBV7grDH++kofvx
fBj70UjjcxeEybNdjuAPrA4rXfaIyq+GOUc3R5gLrqb0FL6JqLl2wfP6KEJ+
Oklwn96JkD8uFpy3L0fId0cFelRjIopDp14fqt7/foF/1VtdjxWsXz3CfZ4g
0MUojMClelPg96RE4GO/p3R+4yLs368EXN5/BOfzJspkWScE63Sf4BzfIbif
JwV9JxUCO+n+O5lvWC54Hg0jnIdzBP0K7SNCzg88r/R9U5U+wxjBeVUSwd8e
LOAVd46o+WxBvu+mCPP/XgGX8L4IejSpgvNldERIGY6mgv0zSenyXgiz32ZE
VDwQpn9hQUTI/MSKsOLFRzjPJ4Y5N7+NUPfprbg/2yPkzbQwXMeDSgfEXVfw
YN3Pl3rbIeboryndkIqQkHXOBprih4XgXnbQ8IcGh+CcpWrwZkzF9SnRyMu3
DdFfIDS4x38FOY+6Kp3bjUH4yAM1vucrQfyN+xS/6pGgqh9o6ND3DPI7Jitd
mIQgz+EVDV7d1QD9a+4+RP86AEd7ucY5uyRA/XedRvw1KkD/0E9q39wWQPdm
r9IBTlf64H9pKi8aQKfuvAav+1elb15V5xxa6sfONVN6Eo/72YctdZXH88NR
SNLpa8j2K/0YHf/5mo/zKaJzfu3wCTmf3F1Xup0+1u8tOs/vSR/czH46eXi/
D07XGJ34JtlH/95EnfjlUhn6LC/pPOftZdjV15UdfbOM+t3bupD5iZFlnMOL
K+1qGVyVr5SubnwZnLXvdMXf89I/sF2HN/S1V8g63F5d8Wu8rP9jOv7VUC/n
0HmdOlPEyzlc3SBvGOelvlvXYH0dLoWz0Frp4r5Xih1ONbCL40uF7OsoMshz
31JKnOYxiCcySrG/IUP1MXp4n84G+/ZHD3bmZkPlbT30J/U34GOM9MB9v9+g
bhL2wGF8xMCetfZwjj5mUPc8UMI+mm7A3/mwBH//dQM+w+QS/N6FBnXKW0rw
D1y/QuZV00s4X5YpPY/LxeSnvzJU3aKYuM/1U+jnKsa+bzWoWz5eTN7iV4M6
brCYfoIDhopLiomH/jaoYxws4vtcMISaa+UcvG6wTp8qIi6qpXTkehVRD2tg
Ev/HF6Fb0cLETv1dyP3uaLLfXb9erlPXj5N98a8Wkq/ONKkb9S0Uak5Z6SEW
kqcRindZp5D1bZrYq10F7OseJv7j/ALsaS8Trv+oAu7D3Sb20FuAv3Ofybps
UIAu1hgTfuyhfOK4hxXP8u18+gOeNoWsB4zN5/e7fq88P904TPaxTTPRkWiV
z7p71YTbviOP+sabinf5cB79hguULl1iHr9vhYnu0OJc+mE//58OMvHLp6aK
j3OIC9eYKu7I4fz63uR88Ocof92kbvRJNv1+G03iwp7Zqp/BhF9SNRtOzEET
XtXELOobf5uKx5zF9zpqYgd/yuT+nDL5nQ9lqnjGVPpRmeRXLqo44YUMxa1U
dV4rg/xPdaXLeTidPFM9iwN7SDqcSDcOQvcnnbi1tUU8OzuNfsMkCz8kK41+
lWQL/+9IKs/VvZb36d5U8ngZFpz8JKUTmW/hz65Iwe9yr2XdzE4hL1Jo4f8f
T4abU2ZRt38+GT0vvwVvKCmZv9MsUeOPMdee3pjEudfZgv+uJWHnu1hC9muf
TYTj5F7LfvznErHTvRTPtmEi+hw9LTHd80LvKcsT4Gr1scQdD5/r9WyXhP/p
qH7V4cDH+w/HE4e7ry97a+bvpS/Ew0Ec4MalMaHTgnj8/3st7MCNnciHDLHE
kvufXnx1Xkfs0n2WGPpKv5HelR3Yz24cHEvTDqjXgTzNSEuU33D4RB27PVy0
hyxR/3Vn6Re3taNfw71u2uaWM9aktuyvRy2R1ezJJXN3tsEvfdjCn2nRBo7T
ePf3vZf63OenWgk5/znOEj9ea2Q+9WQr9FSftMRrD2Ysy5zdEn/afZ057BbY
ZTeOl3nF+i24b09YIlb2qBfXXMV/ltjep3qflN7NiJsmWaJWw2vN7pgap/I2
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
+FA2eaxUS3Eks6g3Fljo0b2QRX7Ubyn7l4V/Ylrs/32ZnH83WazPezPpM+ll
oUeQnon/fIfF+v4sA/s0uPL7ZtBXNtKiD7duhpD77nGL5zc/nd/7tFXJdyU+
ecly5Dm1N40515ctuFNPpHH+vV7Jo02jLrvIYm73x1T6b9631PNMZa72K0vN
oadgf1YrTsLsFKUPZBEvixTsyyb199tVf952C/s1JZnnt8eC25WfTH/aXsuJ
tXfP2pjE/fnbYo5jcBJzZxctZ9uSrLmH6yYpfS8LvvMbiejRX7Wcl179cU/T
bon0c9WxnSdiiaBjCZxPjW3Vh5+AP93SVvmUBPqjWtuO2XBR/38WxwvJI0qz
4Vb0i4cLkWk7z3QpHNWyVjz6cnm24r12Il7Osp2BsTdY1RG9gLDtJMcSvbM7
oGcTsJ3yz+89u7FlB+yNaSv9pfbkz26wnQkXxjU6d087Iefre9twZj5oq+yh
7bSzP/j23f1tmFu6zYaDkNmGOYt7bGdIDLett2Y/DbMd2a++rJXyR23ns4/b
xl1a1RL7MMp2AgV/fXtjo5b0mY22nTZ/DtcSBrTA33vIdh6JJfqmNmdu8Bnb
qTjzyaBXDzWjv2GC7TwaSwz/G0e/7lM2/Kbecaq/1HZkv//dTak3vWgT301v
gr7Fq7bjPBJ7gyb0N86y4Z0OakTe1r3+65bN5afaNaR/ab77e985WX3G7vqc
v0ts5gzi67KfF9pwpN6tQz5mue3IfvrGtYlPPradP3vecfPFO2vCEfjMdrr3
/qPqPc2qq3yB7cj5rjNVqQ9W2M6rqQvn7ZlSRcj58G9seJdHroXl+nNsJ5b2
6nn5Crq3P9pOLK14e9V/wrKuut69X79snj35l/Nh2Ve0yV0f6THSz5kwfD3b
OTpp0d/nnzkZln2g29z3/y3c8p11R8Iybt1iO9lzGm+Ou/tAWNYZf7Gdlye1
nZi88pew7HP62XZ+q7+hnvn5D2HpP+2xnQ9qp11rvWlVhcwrudcFnzY5NG/C
DxXSX9tpO4sGbiq6mLKrQtoZ9/q2y/fkW8kHKqT/ss/mvL7taIU8vw7YjqyL
hE5WyPPOvZYcp67nK2Sdwr2Wcz93X6yQ589B21nxQXFGzd8uV0g/9Li7vmQ/
+r8V8rxyX29+tNmjL42+XrHLdbM7HrGd9S2fbv/yiKpq3sJ20qVAQnV4qqds
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
cQ0+WRdBP0VtnfntkFpn7rqW8VKucGQ/UJKO39RawNFy94U8R+sKONymDl/v
YljpDeuqThGmnjZYx95/HEYPYIxOX87ksPJXdbjlg8L4eVOVTqwvjJ8yT6cO
3SkMR+B9Hb/rdIjntEYn7/ldCD92o06fwsoQnJfdir/+Sgg7fkjn+d8Y4ry8
oDtwdELMwdcwHJmPSAxxf107SLwZVPrpBufHliAcmlyDPqDFQfyMgIFe1rQg
+shdDXQM7wqy7qNKt7YgWNkfwD6rG1T3y8Cv2RfguT6l7HiF0kefYmAXpgYc
2Wf+huLrPR5wZP/eEgM7YwcU/79SNzYAX/xbZdfdc0euy22G0nfxU8/bbsCJ
/9j/P90hmW9/2v8/3rrsB7/PD8epuvIzAn50fOJMeBmN/fgx7ZWO1GUf/TbJ
JvZxjY+/yzNVnaSy/qx0mR70kU+60cQu+33wrW8z4VF19MFFHKz8qn/KeI4P
KL9oaxm/+wlTrb8y6l3PqM9/sgzu5suKx963DG7mu+r75JXh7y424eI3LcNO
fGbihx7xct6sMVmvn3uJazaajuQHTPFi33416YMa7IVrd9CkrhXyKq6+4qHX
U37YZZW3P16q+PUWfWrrSrH3TSzqiFNKee7tFe91jOIguX6qjLf1UvpfXD9W
Pue4UvTSfRbnzSEP/Ri6ijs2eqhXd7ao20/zwBnpY3HuDvWo+qWFbrvhwR8a
YmFH0jz4i8MVj/VQCd/nYcuRc3rflJA3mWDhr84vYd+/Zjmyj3lUCfWPhUrH
zi4hDllk4X+0LsG/Xm4pPZJi9tMqC//m42LqT+ss9CVeL1bng0Uf4pBi4uE9
Fn6YVazy4xZ6Ok2LqaccUTzcv4rQ7Tih/PzVRei/nrfYJxOLlL6zDb/3niLq
afVt/HN/Efn6pjbnUVwRdqyViuPduErWMZNtpZtbyL5341LJ43muED1qjw3/
5vZCuMU+mzqKr5D1GbXVuijknHKv5fz4/gI4/D1spZtbwH7pbfPvnisgz+TG
7TK/2asAP2qQygNmFNC/MsKmz+ZyvtLLsanbbMtnXY+3FZ8qn/001Ub/aFQ+
PPxpNrpw5UrPwb2W/WrV1PvNsok7duexzufbnFdP58GBWaDyxo3ziE+X2aqO
m0u92r2Wz/uRXDhCn9nct5ZKv+Ebmz6Q5TnoQ3xtc97dm0O8vsXG7/g3Gw7T
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
icxB/mUS372WgL08aYry84WTD3sSqLeeMcXPz+YuHv5DPPno86bihccrvSNT
PBQDe1zrRF9cTUt8+G6H/2Z16eSo+RxRFGvwfaYj8VQ9S8RkPnuM78B6bGzB
81rfnr6E+pZoOqLOzffvaEe/ZkuLfFzbdvjHLSzx5cqH9ky8ty31oXjFvZnS
xpE6MR0tuHCjWzOH474u82zXWlG3T7HgTFRphT+SaIk1z97wgt9sSV9RjuLK
fNCCvHuhpeaemrP/Si3xWmwc5adm/B6fJYL9n6/98ok45mq87nXjk5t258Q5
kgcdtITUIR3QlDp2yP295xYltri3Cf5X2BJfbH9w29VajYmn/Za4sr19/OsH
G2LfdUu82D9GXmlA3ekGS3iqnfn8yar16EPraim9jjrUgdzXa3/aeYW3fW36
lLpYyv7XdGReo1sl96gG+Z8b1PMZWA3/v6clch/8PDv10yrMHfeyRO/2m/69
/4VrFdIu3WyJiwNiAw9XK2Se7zZLLOr/z3Ovx12qgDPmfv9626aaN52vkP5M
Dwvu1abTFTKOvMV9PiUJSwuOHquQ8Yn77387eThUNvlwhey3dl9fNvCOkSN7
7amQ+7e3JaqffPS/j3t8B//ffb8DiW9+Ue2hl5iX6GOJO795eMCOKVvh+txq
iZSHhg3/LHlHWNpN93pjrTfuPvTBgbDc9+71tp6P+r8+djQs86rutXzfpqfg
67u/X/LxQufCsl/Aff258frinkUXw3K/3GSJf9fvfOu2ly6H4VFbzO3GXwvL
5+O+Lv267lXIk7j/vsrBNsXnG1cjz+D+/Q8vTBNf5laH5+A+n4FbRz9U+EhN
uEzu6wt3v3uw4Jla8Frd7yP34y118Pu7W0Kax7h6nCPu+vikbdyl3p/Xh5/p
Pl/0FxoK2c/pvv9jBbHKUmPycqYl5LhGThPiVttdX1tefTBjUxP4JO7rxHlN
4a+4118uu2tFu1fj4IO463PJ1SoLPC82U9xA93598vzMq8Hm8And/SDPP18L
xWuz4PfntEQXtMQi3vygJXmmPAt9hV2t4AMWWMwNDWhNnjnNQl/gpjbwUJMs
0S3dcBKat2Vfplti1l0bqz59uS28SHd/Z639Y8SR19oJWc/pYIkRD+944Isb
28MbaW+JDfVXTO82pwO8llaWuD1v0qh3fusAdy3O/fz2H7acW60T50JzSzQ4
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
mPgGHMoRas5P+QbnsC8FTdaxF/fI7+HFzcyx5xCneHG17D81zWHdPmGiuyqf
A/emv4mv+TE/+cAYE93PKj9+ol5eINfbWD/917dUHbKTH7+EhSb5SZaffusK
k3OxrB8uyVYTbv2ebLgfX5rkCyuzid8Pm+w7r2Zz7v1o4iN8Xza8+nMmz39s
NhzM68rX+I6P/oWXN8rn8ZiPvK66xXr+0Md98vJcydkc6eO6pKq8v4OPuMyv
fH+jffCevbxa9pnK+qi3e3m77CPszaJ+eZ8l5HztiizFpbKE7L+OyKL/1MdC
x2BnkdcMtqhbJ2fRzx9iwQu9kkmcON5CV7I3k3zidYu4961M9p85Fv4iQ5T+
ZYmFr0mHTOLIjyx0NE0zObc3WcQ9+zLw//nCUn3PDPbj7y3yjcYZ9A9+suDD
HEyHk3bcYl0/mM7n/FN9vnvS4SDdtOAzrU0jLrljcY51T1NcaJvzsFIa+rlq
yhf4rVR8+qJs8oluqexPSTZ+f7VSiTMzbHg5i1pynvhKfc1asp8U2+TBZ1OI
g9opH97XUtBrea/JE1OErIM+pHzPfkzmPHnC5hwYnsz36GsTV0QprtBAm/jw
YAv6F0Nt+n6DWnAuDFc+ZteTyBcn2JxDk5OoX79u83t2EnnLLJtz/0oi/k3z
bfLkVxOJK9+3Oe/1RBUv2ooHm0CdaZ3NvjQ1gbrEJhufEH8C+dfntpD9y93x
7Dt7bPj/PeKJiw7YcO8T41lnP9hiUbOFB5oujlP+Gd73b5RfdXjrOMVBtYW+
+97lI2/Ewok7a1MPmhJLnHzBFm98+PaINUWx5A+3beKDv2LUunHEsAjAem4M
epeKjuj92aStY+Nj4HBVdYTUZ38VjR9XHYe618ho4uRoB3+b5tFwxGIcEbVo
cMec7s3hrHmvhy+o13D1xmbUMVo64scvdt2uXqEZetRUB75ScVP2D78jEl5o
tP3ZSU3QGxQ6QuqvP2wMh6rIET9ET588N6Exej7v9bPHhVP/f1Fwtto53Ce3
kfKHcKinbGxIneV+R3w/4dVn7lgNBXVaR1zf0m70Py81oC7Z0RGJUw4El79Q
n3ixhyMaHFr/1emL9dj/nnZE3TWPVvvNqMf1ftwR47ud+aOdWZfnpLdD/LC/
DnWfAY4oGwF1NK9D3DTcob6ZUpu843lH+dDWol490hERua32WU1VT/I+/4aT
G+6/UYP9cIQjRjWMKfxhWHXO0Vcc8fGrAd+0EdXgDL3qiG7fNPxg0fKq5BFT
Ha7L7bs57yY64v7QgJQO3StzXkx3xLer1211TlUk35rp8Ly+WQH9jPc6glVq
/9xd6BlmOyJii7m9Uzn6XREfTsn7LMP6neOIFYmvbKzh3gnJPof3+/iM3QrJ
fcb7+QW+OyN3VLgRYo7FQSfX9mpIXv+VjghM7TLp3jGXQnJf/NARFQ/b7314
63xI9hu9n/85/813U5aeDsl8wPv5uAlNdywuORmSuq+1jpgyNwKq+SVEPc8R
F9IjIJqDIalj+dQRx3o23lB+sBuSeEHv/U5Xd/6+/PmlJfI5Xu+I9o/2LDdq
yr6S0p9/b9jDHSe9crREnrsbHPHatXp9Nji/lci8e7Mjuh5K+vTzpadKZP61
yRG5D0ZW7J/4/G50xKwbz9//+qsXS2RfbKsj4kdnnv9p+JUS6SvymSOGRPVa
trnp9RLqXY544mTquV6VbpXIerz38zNmF31dZfK/JfKcKlG+2J+WUfN6jpj8
7tynO79bDh2Z93pUmQ5z8j4tT59no7p//grwQHc44tPl5zbFXqvI3Kb3/z9e
WPFgZmFlV8ZXnzvixUOJ7f9afzd9li2O2DM3fdLEdlXRcW13RJ+x798sc7Ka
4kM6okrEGLp3dTXP6xAfPVED3bzrqPi0pkv+7gj3bu8XjFrMYXvvf7t7XLcz
dm10tN717NU54hxcm/lR73rPj38k+/qEOqrv74g1yZ2HzWxTF92a9zr60e8z
Dt9Tj/mITxx8nE7Ug6fnPQ+PRQTxveqj6/C+z9447wYUNqAvGrn/0s+3AToM
73n6bNDfx99Y1JA5z4/V/vFCI6WjdETETaJJ9Sh0Id7z+dO8dT+mr41C57zA
EZHtODi/MbrPZY54PgLueagJ83De809fswnzsO86orpv184HrzWlb7bEW58f
nk9v8Ewzrtd8R9yaXLWS1qE5fTJvfUmfkybR8CPe9tbbQ0VJW0LRzEF561nW
l91o5oimOKJDxGa4Vgzzg6874t/iiFNwDHyCSY7Y3umJX+odj4H3PNnhXLFi
4dl5+0v6Xfktuj8ZS594mMM+dTuWPqy3Pz01KqdS5cQ4+AtDHXHD8O7Yojh4
uUMcdG8V4tERePuhrIt1iadP6+2XMi77Nh4eZW/lC98sgTmbp5XP7IgEV85X
eK+lzu5wQul8FPlxdiJ8g/855C3LFYeoi/KxvZDI3GFrhzrYo0nMq7d18BFd
nIQuSHPI128lKf6fo/jzLVhfxQ46oSUt6DN655XM62snwxHxzjNZXx6QDH8t
y6GOuzMZHXdi6edNgTfT3CH/fyEFXUdjB13ILynMNzVwOKezWjLXW91BRz21
JTyZGg55yfmW6KQrlPrypuIL75338N9Tmff/x2a/rZaGTuSSrX4+jfmfUzbx
8qY0dEpnbCH7kdHp6A6O2dR9O6bDjzqi4qET6cx/HbKpa1TJULomGz73Uxnw
Fb34R8atuzLQLXxmkw9EZ8LzdG18kNtnwlddY5P3PJkJH2S5Tb3inUx0W4tt
4uttmfCW59r0wS9nwiv1XsPVzVJzFjb839ZZcK9G29Rbh2UxFzzCpr+0KAtO
0DCbuseBLHReXrwp+6P/ZjEP3M1GB5nkQ8fzqPLRfcQHF+wBmzrM8z44MO1t
4vMPfKwX2xbyuT7mQ8cdtKkrV8jm83rxNXrsbHTBybaQ96FLNn3vOJv64VvZ
6CYb2+gKlmZzv2raQuqnT2UrHoCNn8TdfuYr7yjdgN8PP8DLH2Se0sXP83zO
It98zQ+v4qhFf3CtH13pDxbP/69++Bte/gI/KOe/1+gzFWdos6U+fw5z1qss
dHzP5zC3sNQiP9+Yw3qZb/G8/pTDXOebluJv56IrmWBRr/blujIveskirn8w
F13XIIv61PBcdJG9LYGePxfOTnflU3ww15V9sM4W9cV/crkfrS3qgbkBpfux
eB7uCyidoUX8OioAr7G5hb/cpwH2/0bqen0RQPdW16JuWTYPHWMVizpZzTzm
wstY+PwF8lxZt/3LFFIP0j8PXfEZk7mod/I4b783WT9uHjzy/SZzBRfzOL8+
NYXUq8Xko0tZZ1Jfb5cPx2SJCT+9Vz4clflKpzQ7H77bNFU/2J6PruoVk/76
yXzmzkeZ1E3u5CuOgqn6PkF0gd1NdNOPBNGBPGCyHw4Lsp5bK1/iJUEXH1eT
9b0/yNxNqZ/HtSB8jqYm/PP4AnSN9U3mVAIFzKmWUX3IbgXoWq8Z6GpnF6C7
umgQD39Q4Mr60i8GvP5TBfBU9hnopG8XMIezvbTvVsj936T8ADsVwudYovwD
+xTC/VlqUA95t5C5sNcN+iQbCuENjjG4/n8WMs/9nMFcVlQRvIteBnltXhF8
u64G96NrETql9gb1gOFFcBEKDPpa7xXBd0lROrlvitDhxhj4wJ9UOt+aBnWF
SsXMG/+rU6fJKoYHcklnzqlzMXMxf+jKn7aYufgjOnWqJcXosHfq5M07i+Gm
bNXpP5wuRte1VOlE64bgw83UmavLDjFvPFFXeX/oP90o9ZkQc1S9deWTG3Il
Pv1xHR3ZnhD8t3t15vxOhZhbCOn0w+4S8JCSdfKoKIEOqqnO9WspFN9Dpx6c
L+DdV9SF8hFwpX7/fGlfSih+tkYduJ9gjmqvht/JCME89mcafZBJgu+7SqPv
skDA55qv0U/bIOBPTNe4ntsF8/hjNb7P1wLe0EClIz4h0C121qiPXBLws9oq
3XGZMN8nqFFHqhuGQ5qlUa9JVvyfKFWvzw67sqxdQaMPrinuUDkNP8ZHw8y5
nQmTJz4eRtf5TRj/9+fU3MGuMPWzl8PoWjeE6YPPCDM3tCRMP3Z5mHhmWpg6
3uYwnICJYfRBO8Kc933CrL9vw+Q3j4apH58Iwxm8L0xf/VqY65MXpp5TTYNX
khZGF9ZEg+/fJMx5l6zBz6kSps8b0OC8nBPEM4aGzu0Pgf6nk6bm+gSft6fG
nMBG1c8aoPH8v690/OM0V84XzxPUAadrxMuvKN3/PI14dajgeVytEW91Uf7K
azX4jO0Efc59GnMjQjAndVQjnksTQs5DnNLgp9cX1HP+0fADKivQR1TUWc9n
Q9RX6+vs326I+9tMh6f0dkitf539r38IvniRDtfQDHEeazr7b0II3WRnHa5Q
uRB94x46/knHi6m3PaPDufugWMg561E658PEYurDb+icl0+p/uZ8nfwoVEyf
camaW2pWTH3zU8U/u6L6SF/ozK1tK6KOfVBXcwpF1DeP6PAN+hTRn7mos98+
XIQfyHXdledUUhFzUuUN4oMbyp+8jppD+7oQfUEjg3xkQSHxXFYpf6+QPlC2
Ac/94ULyB8Pg/AwUqjq04uXXLeT+9zAU56CAumAfAw5ZSQFzlc8b8D+nF1CX
GW2Qv/UqoO46zUD3bBbQp59pMIdTrwCd0XsGc0+XgsyhrVJcpk+D+PVuMOAZ
vBZEv7XTUH4OQeL9wwZcFC3I+XjMYH3dEyTeOmOg+z2dz/5004BbUJLPerpl
KG5NPnMkZUv5/PnqPDDhDrbJZ3+MNhUXJ1/5uJv4313Oo68aNIknN+cxZx02
XVlvnZGnrq9JvtE3D/3NwybxpZ3Hef+EiS46Og9f6L4m1+uK6isNMnle9waY
Qxllcj7ODDDn8arpyriqR6C0r6K4VAHqxfNMxREJUP9fqt7/I5e6+kpT8Zdy
qXdvNNH1TsllDupzU/Gzcukb7TXhiIhc5Z+m5lbr5HKe/2QqP6Yczq/jJvzA
NTnU2a+Y5K8v5ijevMncRrcc4pmylit/LzmHPlsly5X42H/99BHqKZ7+AT/x
cDNLcVaUHsh7Lc/h4X6e/5YWcylt/OgIcizm3Jr4mUMzLLguZ7Lp91qWq0UO
lt3ZQs43/M9yJXf8jWz62B0tdPf9spW/SqkfQTZ11D4W50X5bPa//hbx8j4f
n3+w4iot89FvfsGC4zrSR59wgsXclO6j3zTFwv8i0Ud8N8OC91jRR99zjuKt
HsiiX7vEIh5/I4v9ZpkF96d3FvnNRxb3S8+iTv2BBfeudpYo5dPKRs65TOKV
LyzqJZ9k0jfZYTFX+nImc2Z7FR+3Z6aQ58ZhC45Yy0zik+8UV+pUBuvrpEW9
a0kG1+d3i7nh1hn0aS9YxAtn0uHp/2Xhl9Ivnf3mqkU8Wz2d/vAdxbXyDiD5
/SrbcP+cNNZ7NRsu1l1p6J2q2nBg56aSL9WyFSculXpDExsd+cWW+JzH2OTv
I1qia4m24aFE5uilH43NXOM3KczdpNt8vv4p9Kl8NvWea8nE/4FSTlSykH9H
s/l+7ZLRhRYojsBPLVT8YyvOWQvq321txUVsgc7Pe009M4n+XSfFXx6YxP7z
oOKJX0/E/8V7H7/FRPaProqTUKD0o91t8sc/EogHH1Ocq9cS0BH0sJWfRgL3
q5ftyrh6WTx+1M/Y1Ms6xJM/9bNZv7/E0c993vs+9evMmTYpjnqL9/OyzpwW
hx5hiO1KPfbWWPKFF2x39MsLxTvDYvl7I23y7Vsx9LnG2G4Ef564NYbPP9H7
+cWvVFvhxJAPjrPdck6/X0/+HE29Zbztbur+48Kv3opGbzLBdq8N3PXMe/HR
9D2832/zUd7c6zOa09ecbDNH/nIz+gVv2PCao5oJySOYYruyzNu4KXrO1xVP
vnUT6kNTbbgnUxvTL/Z+/5O03X1fmxhF/DJb+Vk0jKIP773ecfyrVb+LRtRj
5nnXu1//tvfOakh88LYN9/LnBmru2HbXj35iSatWDajHee+/mXnwn1Vt69Ov
XWi7nYv3XDrWvx7no/f3fy3IOrv9o7roTxYqnnf5uviDzLXd7yPy8KQ6rP/F
tpu0ZcCIPx+sTb1hvuJKTK7Feez9f7luNtfk/PHel+dHu5rUA5fabrCgUZOE
VdWJb9+xXWkDnHEP9+td2x0RaRxFVVU6ANsdd/ht7Y91d5M/eH9fcoLer8x5
4n2/uHF2Y/tcRfRib9ru1n++eqPM4Aro+72/v7Fu5xkjZ5ZH1+H9vDyXDpVF
l+C9jqjxiyeVQWc2S/lbLLgdkrqUObY7Ugrwb4Zknufdr3eGXOuzesfVEHO2
trvq7RFr9t5zOSTjmZk2c7dXzoek7tH7e5+t/N/im/nnQlLn+Jbt1v/5t9it
dU6FZHzziu1m9hy84o/FP4ZkveE15T+Seigk+Zfe+1X6bF1y9dQnIfyAbPfo
oTkrV+5cUSL7tpNsd1bfwsM91n9TIvd37/kP7v6sb7lqR0tknjTWdl/ZWEP0
rvNbiVzv3npp+kHvVnb+uRKpnxrtrYfq77beO/98iTzvRtmKu3SpBL6ld3/l
ArvKfIm3fusFV33c5tD1EnkeDrTdWwMSCnLH3i6ROoT+tvvw78892LZvGeaB
n7SZizlYlrrk07Zb8kT7mduN8tQNvP1DytAu30Xe570eXPjkAl9xRfa9CGcl
UvcfU0n5BttuoO9Dbx5ZcLeah/Ge783BL19cWZU+UgfFx3+3Glws29t/bl94
dJ2vOvPj7b31XiU5tGxIDbh2luLwra3J/GGh7c5LnzRx73u18DX09l/J6XJq
41sXUDz/G7Xhxmbb9Ieu1cEHN807byJ9qw114bwn225ffXve6EH1+J7eeTL+
zXc63vTXpy/V2FtPkX1rV31X1nujbHdhj7kld29vwLlQzztveq4aOnpEQ+Ub
5K3vqnsHR93dCP5LFZu52huNyPvLetfjSPT0yT9FMZ/qvc5KeOPUE881Jo+/
ZLmjI0bfDZvAx/Be14rcwPpN4ZmcU9zGPU2p25yw3AjG6cLWZuTVv1ru/rre
A9CyOdzkHyw3Mj618K/m8CcPWeQfA6Phhh2w3NkJZXv3Ph0NH+JLy8W3O0bx
0y13X25gadLkGObRN1jUH++K5Xqttdxnup5fuOqxWM7N9y03a98v47S1sczn
LbXcJVenrCqqE8c83jzLjWCXKk2PYx168dH4T+a2eeZKHHn1qypeseOp+42x
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
5dOeRn+4hclzsz6V75dr8n+GpKIPKjTdUj2b/N6mCXd8UUv0qF4eIfeJLi2p
53qv5f3ckMI58riJL0G3FPR+vU3il7Ip9E8Hm6zLhclwAp833ZPedvlbt2T2
yzEmfdnzLehXvGrid/ViC+LwN018MKJbqPtl8jx/kUS9e7FJflqURL9khcnf
vZDIc/OxyXM4IpH4wcvT5Pkalci+t91El7QrAT3rDpO+yLMJ5DH7TPbVE/Gu
nF/7UfmEvRiv9mdTnaPx9FtPm+7PH/W778mDceiBLpjuzVOHZux/No598bzp
ztb+yBlyPZb+VRnL7f1ySWKfxbFwEm+b7qKCV+Yl+2PRs3l57erL71Y9syeG
/LaC5S53xn88fmCM4sJa7s7h3+4e93c0+3Vjy43I+dusiFb+Q5b7buu9zZ5O
UO/HWe5zszIy3PnNVT/KclvHH9jT4q1mpVwa9+XjcT1axzdzZV8iYLkbtyzO
6prUFH1VvuWu3P5emYbTmvD3NYt6SEljrpdluY1Tdlyfcz6K89ix3Ktdbnxd
4Uoj9G8PWMS1SY3Ib73Xsj71UkP6NV2V/8iaBuzz3Sz3dqY2bO2B+q7UxT1t
uTNabt5jNqmPfrqP5UquRlE96rP9LHwYRtflXPZey3XzSh3qMgMt99bNyVUr
/Vpb+VpZ7p9jHnhs55laioNquYF7B+/cm1mL8857Lbnss2qyT0yw3Ce3NNw9
MbcGPpcTLXfK2o4/T/3oHvK8yZYLV6cqvhyvW25s1NHwua+qsD5mW/jM1rkb
btqsUn5wRfbHmaV1qAqsE+91ZmQAYHx59MrzLDdmbxf/vEfKqTzFchtsPtXS
uVSG+GKJ5Uq99L7bJTLOXWC5d/fLn/nr8psl+IRabvCrmQ0ea361hPPFu96t
1t375YnLJTIeWm252/zVmte6/0KJPC8+tNzhT7Z6cXbXP0tkHLbS+/9dOmWU
3P97icwfNljc10+Olsj8/GOL5/z9QyX4nnif/3R+dtU7s0rkubTGcjc8fPtw
fGhrSOaf3vs7Xj6y55OD34Zk3LTZcucfTP36r5rHQnI9brXch5/9Kblp6h8h
/JosN+35wrTQ+XMheG4WvrUnL4TQW1iu5Kgsu8K8g/d+r6ad2tUcfC0k49fP
Le7jvpshqY/dZLkZbnFw8G93QnJ9e+9fm7KqaM3JMsxJ77DcihEA/4hy9Cm3
WG6/3fV+/q3HXegQvc9zaGyDkRVOV2B+1/t5OReyvBJz8Nssd2rBkpeu/FtZ
yDrUl9563hgBMVVBV+n9vy/nffPZjZJqan7Jcts9lfTSovjq9NW8n7+9eZm3
4msoLoD3+206DrhnZU3mPb2//2mj/u4fL9eij/CZ5VY6mDnCaFubuVbv78n5
m8Q68He9n4/YObQtXxedj/f+oy+OfO7M8rpwA7zv1//o3vubdqgHf9G7P2f7
zz/zWkF95r3XW25q9adG5SQ14P2PS58/xYf3fv/V6TebvrqtIXPl3vOUk1zh
6KPPNqIPtNFy59b3fuHpKHQ73vNwK+fBRc20xsyVf+Dd76KkLQN+agxvYoXl
jtlfI27cy03+6+tK/46xTekTe++XjWywGc3oUy71no9zvbwdtTnzjt7r6pd+
q3D4y+Zqflv5hnaNpg/prUfpI74oGt2kt74mp92V3yIrBq6Kt/4eWP9C+xem
xdCH8V7L8/hwDLrrNyz37zvDVnV9MJY+oLfeZV/gzVghOYlTLffe04/dficu
Dh37eMv1PVv/n7WD4piznWS5gxY+Mv7NX+Lo04/y9s9Iv7F7PHPB4yxX9j+n
xAsZF3vvy3ykcgJzqEMt4tpBCULGtYOULuBsAvNkfUr9ihLRcXn7n9QZrUtk
Xr+vpfxxkpjD9fZX2Sd9Kok544ct4qjTSUJxuZSvUAvmQb3Xss7zYQt0W20t
Fc+ovm8bS+WVyeg2TAtfGDcZnVjYciVXp1EKOotS3cLsFPgjPot46VgKPNNM
7/yI8Gs6t+TnUy3i3rkt4Qa1UHz0uqmKX6ju9wup9JmbWPQ//kiF51xP+eQW
pcFRqGGhE1+VBg+zskX9rXw6umDvPMZfM13IOtp1U/nFpQupD7lmEu9VzkD3
4Z3/Uk85IYN59FMmdcD9GfC3T5jEgdmZQtbHvfgCn6VMODdHVHw3NhNdy1em
qltmonv34hdZVzqdyTzhVpO8tH4WfAvXi08i27GRhW79E5N+xLgsuAcrTfKg
tVnwIN41eV5+z0KnPlfVgcv71Lym0vkEfPAfXzPJv0b60FGPNomLZ/rgAQ03
VRzlY257+P/z2+X5398kDvVnMz/4hEk80S2b5/chEx3Z5Gz4LO1M8vfV2egY
WpnKPzSbuYCQia6joh+doN+kzmr6hayfZZrUgwb54f2lKJ3OO34h47h4k7mB
n/3wfuqY+DyVyeH7VTLpv/hy2I8qmOSBj+UIWQe/o3RjE3OY3/Tiezk/tDlH
yDrSMVXn/j0Hnd0Rw5Xc7Ya5cG0OGdS/inKFrKt8qX6/by46ny0Gupp5uei2
VxnUV77IZf//2MBX6ZL6/XcM4tXogJpPNOiLtQkI6ac22SBvHxpgTnKsoeoB
ASHnh4Yq3dyhAHNATxv429XIQ9fcTeVXxXnoGu8zXMkd6pmHrqGdgc5yfB7c
k5BBPXRrHnPLOQZxzt95zDHEG+S1DRRPPc5QPnP5SndqUNcbkM95VsWg7v12
PvvVZR0f9C/z4RF4+a28bn/mC7iUKt+tFxQynjqqsx+JILqs/Tr9y95B+Fxb
dPKGBUH2i3U6urrPg3yf93T230tBrt/sUt/aAub5vfxenjMdCtAhjVH1gKEF
6LxH6OwnSwro+/fViQP3F6h5WMWDP1eALqOTTh0vpZD/11qHJ2wVsj8X6fRj
hhSynpN1/H3fKUTHEqOzn2wrVP4DOn2kC4XoRivq1Ntjiljf1zT6Aa2L4B+d
0pSOtEjxZzR8z6cXoQP8SsMPd1MR/IEvNPL4q0Xoctdp5KUNi9Ghva9RBwkU
w52aq3EedStmrutljX7ZVMVfH6nRP1xfzBzCAI289jvFb+muUQeoEEI31knD
jy0pJGTdS9NUfTrEHH225ko+R98QOsV4jbrSghDnbX2NvseuEDrhihq+WhdD
6LD/DbtSz3aP4t2cUX60UYL9+3Sp76vioR8IU9d1BPHN52Hy586CuYnVYfz5
egvFUwvTt31JsP6nhHl+pgkh+66jwuS5ywSctxfCzNWsF8xb9wrTD/1KKI5c
mPrzEYGuxQpT17os4A0EwvT/K4ThPCWE6Ys1CPM8NAzDU08MC5kfVAyrvDAM
v+0fofzrwswN/CioFz4RVjwLQd1nSBidzAFB/WhCGH7/BsH+PD1MvLBEUKda
FmaOYY5gvW0Kw8EbJ9Bl7gxzPo4Q1OGOhjmvnxSKLxvmej0g8Le5S2NOzhbw
p2toAn9aQR6frKFLihH4Evo1eCM1Bf2v1ho6nOsh6vxdNXjCe0Pq+2rKPybE
/RmjwdWcGeL8ekNT3KkQz8d8Tch8s0vIlbaCqzV4OnkhV8bR2zR0ofVD5LOH
Nbh2l4t5Hn7RmGvZXYwu/IIGR2ZlMb6dNzTu5/hi5UeqC7lPPVnM89Jch59h
FqMD9OnoGJsV87xrOhy3m0XMqf5PRyd7tIj+z+M6/KqNyg98kA5XZnoRfZEJ
OpyUZ4uoT83S4XeJIurI83Uh5y1qFLlyPnSlDhfkdCHrYZvO9T5SSD1yn678
OQrVHIGOjvgtNRf0lw5f8plC+PBlDXSzbQqpI9cxWO9NCpXvqcFc7BXlv55t
sN72FtA3zjGE7PO+X0A90DQUd6KAePcxg/XdvQD9Tg/FL9QK8F94zuA8qlWA
Tv4lA7+Na0F886YYzBHsCOKvO99AV7o4qHzmFR98aFA9/wY6885B1stBQ8Uv
QeYSjiv+YJ0g9etzBuf9uXxe3zKITxbl499yl8kc6qR84tMappB9h+H5/82B
yXytTT6+gWkmc3TR+cyNFJvoZM/n4ZehKz7ml3n4TXY2ud4r81yp5+tuoqMb
lUd8MtDk+X4gj/r5CBNdoZZHHWiayRxv+TzW59umwMcl4HaNDL4sUXN6qwLo
glcrXuj4APHkehNe4WMBnt+vTfwnrADn9Xem4rIGWL9HTdbr1VzO479NOB9b
clW/zlQciVylm7CYo+2v+Pn1Lc6ztrn0Gxpb6KDTc9l/ky3m3M/kUH/Ns9CR
b8/h+ocsxfnLYU65jXp/cA51z4cVV6dtDnXZRyzmaONyqBv2V3OQl/0qvrPY
H0/6lY+xmnt8z09d+jULDtlQP3NVb1vMebTx08dYbKGzTfPjr7XaQtdYzu/K
+aEtFvy7g9no6rdbxM9rsumrfWMRT76cjY77BwtuwP3Z1P9OKP52Sraqo1rw
TK77qHdftYTch7/wUVeuYDNXtsKHP0p1Gz+skT76l1E2+397H33vGJs5qTQf
fgHxNnP757Pwuc62iad2Kz1LsQ2//b0s+pu2zf7zfBbXt73N3FiXLNUHKuXI
ZBEPPGKXcozUnJXN874vE/3CIBsd6+xM8sUXbXT+QzJdOR860Va8XtVnmGbD
+YrNdCWfarrNHMWmDOr7M22BXiuD826ZzX6akUH8uNaGP3YgnTnYjTbXd2I6
+rztNnOQTjp+A3vU3/8xjX7/flvIvtMzaegbfrDhwySkMQfwsw2Pcm8qddc/
bfLfian0jc/a1D8SUskPLtvsx3taMtd+3Sb/7taS+kYZBx5hnZb05Ws5fN5d
KdSPazjMcbVNIZ+p48C3uZVMPtHc4fpvT6YOm+zg73JvMjz4gMNc+pkW+Fn7
Heb4xrWgj13gkG+mteC8KXY4L39P4vxu7cCHHJeErr6Dw/4Rm6TiS4f48btE
ztsHHcVVSlTPh6O4don4g/RyqI+tTmC/e0p9vt4J6BYGOYrrHI+u/3kHHue0
eJ7fCOcmcv4H45XfryMiFJYrF+PQUYxX3InX4+i3TXTElKqVtNUijnhuqiMm
bx3rf/x4rFvKlXnggvX766Njie/nKK5OKJb+8WxHtP38fK2sb2PoI7ztiEWn
z/Uc+GYM/iULHOE0tlduD8RwPn7kiJiIQPcD1ZdY7d3f6OFbbg6Kpq/nvS95
/7WjyU82OqLjsiPlPyjTHP2X9/rGhtyOk6c3U/mLI2RdfkNT9Ds7HVG99axe
Nxs0Rb+3yxGbH/5iaI8hTej/eu93ixSGlzdGH3XIEaderrVt0T2N0Zl964g7
I3eMLx8TBcfjW8WJ2NiIfPBXR7RLe+jspC8aMgdywhHH/1p5dEhMQ+opJxXX
YlwD4p3fHbHOd3zmjQfrc39PO+KevjMee2ZDPbgi3u8/+VJb37O59dTcoKO4
ZnXJ1/72vv8A7zcW1KH+cdkREZvM2Ip1+L7nHREKDv5tzcO10dndcuCnfVKL
eOmiI4qkwL0mup3rimOUV5P994YjXvvhi12391Wnr1K5lYjYiIqB95Bvl2+F
P8InVYkfy7Wi/hZdhTmfu1uJ2SPW7J2SfDf9M+/1kz/cmTFjaSXmGiu2Eo+/
sK12jRYV0dlUaSWkj3Dbu4gna7cSQzrmhA/dLudK35BqrcSea1cbNZhaFp1F
zVZi/MfjoystKYMeonorUe7I2aPNB9wukXUU733Zhy5347/XEYpNcdOrJZIH
WLeV+PPghVljWl8ukXF8rVbiqRpry+nfXSiR/oze///nz/jYW1X/KpF5bcNW
4vSn4z80ok+jH6/fSvw2T2+0/Ndf//t79Sb9UveBlO9KZN3fe3/05s4ftL32
WYlcH3VaiU3Htg3seWh6yf8BA03S3A==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"kpc\"", TraditionalForm], 
       FormBox["\"kpc\"", TraditionalForm]}, AxesOrigin -> {0., 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-48.4794, 50.1875}, {-49.0848, 50.0086}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Cluster\"", "\"leading tail\"", "\"trailing tail\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8382118001301203`*^9, 3.8382118204571657`*^9}},
 CellLabel->
  "Out[1646]=",ExpressionUUID->"86e1011e-39fa-4ece-a4e2-2aa864f810c1"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.8382132955010567`*^9},ExpressionUUID->"f43cab51-d80d-4df3-93ba-\
43cfe54529ec"],

Cell["\<\
version 22 - initial positions of stars at ejection (using chapel\
\[CloseCurlyQuote]s random numbers)
NFW parameters = {417.0 * pow(10,3) * mau * secyr, 36.54 * kpcau, 90.0 * pi / \
180, 1.0, 1.0, 0.94}
offset = 0.2, 0.2
N = 6000, dt = 1,000,000 years, M = 1
Mass of Cluster = 20,000 Msun (no mass loss)
Initial Position of Cluster = 50 kpc,0,0
Initial Velocity of Cluster = 0.5 * centripetal velocity
Rcl = 20 pc = 4.126 * 10^6 AU 
radial offsets = 0.2, 0.2\
\>", "Text",
 CellChangeTimes->{{3.83821106384647*^9, 3.838211083980431*^9}, {
  3.838211424768218*^9, 
  3.838211430935144*^9}},ExpressionUUID->"f5e16947-546d-4084-98c8-\
4e3d289ada37"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ch22cl", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test22.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "6001", ",", 
       RowBox[{"1", ";;", "2"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch22dt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test22.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"1", ";;", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ch22lt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test22.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"3", ";;", "4"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch22ltv", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test22.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"5", ";;", "6"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch22tt", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test22.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"7", ";;", "8"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ch22ttv", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
test22.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2", ";;", "6000"}], ",", 
       RowBox[{"9", ";;", "10"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.838211098224618*^9, 3.838211116387155*^9}, {
  3.838211620411621*^9, 3.8382116228034763`*^9}},
 CellLabel->
  "In[1638]:=",ExpressionUUID->"4bf1e0b0-5a10-4515-8b7f-a58da611def0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differences", "Section",
 CellChangeTimes->{{3.837601739752182*^9, 
  3.837601741024062*^9}},ExpressionUUID->"ddce12c5-cbfd-4b10-9d52-\
20d99781d788"],

Cell["c version 8 vs chapel version 21", "Text",
 CellChangeTimes->{{3.837601747367975*^9, 
  3.837601755088078*^9}},ExpressionUUID->"6ea99d77-b775-4091-bbb4-\
11f2584700c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"diffc8ch21cl", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8cl", ",", "ch21cl"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch21dt", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8dt", ",", "ch21dt"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch21lt", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8lt", ",", "ch21lt"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch21ltv", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8ltv", ",", "ch21ltv"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch21tt", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8tt", ",", "ch21tt"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch21ttv", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8ttv", ",", "ch21ttv"}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.837601762952692*^9, 3.837601863791201*^9}, {
   3.837602802318234*^9, 3.837602821968552*^9}, {3.837686116865424*^9, 
   3.837686118774225*^9}, {3.8376864264139137`*^9, 3.837686428635903*^9}, 
   3.837686811828916*^9, {3.83769462970613*^9, 3.837694633568585*^9}},
 CellLabel->
  "In[1584]:=",ExpressionUUID->"6a87e7c0-1204-4702-8007-91564153d814"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"50.0086`", "\[VeryThinSpace]", "-", "$Failed"}], ",", 
    RowBox[{
     RowBox[{"-", "1.61672`*^-12"}], "-", "$Failed"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.837685829556987*^9, 3.8376859170155153`*^9, 3.837686062534281*^9, 
   3.837686119673847*^9, 3.837686231740488*^9, 3.837686380321175*^9, {
   3.837686413717524*^9, 3.8376864310162907`*^9}, 3.837686812516613*^9, 
   3.837691110792699*^9, 3.837694574879739*^9, 3.837694634305764*^9, 
   3.837695782081759*^9, 3.837763199099626*^9, 3.837763577960793*^9, 
   3.837763634020071*^9, 3.8377640832297287`*^9, 3.837764115240749*^9, {
   3.837764154995153*^9, 3.837764174113844*^9}, 3.83776425028139*^9, 
   3.8377643078160048`*^9, {3.837764378622847*^9, 3.837764431929093*^9}, 
   3.8377645746614323`*^9, {3.837764881746634*^9, 3.837764908533256*^9}, 
   3.837764973809597*^9, 3.838209971531067*^9, 3.838210857073185*^9, 
   3.838211242339572*^9, 3.838211307002083*^9},
 CellLabel->
  "Out[1584]=",ExpressionUUID->"2194869c-06e1-46d6-a72f-f3c620a63073"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "41.2155968`"}], ",", 
              RowBox[{"-", "24.381033`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "41.0902343`"}], ",", 
              RowBox[{"-", "24.494667`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.94514`"}], ",", 
              RowBox[{"-", "24.7159811`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.910960900000006`"}], ",", 
              RowBox[{"-", "24.9164868`"}]}], "}"}], ",", 
            TemplateBox[{"5991"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.8834`"}], ",", "0.6182052`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.780798000000004`"}], ",", 
              "0.49880599999999997`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.814836`"}], ",", "0.32144`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.805814`"}], ",", "0.134146`"}], "}"}]}], "}"}],
           "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1585, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1585, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1585, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1585], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.837685829556987*^9, 3.8376859170155153`*^9, 3.837686062534281*^9, 
   3.837686119673847*^9, 3.837686231740488*^9, 3.837686380321175*^9, {
   3.837686413717524*^9, 3.8376864310162907`*^9}, 3.837686812516613*^9, 
   3.837691110792699*^9, 3.837694574879739*^9, 3.837694634305764*^9, 
   3.837695782081759*^9, 3.837763199099626*^9, 3.837763577960793*^9, 
   3.837763634020071*^9, 3.8377640832297287`*^9, 3.837764115240749*^9, {
   3.837764154995153*^9, 3.837764174113844*^9}, 3.83776425028139*^9, 
   3.8377643078160048`*^9, {3.837764378622847*^9, 3.837764431929093*^9}, 
   3.8377645746614323`*^9, {3.837764881746634*^9, 3.837764908533256*^9}, 
   3.837764973809597*^9, 3.838209971531067*^9, 3.838210857073185*^9, 
   3.838211242339572*^9, 3.838211307023597*^9},
 CellLabel->
  "Out[1585]=",ExpressionUUID->"9993cd7b-12d7-49a5-a621-ef43414e3d00"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"41.1314`", ",", 
              RowBox[{
              "24.4007`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.058310\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"41.0071`", ",", 
              RowBox[{
              "24.6003`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.072821\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.921`", ",", 
              RowBox[{
              "24.7564`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.106393\"\>"}]}], "}"}], ",", 
            TemplateBox[{"5993"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{"49.8679`", ",", 
              RowBox[{
               RowBox[{"-", "0.442347`"}], 
               "-", "\<\"0.0000000.226254\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.883`", ",", 
              RowBox[{
               RowBox[{"-", "0.18501`"}], "-", "\<\"0.0000000.193350\"\>"}]}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8775`", ",", 
              RowBox[{
              "0.00113898`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.202750\"\>"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1586, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1586, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1586, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1586], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.837685829556987*^9, 3.8376859170155153`*^9, 3.837686062534281*^9, 
   3.837686119673847*^9, 3.837686231740488*^9, 3.837686380321175*^9, {
   3.837686413717524*^9, 3.8376864310162907`*^9}, 3.837686812516613*^9, 
   3.837691110792699*^9, 3.837694574879739*^9, 3.837694634305764*^9, 
   3.837695782081759*^9, 3.837763199099626*^9, 3.837763577960793*^9, 
   3.837763634020071*^9, 3.8377640832297287`*^9, 3.837764115240749*^9, {
   3.837764154995153*^9, 3.837764174113844*^9}, 3.83776425028139*^9, 
   3.8377643078160048`*^9, {3.837764378622847*^9, 3.837764431929093*^9}, 
   3.8377645746614323`*^9, {3.837764881746634*^9, 3.837764908533256*^9}, 
   3.837764973809597*^9, 3.838209971531067*^9, 3.838210857073185*^9, 
   3.838211242339572*^9, 3.838211307044178*^9},
 CellLabel->
  "Out[1586]=",ExpressionUUID->"862875c7-4d06-4b92-a1a7-d99ac8300203"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.116762110758`"}], ",", 
              RowBox[{"-", "41.13140984555`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.158192111487`"}], ",", 
              RowBox[{"-", "41.007088845988`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.091541112293`"}], ",", 
              RowBox[{"-", "40.920988846477`"}]}], "}"}], ",", 
            TemplateBox[{"5993"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.1342419999664156`"}], ",", 
              RowBox[{"-", "49.867874818264`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.13915700056056`"}], ",", 
              RowBox[{"-", "49.882970818265996`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.13414600135978`"}], ",", 
              RowBox[{"-", "49.87752981827`"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1587, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1587, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1587, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1587], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.837685829556987*^9, 3.8376859170155153`*^9, 3.837686062534281*^9, 
   3.837686119673847*^9, 3.837686231740488*^9, 3.837686380321175*^9, {
   3.837686413717524*^9, 3.8376864310162907`*^9}, 3.837686812516613*^9, 
   3.837691110792699*^9, 3.837694574879739*^9, 3.837694634305764*^9, 
   3.837695782081759*^9, 3.837763199099626*^9, 3.837763577960793*^9, 
   3.837763634020071*^9, 3.8377640832297287`*^9, 3.837764115240749*^9, {
   3.837764154995153*^9, 3.837764174113844*^9}, 3.83776425028139*^9, 
   3.8377643078160048`*^9, {3.837764378622847*^9, 3.837764431929093*^9}, 
   3.8377645746614323`*^9, {3.837764881746634*^9, 3.837764908533256*^9}, 
   3.837764973809597*^9, 3.838209971531067*^9, 3.838210857073185*^9, 
   3.838211242339572*^9, 3.838211307063829*^9},
 CellLabel->
  "Out[1587]=",ExpressionUUID->"3b5b98fc-7df1-47e0-a879-76b55fee60de"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"16.955768999999997`", ",", "24.534000110999997`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"16.655281000000002`", ",", "24.722500111`"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"16.445532000000004`", ",", "24.865800112`"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"16.117593000000003`", ",", "25.043600113`"}], "}"}], 
            ",", 
            TemplateBox[{"5991"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{"50.74073`", ",", 
              RowBox[{"-", "0.590169001`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.605146999999995`", ",", 
              RowBox[{"-", "0.346334`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.36291`", ",", 
              RowBox[{"-", "0.140389999`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.154661`", ",", 
              RowBox[{"-", "0.019364899`"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1588, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1588, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1588, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1588], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.837685829556987*^9, 3.8376859170155153`*^9, 3.837686062534281*^9, 
   3.837686119673847*^9, 3.837686231740488*^9, 3.837686380321175*^9, {
   3.837686413717524*^9, 3.8376864310162907`*^9}, 3.837686812516613*^9, 
   3.837691110792699*^9, 3.837694574879739*^9, 3.837694634305764*^9, 
   3.837695782081759*^9, 3.837763199099626*^9, 3.837763577960793*^9, 
   3.837763634020071*^9, 3.8377640832297287`*^9, 3.837764115240749*^9, {
   3.837764154995153*^9, 3.837764174113844*^9}, 3.83776425028139*^9, 
   3.8377643078160048`*^9, {3.837764378622847*^9, 3.837764431929093*^9}, 
   3.8377645746614323`*^9, {3.837764881746634*^9, 3.837764908533256*^9}, 
   3.837764973809597*^9, 3.838209971531067*^9, 3.838210857073185*^9, 
   3.838211242339572*^9, 3.838211307081751*^9},
 CellLabel->
  "Out[1588]=",ExpressionUUID->"b6f41dbb-9648-48d7-b2ec-3dc9a3e5458c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.64701`*^-7"}], ",", 
              RowBox[{"-", "41.356474844176006`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.65202`*^-7"}], ",", 
              RowBox[{"-", "41.255630844474`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66152`*^-7"}], ",", 
              RowBox[{"-", "41.201889845044995`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66014`*^-7"}], ",", 
              RowBox[{"-", "41.045854845568`"}]}], "}"}], ",", 
            TemplateBox[{"5992"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.8021184999999998`*^-7"}], ",", 
              RowBox[{"-", "50.162775817171`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.8094623`*^-7"}], ",", 
              RowBox[{"-", "50.177938817166`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.81728756`*^-7"}], ",", 
              RowBox[{"-", "50.155768817164`"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1589, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1589, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1589, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1589], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.837685829556987*^9, 3.8376859170155153`*^9, 3.837686062534281*^9, 
   3.837686119673847*^9, 3.837686231740488*^9, 3.837686380321175*^9, {
   3.837686413717524*^9, 3.8376864310162907`*^9}, 3.837686812516613*^9, 
   3.837691110792699*^9, 3.837694574879739*^9, 3.837694634305764*^9, 
   3.837695782081759*^9, 3.837763199099626*^9, 3.837763577960793*^9, 
   3.837763634020071*^9, 3.8377640832297287`*^9, 3.837764115240749*^9, {
   3.837764154995153*^9, 3.837764174113844*^9}, 3.83776425028139*^9, 
   3.8377643078160048`*^9, {3.837764378622847*^9, 3.837764431929093*^9}, 
   3.8377645746614323`*^9, {3.837764881746634*^9, 3.837764908533256*^9}, 
   3.837764973809597*^9, 3.838209971531067*^9, 3.838210857073185*^9, 
   3.838211242339572*^9, 3.838211307106024*^9},
 CellLabel->
  "Out[1589]=",ExpressionUUID->"e62c441c-d1fa-4912-9cb0-9b06787da124"]
}, Closed]],

Cell["c version 8 vs chapel version 22", "Text",
 CellChangeTimes->{{3.838211572704364*^9, 
  3.838211576748658*^9}},ExpressionUUID->"ab81247e-f1ca-42b2-a22e-\
081a8f8dd3ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"diffc8ch22cl", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8cl", ",", "ch22cl"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch22dt", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8dt", ",", "ch22dt"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch22lt", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8lt", ",", "ch22lt"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch22ltv", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8ltv", ",", "ch22ltv"}], "}"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch22tt", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8tt", ",", "ch22tt"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"diffc8ch22ttv", " ", "=", " ", 
  RowBox[{"Differences", "[", 
   RowBox[{"{", 
    RowBox[{"c8ttv", ",", "ch22ttv"}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.838211582521447*^9, 3.838211602436019*^9}},
 CellLabel->
  "In[1626]:=",ExpressionUUID->"bb866a9d-dfe6-4f8a-a683-a568766d99c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"50.0086`", "\[VeryThinSpace]", "-", "$Failed"}], ",", 
    RowBox[{
     RowBox[{"-", "1.61672`*^-12"}], "-", "$Failed"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8382116047174253`*^9},
 CellLabel->
  "Out[1626]=",ExpressionUUID->"44421864-6108-4b67-bbbc-4e49d0d31236"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "41.191567400000004`"}], ",", 
              RowBox[{"-", "24.450792`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.973784`"}], ",", 
              RowBox[{"-", "24.501206`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.9699332`"}], ",", 
              RowBox[{"-", "24.7318131`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.81786700000001`"}], ",", 
              RowBox[{"-", "24.8799056`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.784835799999996`"}], ",", 
              RowBox[{"-", "25.0658573`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.531475`"}], ",", 
              RowBox[{"-", "25.2005499`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.384968`"}], ",", 
              RowBox[{"-", "25.232657`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.370953`"}], ",", 
              RowBox[{"-", "25.362541`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.24498`"}], ",", 
              RowBox[{"-", "25.579943`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "40.153369500000004`"}], ",", 
              RowBox[{"-", "25.736956`"}]}], "}"}], ",", 
            TemplateBox[{"5979"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.9321608`"}], ",", "1.7298707`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.880649`"}], ",", "1.593626`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.853373`"}], ",", "1.391345`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.872809999999994`"}], ",", 
              "1.2504430000000002`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.754338000000004`"}], ",", "1.0064243`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.962360499999996`"}], ",", 
              "0.9177150000000001`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.852931`"}], ",", "0.5974189999999999`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.824161000000004`"}], ",", "0.482351`"}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.874666000000005`"}], ",", "0.2714429`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "49.9318695`"}], ",", "0.150129`"}], "}"}]}], 
           "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1627, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1627, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1627, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1627], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.838211604779188*^9},
 CellLabel->
  "Out[1627]=",ExpressionUUID->"2fc23165-c78a-458c-9491-8f9cf6be770e"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"41.1422`", ",", 
              RowBox[{
              "24.4155`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.058310\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"41.0882`", ",", 
              RowBox[{
              "24.5686`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.072821\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.9087`", ",", 
              RowBox[{
              "24.7474`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.106393\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.8421`", ",", 
              RowBox[{
              "24.8527`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.028381\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.6706`", ",", 
              RowBox[{
              "25.0794`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.149844\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.595`", ",", 
              RowBox[{
              "25.1717`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.089320\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.4229`", ",", 
              RowBox[{
              "25.3348`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.117844\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"40.344`", ",", 
              RowBox[{
              "25.4724`", "\[VeryThinSpace]", 
               "-", "\<\"0.0000000.062079\"\>"}]}], "}"}], ",", 
            TemplateBox[{"5984"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{"49.8362`", ",", 
              RowBox[{
               RowBox[{"-", "1.11898`"}], "-", "\<\"0.0000000.088121\"\>"}]}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8353`", ",", 
              RowBox[{
               RowBox[{"-", "0.903049`"}], 
               "-", "\<\"0.0000000.125910\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8331`", ",", 
              RowBox[{
               RowBox[{"-", "0.675254`"}], 
               "-", "\<\"0.0000000.108644\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8614`", ",", 
              RowBox[{
               RowBox[{"-", "0.56639`"}], "-", "\<\"0.0000000.121762\"\>"}]}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8424`", ",", 
              RowBox[{
               RowBox[{"-", "0.356725`"}], 
               "-", "\<\"0.0000000.226254\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8525`", ",", 
              RowBox[{
               RowBox[{"-", "0.173014`"}], 
               "-", "\<\"0.0000000.193350\"\>"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"49.8462`", ",", 
              RowBox[{
               RowBox[{"-", "0.0152203`"}], 
               "-", "\<\"0.0000000.202750\"\>"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1628, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1628, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1628, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1628], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.838211604814959*^9},
 CellLabel->
  "Out[1628]=",ExpressionUUID->"02f73399-cea3-4a57-a2ff-18fda51c1747"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.116762110858`"}], ",", 
              RowBox[{"-", "41.13140984561`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.158192111971`"}], ",", 
              RowBox[{"-", "41.007088846278`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.09154111219`"}], ",", 
              RowBox[{"-", "40.920988846414`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.04529311302`"}], ",", 
              RowBox[{"-", "40.830479846923`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.11322311335400001`"}], ",", 
              RowBox[{"-", "40.695310847131`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.059392114593`"}], ",", 
              RowBox[{"-", "40.5740698479`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.111315115385`"}], ",", 
              RowBox[{"-", "40.455994848401005`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.07876911563000001`"}], ",", 
              RowBox[{"-", "40.43107484856`"}]}], "}"}], ",", 
            TemplateBox[{"5984"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.10786399644724`"}], ",", 
              RowBox[{"-", "49.854527818298`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.15010899779523998`"}], ",", 
              RowBox[{"-", "49.852068818276`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.14776799755696002`"}], ",", 
              RowBox[{"-", "49.854094818283`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.07136599885389999`"}], ",", 
              RowBox[{"-", "49.87529781827`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.134241999756195`"}], ",", 
              RowBox[{"-", "49.867874818265996`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.13915700027049802`"}], ",", 
              RowBox[{"-", "49.882970818267`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.134146000748649`"}], ",", 
              RowBox[{"-", "49.87752981827`"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1629, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1629, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1629, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1629], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.838211604843358*^9},
 CellLabel->
  "Out[1629]=",ExpressionUUID->"fd824a4f-b639-438d-82d8-2e7e82d1ed35"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"17.012469000000003`", ",", "24.558100110999998`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"16.693381000000002`", ",", "24.770600111`"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"16.424232`", ",", "24.891700112`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"16.179292999999998`", ",", "25.090000113`"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"15.821769999999997`", ",", "25.117900113999998`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"15.607814000000001`", ",", "25.404400113999998`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"15.378235999999998`", ",", "25.497400114999998`"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"15.069484`", ",", "25.628800114999997`"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"14.883588999999997`", ",", "25.795100116`"}], "}"}], 
            ",", 
            TemplateBox[{"5981"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{"51.534685`", ",", 
              RowBox[{"-", "1.468410005`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"51.391003`", ",", 
              RowBox[{"-", "1.333910005`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"51.220366`", ",", 
              RowBox[{"-", "1.0978600040000002`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"51.115939999999995`", ",", 
              RowBox[{"-", "0.892977003`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.86959`", ",", 
              RowBox[{"-", "0.703544002`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.71883`", ",", 
              RowBox[{"-", "0.5382290009999999`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.602847`", ",", 
              RowBox[{"-", "0.364863`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.32281`", ",", 
              RowBox[{"-", "0.217323999`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"50.174161`", ",", 
              RowBox[{"-", "0.022921299`"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1630, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1630, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1630, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1630], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.83821160486419*^9},
 CellLabel->
  "Out[1630]=",ExpressionUUID->"3da09c81-3f30-41c6-bceb-a3c3724def24"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.64991`*^-7"}], ",", 
              RowBox[{"-", "41.356474844349`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.6523`*^-7"}], ",", 
              RowBox[{"-", "41.255630844491`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66218`*^-7"}], ",", 
              RowBox[{"-", "41.201889845084`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.65863`*^-7"}], ",", 
              RowBox[{"-", "41.045854845476`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66665`*^-7"}], ",", 
              RowBox[{"-", "40.969741845967995`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66255`*^-7"}], ",", 
              RowBox[{"-", "40.818417846333`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66425`*^-7"}], ",", 
              RowBox[{"-", "40.753123846437`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.66998`*^-7"}], ",", 
              RowBox[{"-", "40.663805846795`"}]}], "}"}], ",", 
            TemplateBox[{"5983"},
             "OutputSizeLimit`Skeleton"], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.7651204`*^-7"}], ",", 
              RowBox[{"-", "50.162788817236`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.7706977`*^-7"}], ",", 
              RowBox[{"-", "50.133808817222`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.7812728999999998`*^-7"}], ",", 
              RowBox[{"-", "50.141599817199996`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.7843193999999999`*^-7"}], ",", 
              RowBox[{"-", "50.187530817194`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.7985924`*^-7"}], ",", 
              RowBox[{"-", "50.173234817175`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.8029161999999998`*^-7"}], ",", 
              RowBox[{"-", "50.162775817171`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.81188627`*^-7"}], ",", 
              RowBox[{"-", "50.177938817165`"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.81651272`*^-7"}], ",", 
              RowBox[{"-", "50.155768817164`"}]}], "}"}]}], "}"}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{59., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1631, 28385671550893089503, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1631, 28385671550893089503, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 1631, 28385671550893089503, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{77., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28385671550893089503 === $SessionID, 
   Out[1631], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.838211604887738*^9},
 CellLabel->
  "Out[1631]=",ExpressionUUID->"60ddce99-7df5-4fe3-8598-9c25a207ec79"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["chapel random function", "Section",
 CellChangeTimes->{{3.837689440191154*^9, 
  3.8376894445237293`*^9}},ExpressionUUID->"ae55a788-a607-4bc9-8322-\
9836af01ea3a"],

Cell["\<\
testing random stream\[CloseCurlyQuote]s distribution. Creates an even \
distribution of numbers between 0 and 1.\
\>", "Text",
 CellChangeTimes->{{3.837689449476286*^9, 3.837689455676792*^9}, 
   3.8376946716308813`*^9, {3.838211018863943*^9, 
   3.838211033699135*^9}},ExpressionUUID->"85252809-960e-4c5b-8a45-\
e9a3be258988"],

Cell["Analyzing chapel random stream of 10,000 random numbers", "Text",
 CellChangeTimes->{{3.837764487986223*^9, 
  3.837764508265263*^9}},ExpressionUUID->"b4839d3e-5ee2-4948-92a8-\
f0ee2b541a14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randnum", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/ran.\
csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"randmean", " ", "=", " ", 
  RowBox[{"Mean", "[", "randnum", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"randnumsd", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "randnum", "]"}]}]}], "Input",
 CellChangeTimes->{{3.83768953225003*^9, 3.837689565633732*^9}, {
   3.8376896381535997`*^9, 3.837689651376617*^9}, {3.837689876151247*^9, 
   3.837689932344136*^9}, {3.8376901595857477`*^9, 3.8376901610229597`*^9}, {
   3.8376908113841*^9, 3.837690832469261*^9}, {3.837690884260908*^9, 
   3.83769089753786*^9}, 3.8376911128506203`*^9, {3.837691154904406*^9, 
   3.837691159662917*^9}, {3.837693320366028*^9, 3.837693357182044*^9}, {
   3.837694692047443*^9, 3.837694839464602*^9}, {3.8376949240301723`*^9, 
   3.837694941072174*^9}, {3.837694973672237*^9, 3.837694975961587*^9}, {
   3.837695021794436*^9, 3.837695051776206*^9}, {3.8376951342744627`*^9, 
   3.837695160770113*^9}, {3.8376951972022943`*^9, 3.837695252512845*^9}, {
   3.8376954142380447`*^9, 3.837695430692647*^9}, {3.837695527963318*^9, 
   3.8376955336059217`*^9}, {3.837695789054675*^9, 3.837695790521969*^9}, 
   3.837695840119752*^9, {3.837763536288548*^9, 3.837763537039461*^9}, {
   3.837763844662712*^9, 3.837764004010496*^9}, {3.837764102843646*^9, 
   3.837764103257123*^9}, {3.8377644696199627`*^9, 3.8377644698677807`*^9}, {
   3.8377645113344297`*^9, 3.837764513076573*^9}, {3.837764714942235*^9, 
   3.837764718278529*^9}, 3.837764961629817*^9, 3.838209957879532*^9},
 CellLabel->
  "In[1590]:=",ExpressionUUID->"604c1020-8471-4538-a7a2-dcd9cda4ab3e"],

Cell[BoxData["0.5003564565609298`"], "Output",
 CellChangeTimes->{
  3.837695536550743*^9, {3.837695782220582*^9, 3.837695791283696*^9}, 
   3.8376958406314383`*^9, 3.837763199208887*^9, 3.837763538332797*^9, 
   3.837763578074581*^9, 3.8377636341347446`*^9, 3.837763877995668*^9, {
   3.837763927821579*^9, 3.837763932639468*^9}, 3.8377639690897512`*^9, 
   3.8377640048570642`*^9, 3.837764083349214*^9, 3.837764115349621*^9, {
   3.8377641551056213`*^9, 3.837764174233163*^9}, 3.837764250398657*^9, 
   3.837764307933065*^9, {3.837764378748447*^9, 3.837764432049552*^9}, 
   3.837764574782015*^9, 3.8377647586067047`*^9, {3.837764881903366*^9, 
   3.837764908640077*^9}, 3.837764973948542*^9, 3.838209971670671*^9, 
   3.838210857212339*^9, 3.838211242501566*^9, 3.838211307147552*^9},
 CellLabel->
  "Out[1591]=",ExpressionUUID->"33ff1f5e-b4fb-45fc-b793-a20def6ad5a3"],

Cell[BoxData["0.28849194571188624`"], "Output",
 CellChangeTimes->{
  3.837695536550743*^9, {3.837695782220582*^9, 3.837695791283696*^9}, 
   3.8376958406314383`*^9, 3.837763199208887*^9, 3.837763538332797*^9, 
   3.837763578074581*^9, 3.8377636341347446`*^9, 3.837763877995668*^9, {
   3.837763927821579*^9, 3.837763932639468*^9}, 3.8377639690897512`*^9, 
   3.8377640048570642`*^9, 3.837764083349214*^9, 3.837764115349621*^9, {
   3.8377641551056213`*^9, 3.837764174233163*^9}, 3.837764250398657*^9, 
   3.837764307933065*^9, {3.837764378748447*^9, 3.837764432049552*^9}, 
   3.837764574782015*^9, 3.8377647586067047`*^9, {3.837764881903366*^9, 
   3.837764908640077*^9}, 3.837764973948542*^9, 3.838209971670671*^9, 
   3.838210857212339*^9, 3.838211242501566*^9, 3.8382113071487017`*^9},
 CellLabel->
  "Out[1592]=",ExpressionUUID->"66c58cca-9deb-4500-8179-80c9fb37ac0c"]
}, Open  ]],

Cell["Analyzing chapel random stream of 10,000 numbers", "Text",
 CellChangeTimes->{{3.837764522817374*^9, 
  3.8377645346646976`*^9}},ExpressionUUID->"12474360-ef6a-4716-b29a-\
cba88ce2d545"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randnum1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ran1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"randmean1", " ", "=", " ", 
  RowBox[{"Mean", "[", "randnum", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"randnumsd1", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "randnum", "]"}]}]}], "Input",
 CellChangeTimes->{{3.837764544386952*^9, 3.837764554488597*^9}, {
   3.837764617612355*^9, 3.8377646240647097`*^9}, 3.837764964502322*^9, 
   3.8382099592290163`*^9},
 CellLabel->
  "In[1593]:=",ExpressionUUID->"a1a29787-4e1b-47c6-af14-389f64dbf5ee"],

Cell[BoxData["0.5003564565609298`"], "Output",
 CellChangeTimes->{{3.837764557029171*^9, 3.837764590845378*^9}, 
   3.8377646249241047`*^9, {3.837764881922872*^9, 3.8377649086607323`*^9}, 
   3.8377649739849577`*^9, 3.838209971708609*^9, 3.83821085725168*^9, 
   3.8382112425402803`*^9, 3.838211307185719*^9},
 CellLabel->
  "Out[1594]=",ExpressionUUID->"87bc3767-434d-41c8-a4dc-3775c5ad098c"],

Cell[BoxData["0.28849194571188624`"], "Output",
 CellChangeTimes->{{3.837764557029171*^9, 3.837764590845378*^9}, 
   3.8377646249241047`*^9, {3.837764881922872*^9, 3.8377649086607323`*^9}, 
   3.8377649739849577`*^9, 3.838209971708609*^9, 3.83821085725168*^9, 
   3.8382112425402803`*^9, 3.838211307186799*^9},
 CellLabel->
  "Out[1595]=",ExpressionUUID->"9755d61e-28bc-421a-9888-16f8e114ffc3"]
}, Open  ]],

Cell["Analyzing chapel random stream of 5000 numbers", "Text",
 CellChangeTimes->{{3.83776466964566*^9, 3.837764676205947*^9}, {
  3.837764916946754*^9, 
  3.837764921799962*^9}},ExpressionUUID->"0ae5933a-5ac8-496b-a557-\
291c63148c39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randnum2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ran2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "5000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"randmean2", " ", "=", " ", 
  RowBox[{"Mean", "[", "randnum", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"randnumsd2", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "randnum", "]"}]}]}], "Input",
 CellChangeTimes->{{3.837764687424193*^9, 3.837764698199484*^9}, {
   3.837764967726453*^9, 3.8377649681722097`*^9}, 3.83820996131071*^9},
 CellLabel->
  "In[1596]:=",ExpressionUUID->"31b06d25-4c20-441a-ba9b-a1d762bff5b8"],

Cell[BoxData["0.5003564565609298`"], "Output",
 CellChangeTimes->{
  3.837764701231089*^9, {3.8377648819457083`*^9, 3.8377649086884623`*^9}, 
   3.83776497401155*^9, 3.83820997174095*^9, 3.838210857277239*^9, 
   3.838211242565941*^9, 3.83821130721224*^9},
 CellLabel->
  "Out[1597]=",ExpressionUUID->"4ea413d5-0f32-4a12-9409-019966bd29a6"],

Cell[BoxData["0.28849194571188624`"], "Output",
 CellChangeTimes->{
  3.837764701231089*^9, {3.8377648819457083`*^9, 3.8377649086884623`*^9}, 
   3.83776497401155*^9, 3.83820997174095*^9, 3.838210857277239*^9, 
   3.838211242565941*^9, 3.838211307213376*^9},
 CellLabel->
  "Out[1598]=",ExpressionUUID->"6d57166f-6a31-49e4-bc40-729c72a12e88"]
}, Open  ]],

Cell["Analyzing chapel random stream of 1000 numbers", "Text",
 CellChangeTimes->{{3.837764815527644*^9, 
  3.837764823003776*^9}},ExpressionUUID->"90b37e07-e1e7-49ea-9bb5-\
3cb2d8187da2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"randnum3", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ran3.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "1000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"randmean3", " ", "=", " ", 
  RowBox[{"Mean", "[", "randnum", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"randnumsd3", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "randnum", "]"}]}]}], "Input",
 CellChangeTimes->{{3.837764840495326*^9, 3.8377648487725563`*^9}, 
   3.838209963109044*^9},
 CellLabel->
  "In[1599]:=",ExpressionUUID->"766781ef-500a-4392-8d4a-4bd7c67ad43b"],

Cell[BoxData["0.5003564565609298`"], "Output",
 CellChangeTimes->{{3.837764881957436*^9, 3.8377649087083817`*^9}, 
   3.8377649740358477`*^9, 3.8382099717573853`*^9, 3.838210857291925*^9, 
   3.838211242580112*^9, 3.838211307228549*^9},
 CellLabel->
  "Out[1600]=",ExpressionUUID->"bcbe381f-4473-4bf2-b11c-6527b800c900"],

Cell[BoxData["0.28849194571188624`"], "Output",
 CellChangeTimes->{{3.837764881957436*^9, 3.8377649087083817`*^9}, 
   3.8377649740358477`*^9, 3.8382099717573853`*^9, 3.838210857291925*^9, 
   3.838211242580112*^9, 3.8382113072300177`*^9},
 CellLabel->
  "Out[1601]=",ExpressionUUID->"a9403987-cd4b-4ec1-99e8-e0559d0e101e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["C random function", "Section",
 CellChangeTimes->{{3.837764730454082*^9, 
  3.837764735118175*^9}},ExpressionUUID->"7e16fec2-7d60-4242-9f5e-\
729a09b6dbe9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"crandnum", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
ctest7.csv\>\"", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", "1", ",", 
       RowBox[{"1", ";;", "6000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"crandmean", " ", "=", " ", 
  RowBox[{"Mean", "[", "crandnum", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"crandnumsd", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "crandnum", "]"}]}]}], "Input",
 CellChangeTimes->{{3.837764746537915*^9, 3.837764748000996*^9}, 
   3.838209964679997*^9},
 CellLabel->
  "In[1602]:=",ExpressionUUID->"1180563b-c93c-4516-91b2-f42602f5b32a"],

Cell[BoxData["0.01120109049999995`"], "Output",
 CellChangeTimes->{
  3.837764751642871*^9, {3.8377648819816103`*^9, 3.837764908740975*^9}, 
   3.8377649740608997`*^9, 3.838209971785906*^9, 3.838210857319766*^9, 
   3.838211242606928*^9, 3.838211307255727*^9},
 CellLabel->
  "Out[1603]=",ExpressionUUID->"d490af16-e7b3-4f80-8146-fb00662ad404"],

Cell[BoxData["1.0029935013838478`"], "Output",
 CellChangeTimes->{
  3.837764751642871*^9, {3.8377648819816103`*^9, 3.837764908740975*^9}, 
   3.8377649740608997`*^9, 3.838209971785906*^9, 3.838210857319766*^9, 
   3.838211242606928*^9, 3.838211307257433*^9},
 CellLabel->
  "Out[1604]=",ExpressionUUID->"ed26274e-1a04-4ca7-9dd8-6e96ff181fe3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["New Chapel Random function", "Section",
 CellChangeTimes->{{3.8377650226737013`*^9, 
  3.837765034599636*^9}},ExpressionUUID->"96493170-34a8-4ebc-93d0-\
301759e3edda"],

Cell["for 10,000 numbers", "Text",
 CellChangeTimes->{{3.837765050978321*^9, 3.837765056981686*^9}, {
   3.8377651879510307`*^9, 3.837765194710661*^9}, 
   3.838210880305161*^9},ExpressionUUID->"99323081-f087-4dc5-81f5-\
34892b5102c0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrandnum", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
nran.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nrandmean", " ", "=", " ", 
  RowBox[{"Mean", "[", "nrandnum", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nrandnumsd", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "nrandnum", "]"}]}]}], "Input",
 CellChangeTimes->{{3.837765109963743*^9, 3.837765117833288*^9}, 
   3.838209966259762*^9, {3.838210933873664*^9, 3.838210936789164*^9}},
 CellLabel->
  "In[1605]:=",ExpressionUUID->"bfed869c-1567-46f4-8e50-f842c2eb2682"],

Cell[BoxData["0.004970259083339995`"], "Output",
 CellChangeTimes->{{3.8377651383540277`*^9, 3.8377651631454678`*^9}, 
   3.838209971826202*^9, 3.838210857371079*^9, 3.838210937399358*^9, 
   3.838211242645405*^9, 3.838211307298141*^9},
 CellLabel->
  "Out[1606]=",ExpressionUUID->"e91d3e3f-b562-4586-a978-cdb24e87de26"],

Cell[BoxData["1.0049550564459007`"], "Output",
 CellChangeTimes->{{3.8377651383540277`*^9, 3.8377651631454678`*^9}, 
   3.838209971826202*^9, 3.838210857371079*^9, 3.838210937399358*^9, 
   3.838211242645405*^9, 3.838211307299317*^9},
 CellLabel->
  "Out[1607]=",ExpressionUUID->"bce1c80a-2e72-4d32-8642-4691210ed5d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrandnum1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
nran1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nrandmean", " ", "=", " ", 
  RowBox[{"Mean", "[", "nrandnum1", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nrandnumsd", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "nrandnum1", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8382108949147663`*^9, 3.838210897332793*^9}, {
  3.838210939844273*^9, 3.83821095412149*^9}},
 CellLabel->
  "In[1608]:=",ExpressionUUID->"55d9afe4-a455-4133-8b3b-d9d7129e086d"],

Cell[BoxData["0.004180059020690026`"], "Output",
 CellChangeTimes->{
  3.838210899059917*^9, {3.838210944551565*^9, 3.838210957148745*^9}, 
   3.838211242697687*^9, 3.838211307349215*^9},
 CellLabel->
  "Out[1609]=",ExpressionUUID->"f7158e6e-59ac-40cb-9b66-1c5f84f05e2b"],

Cell[BoxData["0.9953671355167967`"], "Output",
 CellChangeTimes->{
  3.838210899059917*^9, {3.838210944551565*^9, 3.838210957148745*^9}, 
   3.838211242697687*^9, 3.838211307350416*^9},
 CellLabel->
  "Out[1610]=",ExpressionUUID->"d5f425b0-8adc-4126-9162-a48c1b987fc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nrandnum2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/P5/RadialOffsets/\
nran2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10000"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"nrandmean", " ", "=", " ", 
  RowBox[{"Mean", "[", "nrandnum2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nrandnumsd", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "nrandnum2", "]"}]}]}], "Input",
 CellChangeTimes->{{3.838210951018682*^9, 3.838210967920144*^9}},
 CellLabel->
  "In[1611]:=",ExpressionUUID->"4447be30-6aa4-4996-ac15-37aa6bfae855"],

Cell[BoxData[
 RowBox[{"-", "0.019090910420080008`"}]], "Output",
 CellChangeTimes->{3.838210968591989*^9, 3.8382112427399263`*^9, 
  3.838211307389481*^9},
 CellLabel->
  "Out[1612]=",ExpressionUUID->"3cea7835-1a47-47ac-9f88-ea66c79d12c9"],

Cell[BoxData["0.9926051373557133`"], "Output",
 CellChangeTimes->{3.838210968591989*^9, 3.8382112427399263`*^9, 
  3.838211307390711*^9},
 CellLabel->
  "Out[1613]=",ExpressionUUID->"c3e0311f-5f11-49e0-8ac0-b24112e3d843"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1480, 786},
WindowMargins->{{3, Automatic}, {Automatic, 1}},
DockedCells->{},
TaggingRules->Association["TryRealOnly" -> False],
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ae6d1203-8ea5-4035-804e-05fafc6b56a2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 158, 3, 98, "Title",ExpressionUUID->"e4b98243-79a1-4406-85d6-e103493b3852"],
Cell[CellGroupData[{
Cell[763, 29, 180, 3, 67, "Section",ExpressionUUID->"a808d842-cd5e-4209-9d01-88a1e29fa072"],
Cell[946, 34, 141, 3, 35, "Text",ExpressionUUID->"2fb2072d-dcb9-4611-84db-62db66f935ff"],
Cell[1090, 39, 175, 3, 30, "Input",ExpressionUUID->"c9e7d0d1-4c96-4200-af42-8cc2de38a3a6"],
Cell[1268, 44, 1025, 20, 219, "Text",ExpressionUUID->"32884f2a-5a88-4439-94e2-2d178b46d36b"],
Cell[CellGroupData[{
Cell[2318, 68, 2526, 69, 131, "Input",ExpressionUUID->"50838b61-3393-48d2-b298-1dd0b7d92c97"],
Cell[4847, 139, 525, 12, 28, "Message",ExpressionUUID->"a0ed6baf-2e1f-4885-b58c-3e987343c836"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5421, 157, 160, 3, 67, "Section",ExpressionUUID->"52cd9e88-80a5-44f4-bbb9-7a5cbe14ead4"],
Cell[5584, 162, 897, 19, 219, "Text",ExpressionUUID->"ed9ca011-2d83-4277-9a52-307bd8800136"],
Cell[6484, 183, 2413, 68, 131, "Input",ExpressionUUID->"aecec8d0-3d11-41c6-8697-fd5ebd654013"],
Cell[CellGroupData[{
Cell[8922, 255, 786, 20, 52, "Input",ExpressionUUID->"ebd8c7db-557c-4502-af6a-8627f494d37f"],
Cell[9711, 277, 167016, 2819, 590, "Output",ExpressionUUID->"86e1011e-39fa-4ece-a4e2-2aa864f810c1"]
}, Open  ]],
Cell[176742, 3099, 131, 3, 30, "Input",ExpressionUUID->"f43cab51-d80d-4df3-93ba-43cfe54529ec"],
Cell[176876, 3104, 657, 16, 219, "Text",ExpressionUUID->"f5e16947-546d-4084-98c8-4e3d289ada37"],
Cell[177536, 3122, 2367, 67, 136, "Input",ExpressionUUID->"4bf1e0b0-5a10-4515-8b7f-a58da611def0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179940, 3194, 156, 3, 67, "Section",ExpressionUUID->"ddce12c5-cbfd-4b10-9d52-20d99781d788"],
Cell[180099, 3199, 174, 3, 35, "Text",ExpressionUUID->"6ea99d77-b775-4091-bbb4-11f2584700c4"],
Cell[CellGroupData[{
Cell[180298, 3206, 1376, 31, 131, "Input",ExpressionUUID->"6a87e7c0-1204-4702-8007-91564153d814"],
Cell[181677, 3239, 1090, 21, 37, "Output",ExpressionUUID->"2194869c-06e1-46d6-a72f-f3c620a63073"],
Cell[182770, 3262, 10704, 271, 121, "Output",ExpressionUUID->"9993cd7b-12d7-49a5-a621-ef43414e3d00"],
Cell[193477, 3535, 10724, 271, 121, "Output",ExpressionUUID->"862875c7-4d06-4b92-a1a7-d99ac8300203"],
Cell[204204, 3808, 10537, 265, 97, "Output",ExpressionUUID->"3b5b98fc-7df1-47e0-a879-76b55fee60de"],
Cell[214744, 4075, 10519, 264, 121, "Output",ExpressionUUID->"b6f41dbb-9648-48d7-b2ec-3dc9a3e5458c"],
Cell[225266, 4341, 10695, 269, 121, "Output",ExpressionUUID->"e62c441c-d1fa-4912-9cb0-9b06787da124"]
}, Closed]],
Cell[235976, 4613, 174, 3, 31, "Text",ExpressionUUID->"ab81247e-f1ca-42b2-a22e-081a8f8dd3ee"],
Cell[CellGroupData[{
Cell[236175, 4620, 1157, 28, 136, "Input",ExpressionUUID->"bb866a9d-dfe6-4f8a-a683-a568766d99c0"],
Cell[237335, 4650, 350, 10, 37, "Output",ExpressionUUID->"44421864-6108-4b67-bbbc-4e49d0d31236"],
Cell[237688, 4662, 11844, 308, 142, "Output",ExpressionUUID->"2fc23165-c78a-458c-9491-8f9cf6be770e"],
Cell[249535, 4972, 11762, 305, 163, "Output",ExpressionUUID->"02f73399-cea3-4a57-a2ff-18fda51c1747"],
Cell[261300, 5279, 11316, 290, 142, "Output",ExpressionUUID->"fd824a4f-b639-438d-82d8-2e7e82d1ed35"],
Cell[272619, 5571, 11019, 282, 142, "Output",ExpressionUUID->"3da09c81-3f30-41c6-bceb-a3c3724def24"],
Cell[283641, 5855, 11448, 294, 144, "Output",ExpressionUUID->"60ddce99-7df5-4fe3-8598-9c25a207ec79"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[295138, 6155, 169, 3, 67, "Section",ExpressionUUID->"ae55a788-a607-4bc9-8322-9836af01ea3a"],
Cell[295310, 6160, 338, 7, 35, "Text",ExpressionUUID->"85252809-960e-4c5b-8a45-e9a3be258988"],
Cell[295651, 6169, 197, 3, 35, "Text",ExpressionUUID->"b4839d3e-5ee2-4948-92a8-f0ee2b541a14"],
Cell[CellGroupData[{
Cell[295873, 6176, 1896, 33, 71, "Input",ExpressionUUID->"604c1020-8471-4538-a7a2-dcd9cda4ab3e"],
Cell[297772, 6211, 871, 13, 70, "Output",ExpressionUUID->"33ff1f5e-b4fb-45fc-b793-a20def6ad5a3"],
Cell[298646, 6226, 874, 13, 70, "Output",ExpressionUUID->"66c58cca-9deb-4500-8179-80c9fb37ac0c"]
}, Open  ]],
Cell[299535, 6242, 192, 3, 35, "Text",ExpressionUUID->"12474360-ef6a-4716-b29a-cba88ce2d545"],
Cell[CellGroupData[{
Cell[299752, 6249, 818, 19, 71, "Input",ExpressionUUID->"a1a29787-4e1b-47c6-af14-389f64dbf5ee"],
Cell[300573, 6270, 393, 6, 70, "Output",ExpressionUUID->"87bc3767-434d-41c8-a4dc-3775c5ad098c"],
Cell[300969, 6278, 394, 6, 70, "Output",ExpressionUUID->"9755d61e-28bc-421a-9888-16f8e114ffc3"]
}, Open  ]],
Cell[301378, 6287, 236, 4, 35, "Text",ExpressionUUID->"0ae5933a-5ac8-496b-a557-291c63148c39"],
Cell[CellGroupData[{
Cell[301639, 6295, 788, 18, 71, "Input",ExpressionUUID->"31b06d25-4c20-441a-ba9b-a1d762bff5b8"],
Cell[302430, 6315, 340, 6, 70, "Output",ExpressionUUID->"4ea413d5-0f32-4a12-9409-019966bd29a6"],
Cell[302773, 6323, 342, 6, 70, "Output",ExpressionUUID->"6d57166f-6a31-49e4-bc40-729c72a12e88"]
}, Open  ]],
Cell[303130, 6332, 188, 3, 35, "Text",ExpressionUUID->"90b37e07-e1e7-49ea-9bb5-3cb2d8187da2"],
Cell[CellGroupData[{
Cell[303343, 6339, 743, 18, 71, "Input",ExpressionUUID->"766781ef-500a-4392-8d4a-4bd7c67ad43b"],
Cell[304089, 6359, 320, 5, 70, "Output",ExpressionUUID->"bcbe381f-4473-4bf2-b11c-6527b800c900"],
Cell[304412, 6366, 323, 5, 70, "Output",ExpressionUUID->"a9403987-cd4b-4ec1-99e8-e0559d0e101e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[304784, 6377, 162, 3, 53, "Section",ExpressionUUID->"7e16fec2-7d60-4242-9f5e-729a09b6dbe9"],
Cell[CellGroupData[{
Cell[304971, 6384, 750, 18, 71, "Input",ExpressionUUID->"1180563b-c93c-4516-91b2-f42602f5b32a"],
Cell[305724, 6404, 344, 6, 70, "Output",ExpressionUUID->"d490af16-e7b3-4f80-8146-fb00662ad404"],
Cell[306071, 6412, 343, 6, 70, "Output",ExpressionUUID->"ed26274e-1a04-4ca7-9dd8-6e96ff181fe3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[306463, 6424, 173, 3, 53, "Section",ExpressionUUID->"96493170-34a8-4ebc-93d0-301759e3edda"],
Cell[306639, 6429, 235, 4, 35, "Text",ExpressionUUID->"99323081-f087-4dc5-81f5-34892b5102c0"],
Cell[CellGroupData[{
Cell[306899, 6437, 790, 18, 71, "Input",ExpressionUUID->"bfed869c-1567-46f4-8e50-f842c2eb2682"],
Cell[307692, 6457, 320, 5, 70, "Output",ExpressionUUID->"e91d3e3f-b562-4586-a978-cdb24e87de26"],
Cell[308015, 6464, 318, 5, 70, "Output",ExpressionUUID->"bce1c80a-2e72-4d32-8642-4691210ed5d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308370, 6474, 772, 18, 94, "Input",ExpressionUUID->"55d9afe4-a455-4133-8b3b-d9d7129e086d"],
Cell[309145, 6494, 271, 5, 70, "Output",ExpressionUUID->"f7158e6e-59ac-40cb-9b66-1c5f84f05e2b"],
Cell[309419, 6501, 269, 5, 70, "Output",ExpressionUUID->"d5f425b0-8adc-4126-9162-a48c1b987fc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309725, 6511, 722, 17, 94, "Input",ExpressionUUID->"4447be30-6aa4-4996-ac15-37aa6bfae855"],
Cell[310450, 6530, 240, 5, 70, "Output",ExpressionUUID->"3cea7835-1a47-47ac-9f88-ea66c79d12c9"],
Cell[310693, 6537, 221, 4, 70, "Output",ExpressionUUID->"c3e0311f-5f11-49e0-8ac0-b24112e3d843"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

