(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    379976,       7435]
NotebookOptionsPosition[    372067,       7300]
NotebookOutlinePosition[    372490,       7317]
CellTagsIndexPosition[    372447,       7314]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Potential Testing for Claire", "Title",
 CellChangeTimes->{{3.835789301936655*^9, 3.835789303622924*^9}, {
  3.8357924288830214`*^9, 3.835792436287479*^9}, {3.839598834486614*^9, 
  3.839598841710401*^9}, {3.839604681505831*^9, 3.839604685503883*^9}, {
  3.8491107101115847`*^9, 3.849110711978644*^9}, {3.853520613061329*^9, 
  3.853520618731873*^9}},ExpressionUUID->"c931c52a-68fe-445c-8f64-\
a91b3fa82f53"],

Cell["\<\
This notebook shows an example of how to load in HDF5 potential data from \
chplUltra and what it looks like. \
\>", "Abstract",
 CellChangeTimes->{{3.839604975442305*^9, 3.839604982951848*^9}, {
  3.853520621387075*^9, 
  3.853520644754045*^9}},ExpressionUUID->"3504eb77-1f9a-4253-9468-\
eb03843009ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], " ", "]"}], ";"}]], "Input",
 CellLabel->
  "In[7156]:=",ExpressionUUID->"8f98b52c-f546-4273-9440-8e00d37800d9"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["How does importing the potential work?", \
"Subsection"]], "Subsection",
 CellChangeTimes->{{3.849110718896894*^9, 3.849110720603541*^9}, {
  3.849110782500783*^9, 3.849110783998376*^9}, {3.853520674016144*^9, 
  3.853520677875091*^9}, {3.8535911868111553`*^9, 
  3.853591188130616*^9}},ExpressionUUID->"89dd1872-44b1-443d-8d54-\
64dc03481b76"],

Cell["\<\
Below, ff opens the file \[OpenCurlyDoubleQuote]phi_ 000000.h5\
\[CloseCurlyDoubleQuote], while ff[\[OpenCurlyDoubleQuote]/phi\
\[CloseCurlyDoubleQuote]] gets the data under the \[OpenCurlyDoubleQuote]/phi\
\[CloseCurlyDoubleQuote] key--aka, the 128 x 128 x 128 array of potential \
values.  \
\>", "Text",
 CellChangeTimes->{{3.85352069264616*^9, 
  3.8535207591673098`*^9}},ExpressionUUID->"83e95a03-78fb-445f-8c5c-\
800adf1ada75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test/saves/phi_000000.h5\>\"", ",", " ", "\"\<Data\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pot", " ", "=", " ", 
  RowBox[{"ff", "[", "\"\</phi\>\"", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "is", " ", "the", " ", "actual", " ", "data", " ", "you", " ", 
    RowBox[{"want", "!"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.849110886767261*^9, 3.8491109503001423`*^9}, 
   3.8491110069228783`*^9, {3.853520680982006*^9, 3.853520687830521*^9}, 
   3.855177584392164*^9},
 CellLabel->
  "In[7157]:=",ExpressionUUID->"51eb6429-e29e-440c-ac6b-a5b53f6bcdb2"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{70., {3., 10.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{61., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 7158, 28455508633806633648, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{68., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 7158, 28455508633806633648, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{51., {0., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 7158, 28455508633806633648, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{91., {1., 10.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28455508633806633648 === $SessionID, 
   Out[7158], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.8551775876534157`*^9, 3.8558727681175756`*^9, 
  3.855873255369936*^9, 3.855873557501737*^9},
 CellLabel->
  "Out[7158]=",ExpressionUUID->"051dfe92-cce0-4fa4-9a22-a0caa1a8bbf5"]
}, Open  ]],

Cell["\<\
Below, we can plot it quickly (ArrayPlot[] is not very pretty but it\
\[CloseCurlyQuote]s quite quick; DensityPlot[] is the version with more bells \
and whistles). This plots the y-z plane for the 64th x-index of pot:\
\>", "Text",
 CellChangeTimes->{{3.853520762581254*^9, 
  3.853520822415207*^9}},ExpressionUUID->"99e64e25-a21d-42da-87cf-\
ed92271b0475"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"pot", "[", 
   RowBox[{"[", 
    RowBox[{"64", ",", ";;", ",", ";;"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.849111008507194*^9, 3.849111028558462*^9}},
 CellLabel->
  "In[7159]:=",ExpressionUUID->"80eabb33-a776-4383-8763-23cce2e8c19e"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxcnXVYVU8Tx7GxRcVEwsRuAYu1u8AO4t5zsBAbuxBR7MRG7MQWBetnJxYG
dne3mO+67Effxz98zuPl3t3Zme/37Ozs7KyLpbeXmdLGxma0/re54vCXri0D
xLykAY1XNwkQk/K2vOTQIEC0nDcpPrx2gHj29vLgVzUCxM3a/oWaeASIWddd
naMqBYjLv5qceFk2QLSY2HF0pZIBYqjLmo0DigYIt6jIIxtdAsSXBtk87zvI
Z73wxdnzyPbSRQXWyBEgXp2oU8vIEiAunbCNG58+QFTp1HfUmtQB4r8KFese
+2WKhlkGH3nw1RTz7uQ5leKTKQbMvlDM6a0pLIH9Y2u8MEWdz7+6+Tw2hTnu
TImQe6a48XPuz7U3TXHl3fDXlxNN8WvzjxwZLprioceDKXXPmuLMBceJ40/K
/2ecKC4eMcXPLGvflzxgivA8Td5M22MKu8wFpqTYZYqVFYuWCNlmisEeZcvl
2GSKH4ezZ4tZZ4oy6T7XClxlCr8nveu6LTNFzeXhC/NEmiL1jd1n7RaYou/Y
I4GFI0zxIH8/G6+Zpthbu1HeRVNNcW9T8XqpJ5nieNnzWSePl/338U5ROdQU
J8+PWWQzxhRxm+t3eTPCFPszf45JM8wUGRctzl57sCm6rKgdv2qgKQ62rVSl
cn9TGJ29p7zqY4p2UV1TXAwyRXvfMRsfBZqi1bwei4r1NMXit6X2zu1uCq9s
m5+7dTNFQbcBz2y7mmLziUBLxgBTZLD9edfTNEW1H843VhmmsK+8ebWQz7Ed
bo/M/H9PPq+uv8fvaId26Yd+kQO5kBO5GQfjYpyMGz2gF/SE3tAjekXP6B07
YBfshN2wI3bFztgdHIALcPIHNxpH4CpR4wzcgUNwCU7BLTgG1wc0zsE9PIAX
8ATewCN4Bc/gHTyEl/D0ueZtC81jeA3P4f18/f/FISHX08u/V37z6rVFfr/O
xaJHtsrf516eFJnkHiCCXr085ibb3xw0d0Yv2d/+xa9aLywRIEouWtvvQJEA
USpLhPcd5wAxe8b7bl/yB4htfmdKZcgt21vToWCu7AGiarpGlx0yB4jGS11v
O9oGiIV5t910SBUgau8rPCL3T1NE55nUP2uSKWqnyxaS5oMpavTzHPj1lSmW
Lapf5PVTU5yzKRX84IEpbOb9bHf9ttRj529HL14zxfyTq0+dv2SKXHZ3hiac
M0X61Vc+Xjtlinf3M/R4etQUnWs729kcNMWQVzvLOe+VuG3kmq+JtHtl+2Qc
XEnX7vjRjaZ4uiI+IJ/Eye0mvcaMXGmKDXMrL/4QJXHYakCDkYtMERp0M2eB
eaZocnBC1IVZptjjd2li1DRTZL1dYfAEiU+/lMl4jdlZ5euGsaa4NOXA7Rej
TOHQIGvXZsNNETDUu+I5ifs5CxfeC5Y8KFskdaY6/UwR8vVujSq9JR/63f/W
SvIn5Gwyr+4WT+ZbIUcXxccf0QMS+1lM4fZ2r12QnymeVYtaMd/HFDl9ekd8
6myKwPBVCeM6mcLHc2SZhh1NUaHHyi41O0ic9XP51q29KRrvbj/2eDtT5Alp
3LrL7+fkTxuK/f9Tf873+F153Q7t0g/9IgdyISdyMw7GxTjH6nGjB/SCntAb
ekSv6Bm9Ywfsgp2wG3bErtgZu1fSOAAX4ATcgCNwBc7AHTgEl+c1TsEtOAbX
G8G5xj08gBfwBN7AozmaV/AM3sFDeAlP82jewmN4Dc//ne8r6b8nDZp8LVJ+
X3R2PXdO/r5WpzbZkyrK98DtWU9zy/aHX9y4srTs72Fovsiqsv8+ZdpU8JTy
/EjX6GQ1Kd8gr02Xy+UKEFkzDDjvaBcgPsTlrZk2U4DY8MJh3eO0AcI5rG30
oRQBovjQzs8WfDfFkqTbWYI+y/dma9uLNd6Z4lDkiZ8ZXko7O1Txuyzfp+5d
TlyKku/XKQ/XN+op37eLirzaWkW+f5f3j7VPnWCK4LUDx16MN8Woz3fzrT1u
ihL9nGzHHpL6v7g+1LrPFGEvG19pEmuKx8VuetfYLvGw0qWTh5wHDnazdKwl
cXApV/pTbSUuznzJV2GYxEmWDwucNi80RSa/c6U/y/mlzfG+ar5ZdGdrnYNT
pFxlK69vFC7f99Wuv3kq56nq7UYmrBgt8R8y3n64xGuvMoHD+kr8ni2R7WTY
AMmn1lmO7JXz4PxCz0rl6WWKVIuTefB2bu8SNeW8WvZgR+fMVlNMKhnhmVby
5+X4mPwlu5gid3QxjxGSbz3y58v4U/Lx6sLBbze2McXoos+rzPA2RdVOL7Ks
amWKtJc/zXrVwhS1Zp490rO5KSb6vxvv2MwURSsXiUrX1BTOi6rsKNZE8iHg
ebNRjU3x6ZrjuSzyObxZntGXG5lihH7yOd/jd7RDu/RDv8iBXMiJ3IyDcTFO
xo0e0At6Qm/oEb2iZ/SOHbDLQm0n7IYdsSt2xu7gAFw80jgBN+AIXIEzcLdC
4xBcglNw66txDK7BObiHB/ACnsCbbJpH8AqewTt4CC/hKbyFx/AansN7/APe
E3z//M39RR/I389ZcivdyzIBIvDQvNjnxQPE1Vrh4XcKSzm7usefcgoQNWeF
3ovOFyC63s1Ubrx9gCgWuLhI+2wBYkn0ououGQNE+fAhX+6lCRCfe+R9vNhG
+gfX6i31+ibxcTLZL0pzJSDnhjdSz7OLeng9N8XptwkpPj6U80rkmTpz7pji
ltfWuxWvS/tGJ79vg/02/Oot37+Olc6HZ5Xv4xf+gaFbpL9Wc1vNPO3+k7je
HT48xW5TfB9i/3nLDvlcUehG983SL73afGqJ9aYo/cx75Edp9w4zDpU4LXHw
Lj4ZF95e/31cJnEyYZTptWqGKZbOaPRo92RT7Dx7M/ChnG8WnWq0vrCcf9Kn
aNF72EjpL/fLOPX5EFN0ckuet1p2nt/Uqa/0T0+NVn7wk9BXz89IPznX8aOP
r8p5MKqPZ0h6f+nnlLgQ4St50Glv3q835bxq6xQ5KKytKY6Nm3W2o+TP17wz
tnduKeXpUPfEFMm3JTOLRr6WfHxQouqmsQ2lXqZf8m9SX/rz98ekbFhX+sFe
7w8OrS35U8ll1wNhiunjxyaGeUq9WIZ99a9pinotn18IriHld0394Uh16W/7
ND7dQj5npLyyMuf/PWP15wv19/gd7dAu/dAvciAXciI342BcjJNxowf0slTr
Cb2hR/SKntE7dsAu2Am7YUfsip2xOzgAF+AE3IAjcAXOwB04BJfgFNyCY3AN
zsE9PIAX8ATewCN4Bc/gHTyEl700T+EtPIbX8Bzes07Az+e9we/Tvhq0+5Js
r97bDn22yfYDPo3sGyb7u9bXLnsL2f/71jejM0t56jw+tPZg1gDx9Vj5AUEZ
5LpkXcQ4Oyl/aa9bUjOmcK30bJanXP8ML5xx1ynpB82qN7Rfq9fyvRt4bsB5
6ScdzDhsRFPpN5VaULr9oVvSj+vY/FaVq3IdWqvL59Xy/dp/mff83Gfk+s3t
2/Ew+f6t9qTqgk/SP0vc1q5cN+mvDfxabN+NnXK91swtrM1WU7R+kHgtYYP0
K7cXdeywWq4Tqz0/8Gip9Gfv9ld+YWLqxp4uc03xZfm5huclLmofPWw3XeJk
8pXINr4SNxuaJtwQIXKeKvB2WBW5Pj2UuEitWx937TrRlOvZ1jdGXVom17nv
comX3+S8VTp49rl+cr2c1T0Zvxf2fkl7UPrHr7sHWSOlHz3YWnBBVGtTJDiV
XXtS8uBZyeT5tGndZYUj5fxr7ZLMn55Hv+VwrSPnoayXf1aWPPM6lczDfTPS
l3xRVc6PNvHhc93lvDO+XruhVeQ43m6+NaeSKdqO7Nj0eQXpXxdbvn5YeTle
i8fDBuXk9x3D9rYsa4odrVonRJSR/J6yMzKffE6bWLnPjdJ/n3zO9/gd7dAu
/VzV/SIHciEncjMOxsU4GTd6QC/oCb2hR/SKntE7dsAu2Am7YUfsip0/a7uD
A3ABTsANOAJXwRpn4A4crtK4BKfgFhyDa3AO7uHBCM0LeAJv4BG8gmfwDh7C
S3gKb+HxHz9e8/zfuB7rBvwH3iO0d/jc7ma9ZfvuTovnO8n+Ot9stuJwzgAR
tin9MR8pz5KuA41X6QNEtJ/T0/6pZfu1Up5+Ldc3WTekn2aR651mNeftP/3e
FOsbZflcRq6HsvdteT38iVyHd2zmdEv6Sc8GjRlbSvpNM68OujzwirTP6fof
487L92SKdKe/y/fr3Z112laX6zDHQZYlQ+X7932ozaFdcdIfs9R9+Vn6a/vb
JPtvPb9O7DhyrfQbd0U0Pr5c+mEvJ6i4UM5hp870kevCriNOBV+QfmHcod1V
PKWfaJzzOLhL4qKVQzJOXo/o1uGq9C+7xfTKGzpIzisdU6n1qduEp8ovXVWp
8dg0v+NfTsn+a2iacwXKy/Xvj7QVFvWX85j/+aT/Lkv87l02Xc13W+4VVv5z
7OZO6682kOMceDfpouRBRo+ba77J+fRboSZq3g1sXScwQfLHeUeFkAmV5fus
SqZPfSTPltUesnCq5GHSlmxl75eS4zi/0LtPCbk+b9J3mpurnDdfvGxUtagp
WuTNcWJIYVOkmO1V9nNBOQ9enTpkm4ts91jbEZucTWEXZnn83MkUJ9K2q9pd
PqtvvRhfTD5r6Cef8z1+t1i3Q7v0Q7/IgVzIidzBehyMi3F+1+NGD+gFPaE3
9Ihev2s9o3fsgF2wE3bDjtgVO2N3cAAuwAm4AUfgCpyBO3AILsEpuAXH4Bqc
g3t4AC/gCbyBR/AKnsE7eAgv4Sm8xW+H1/D833g+8QPWEfgTvFdo/3Fll/ob
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
sr1Snxq0k+up+hUeDfNdZopBi+cN6bJQ+mP+yX5XvwzJ8dpJ06OsRcKkH3nP
3i3tKKnPpx7F7sv39cbQTCpvZN3qEiqfZIjZT+Wj9ek38XtL6f8leTUsVam1
XG+WfaPiSMuyNGqWvb58/2YereJNQwtcinSSfuXI/zK615Tzyr7eybgy+sza
s0v6o+6NarfLV0D6hcOGOM2TfuvmQ5NV3KxchmT/1vX0wllXpd87Nyq+z2Pp
D499clH5yVXGub+bKP1oX98dNYq9NMTQ7wlrk+T8Wb1Fg5A0cl6tE54hXXM5
Dxdu1aTrZcknsb/onqWXDPErxivVtvOG2DJmb97Mkpdj/SrGbD1piLSdHIxV
xwxRwyFg5LPD0n9vs6HEmIPSfz+8pXXgf4aI/1ptXfQ+Q0S/tsytv9cQCxOt
ddz3GKLI+9RTx+42RMTbOZmL/9+Tz/kevzuj26Fd+qFf5EAu5ETuWnocjItx
Mm70gF7QE3pDj+gVPaN37IBdsBN2w47YFTtjd3AALsAJuAFH4OoPzjTuwCG4
BKfgFhyDa3AO7uEBvIAn8AYe8R6AZ/AOHhInhKfwFh7Da3j+b34++YbkHZF/
wD4k+xHEJYlPsE7BX+G9hfxfljgFesvxOOQ6bTNYjq/jjLSuk+V499uGD5ke
Y4rj1vxLxm0yxarUa9sErjHFtx2dguot/Z33Eafyui+cPKn2ZbL5llf5nl3n
tkrOD+/aVe3nJM2Zr/JABkXY5M8q13FP60YuXi7f3+PrJ7/Px45uq/JZ76+b
quJDX9YNjP/Q0BRlMiaknlVLjmfhvS0eVX/nu7dX+9oeOVyVXxlrY6fiUltu
XvfoLHFVMKjlttYSZ6HXkuNblc7EOc+2NUXTJCc1XzWaN+ZCq2+GaLfn5oAn
cp1cNrG3mudWhdofiXhiiNG1Kqr58EKi12vbm5IfMzv0nX1Ffm9uTzWvxh4a
p+bhZueveK0/bojEYi/mVJX8en1qY7kckndlzhuKl8PfrjqyYZdcZ9/oP7r/
DkOEf+xtO22rIXK177YrxWZDnDtTZkN8tCFOX7m/+8N6Q6Tcf3DQ4HXSXy8S
UrjjWkNEVeiwa8EauZ5PuzOx6v89l+jP+R6/ox3apR/6RQ7kQk7kZhyMi3Ey
bvSAXtATekOP6BU9o3fsgF2wE3bDjtgVO2N3cAAuwAm4AUfgCpyBO3AILsEp
uAXH4Bqcg3t4AC/gCbyBR/AKnsE7eAgv4Sm8hcfwGp7/ey7HQ+cdk39IHhL5
CM31viT7E8QpiVeU0OuW1tp/4T3GeAItyfkSBYdfMurL8b5pXEadx/hwMovb
2dWmuGGr8zJXuLzOPV+u23smr6/CG51vV2yiKWqNb5pzUYj8+6MP6txIwEVT
5XtcDX7/cU9Pub76eUOdY3HM31ftAznmcFZ5JLf7BF9+1NQUhy9+HVe6nvTr
kp6o9WGzOYcyHKlsiistY1RcyfX8f4WGFjXFzQHLvR5Jv3J2hzC1v1WsiLfa
H1veUOOs1Y1HLSXuMpWd8b64XM+OTUr2Y5uWG/Ciplz/jug8X62PP107otbV
oc22r5ycaIgFMT0U3lvcC7T1P22Ik71DoqKOGmLvp9zejgcM8XxJ/Y835fwb
HjW1yf0YQ+w46Z2qguRXuhbJvCubUGhLrOTltXO3WiWtNETtR98WTltmiGGp
woxRSwyR5kNcrVOLfvsN5ccNXCB/d2BYldHzZD8O7bO8jJDzcMNp/fbOMUTd
Z+H93s02xIRy2w5P/r8nn/M9fkc7nrpd+qFf5EAu5Eyr5WYcjItx7tPjRg/o
BT2hN/SIXtEzescO2AU7FdV2w463tF2x82Vtd3AALsAJuAFH4AqcgTtwCC7B
KbgFx5c1rsE5uIcH8AKewBt4BK+ID8C7w5qH8BKewlt4DK/h+b/n8Th/QB7y
HJ2PSF7SBp2fwD5lT71fQdyS+AXrmFLan+G95qLHt2ua+PVioylGDUyOl257
OHtSCqmP9WdPqryLZsNv5Dw7XfozDYNqFgiX36+VoV5nud6aMHdy9SlDTFGh
28zWW/pKvyzjk6snpF/2fMx7Fc8tVS63yiNtMtM2/oZc123+Zq/iPmk+tkkb
L9/vKSrHDTroYYqtK3/Z/d5Xcvcd4LGtuCkW/pqk8ltmtqg6bk9eU9gcy6ji
0re6vVd+5rrHh3cXT2mKF9e9VPwqIMlVxcNfeF983ua5IU7kO3bxg/Rjr+Vd
MWCnXP8OeFtE+bvLR/bftlP6wXW7vxv4Q/rHzmdnlh4k8d4rIUL5248irzfN
LefNav7rnepvMsTNHsm8ueFT3SF4hSGuTByn+OUxdnXQVcm7dU8Pfxkv+bhu
w4WZU2caoqRLqrlvphri2C2/glsmGeJwyZ2ZEyZIPr58+Kh9mCGGDN73rG6o
ISbXG/drXohc17essLntGEP0yDzeddRoQ2wvmblCjv978jnf43e0Q7v0Q7/I
gVzrtZzInajHwbgYJ+NGD+gFPaG3FVqP6BU9o3fs8Mcu2k7YDTum0HbFztgd
HIALcAJuwFFjjStwBu7AIbgEp+AWHIPrDRrn4B4e7NS8gCfwBh7BK3gG7+Ah
vISn8BYew2t4/u85XM4hcR6BvGTyE8lTIl+BfUv2LzboOCbxDNY1+De85xhv
t9Zj3iYukXwtfEOd18o4P9+8ZlI/PdYmx1WiLh67FzzaFJtq9FDnPk7OHpG3
s1x/jWgfrc6fXh05S50j6ZY92U+7t9+zwegWcl6Obe5ZtoEpPDdvr3ulpvSX
bGur/ePUG3eo933a9s96xhUxxRG/q8o/nLO6x8aU9qYYbLFVcaZit16ofe7j
T5x/lPku+eDs8iaN9DvrNsrX5q3EWfWwowp3e+cnx7u+3Cuj4mHdHwxNiJHz
V/aiUc1rHzHk+32C11e5fr6xZ4qa99xvBSi/uem8Mcq/NkccdHkr503v97Fq
Pn3Ru52ab1eMLZGy0ww5Dy+pOzrvZNlu8QunSo2X/vGzUMXHcw9epLaMNIRt
vduTJg01xPRCmVPmHWSIu69fTMw8wBCtb+b90rOvISrYNj1Ypbch/GdlSNWn
lyE2jqzSO2+g5M/YcK9KPQ3hmNp58oEef598zvf4He3QLv3QL3IgF3J203Iz
DsbFOBk3ekAv6Am9oUf0ip7RO3bALtgJu2FH7IqdsTs4ABfgBNyAI3AFzsAd
OASX4BTcgmNwDc7BPTyAF/AE3sCjtZpX7BfAO3j4J59O8xTewmN4Dc//PX/P
eUTOJXE+gTzlP/mKOm/pT96O3sdkP4O4Zmod32Cdg7/De4/xbzUu+haU+vAa
sidrdqmfcpH71XlPr21LVZ5W6u2Dm3ftLeflQX1V/sauxovVedMvQ4+cyNfW
FPU8aqnzJQP/O1HlQ13pX91soPJKD7Sc03NZRelPbSip8s1mLY51rlzQFDFr
I1S+2qXdmdQ+U740QSqPpUuNl7Nb/5Lz3PRSar+qgseAO1nkuvPB2LnK75xR
P3l9urdzA4/VEndPopL91Ya5nqv1bbpVyXGza0unzfXZLufJPFWqbt0g/dne
fV67Sb+46sZqMz8slnx70VbhPzS+X4ei0w2R7WFsz5XhhvD5utet91hDbFp2
bemEEbLfrAUHfZL8etH9pXVvP7kOb1Dm2V3JR/sNy9p16y795nrZ9rQ2DfGx
2sbb6/zlenn0I48gH0NUss57srST7HdCmjUNO8j/v5p+ymhniMWbBrh9aWOI
wg2mdUotn48+WctObP33yed8j9/9aUe3Sz/0ixzIhZzIzTgYF+O00+NGDwW0
XtATekOP6BU9o3fsgF2w031tN+yIXbEzdgcH4GKmxgm4AUfgCpyBO3AYq3EJ
TsEtOAbX3hrn4B4ewAt4Am/gEbyCZ/AOHsJLeBqteQuP4TU8h/fUI+D8PecT
OafEeQXylslfJI+JfAb2NdnfIM5JvIN1D/4P70F43/hxwJl9Uj++xyLGtZb6
6pNkqDoSh9P3UudDZ1U4lG52F6mX9p9VHvjR/AVVfvigwC/qXMmtnndVPKfX
5PQq3vveoZfKS/cflaDySTa026byTO6k/Vzrk3z/L/g5V8WTnbelTbfvt794
xVvlu6x/bKfiTqNynjoz47Yh5uRxVftcaycm74+VPGBVce81dsk4fHzt1JCV
2wyxaMeEc1XWG+LyfwfUfJal2Crl/96r2fPaB+kXF1kwfEVD6S/nSbjuck3i
P9uLrTs2DjdE4yXOJ04NlP7wo8Zqnl1U+8TXD93kenfPiB0ZrYZo+/JLjtFd
5Ly4aWLGdu0lv04V6TjHW/LFq9YwzxaGuNr34aIOTSQPC+ac87iBnI8/7rvy
oq4h+tkO6xVY2xBT+xZ83k0YQpSe1uNBTcnj1xGhd2oYIsqhe1Of/3vyeS39
vWn6d7STTrd7SvdDv8iBXMiJ3IyDcTFOxo0ecmu9oCf0hh7RK3p+pPWOHbAL
dsJu2BG7YmcnbXdwAC7ACbgBR+AKnIE7cHhC4xKcgltwDK7BObiHB/ACnsAb
eASv4Bm8g4fwEp7CW3gMr+H5v/V2qE/AOWXOK3JuifML5DGTz0heE/kN7HOy
30Hck7ge6yD8Id6L6OdR0gh1nmvbgqPTE005P3cMVHkaj+56PvzhLf2choXU
/u2zUcnrswJuJ9S5s5kfQ9R5tZ3Vk5LzQ5b3UXmmnc41fVQ0hymG5G1eeaNc
B7ZJuVXlux6LTp4PgsK2qH2n4IYpVH7LqsEXl7peM8Sew3vVvvdUm4VVW8h1
6K/U45UfGvi5+q84OQ9lf309YY7EYbWYJBX/8hz+oX30fDlfjRlQ84Ocz2I3
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
6uD28odejTPE5cHX1T5X/eINVfzqUm9X5ae2b1/81Vk5T+UZU3viSYnTC7n2
33hRW85bRW6rdfH5gLdqvrO5dWL+pEJyfnMbtWNuXkNsLOnX4p30r3Ouzq/4
ceeTc/T2H1aRM1VjNe+ufPNK8ap0zIxFgx9axYoon/BOt+TnZc4ofgZ5Hpx4
6LxVzCs1rm6701aRK23+HOHHrGJkl87PfA5ZxfYlrTPf2m8Vbx27fM+w1ypu
f+hqPo2zispB93MNj7UK/+fTPh7e9fdZSX/O9/jdDt0O7dIP/fbWcqzSciFn
KS33Kj0OxsU47fW40QN6QU/ntN7QI3pFz+gdO2CXK9pO2A07YlfsjN3BAbgo
rnECbsARuPqDM407cAguwSm4BcfEB8A5+wUjNQ/gBTyBN/AIXsEzeAcP4SU8
pR4RPIbX8PzfOtrUMaWuJnXNqG/0Ttc5od4B5545/8g5qLn6PMRknRd9TOdH
kidFvgT7puyfEEd9ruMprKvwr4L1e9ZO6ztPntP3e0j9H/NIVHlfThts1bnU
UmcqVYp7Jv3Q9cnn2Tyvjnu9PkHaOcsrlU+ybo2v8gNrPtnQ2XezIRxSuau8
lCnfglWe27p9VfaNkfNH9oMhKh+m7qPsLUdIf9PdxlHFqYq3C2w+o7MhgsND
XmxtKf1X590qLt5nYiGb+nLeunD6TbJ/+9Uvvn9B6Z+fuNOwvVwvm7NbKv84
VffGsx+lkOtmHy/lV9fs/zB4p+THxtZdX5R9YBUd6vx8mPO6VfR9OfxI7wtW
YT0yKaHRSasQO9q4bjgov7ct66wlu60irNqh0aV2WEWj8xfvddxkFZFVT9tX
WCf/vv/l8V0rJQ+nuz/+sNQq7t3oEvI80ipOf6/xX9Qiq4jJE3gq90Kr8Gnk
esxrwd8nn/M9fkc7tEs/9IscyIWcyN1Pj4NxMU7GjR5Sar2gJ/SGHtErekbv
2AG7YCfshh3Xa7tiZ+wODsAFOAE34AhcgTNwBw7BJTgFt+AYXINzcA8P1mpe
wBN4A4/gFTyDd/AQXlKPCN7CY3gNz41/6udTz5i6ptQ3pM4Z9Y6oe0L9A85B
cx6Sc1HR+nwEedLkS5I31VXnT7CPyn4KcVXiK6yz8Ld476L/zMPreZ38aIgJ
fdOqc6g2N9Ko8yW1owNUHuntdyfLNpLrvWILdn/IE2eI6NbFVXxomO8Xnx7S
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
r2ZLd9Eueo5VlDxf71LZULne7Riq/Nw5lbOo+FnNWXHKH67qHlQ73lP6v+ke
5TbLWsXmoreVXz08/uek3/NozbCUB5/ayHn9zodVs99ZxOxzXct/fGAR4R9T
Kt7FVM9Zs9hpi5hYuGI25wMWEVq/+2yHnRaR/fzuXmU2WoStf/X75iqLGFwn
w6zzS+TfB94pPnKBRVRqsNclOMIioryLTjwwS/LTpeINc+bfJ5/zPX5HO7RL
P/SLHMiFnMjNOBgX49yix40e0At6itB6Q4/oFT2j9yzaDtgFO2E37IhdsTN2
BwfgApyAG3BEfACcgTtwCC7BKbgFx+AanIN7eAAv4Am8gUfwCp5Rrxgewkt4
Cm/hMbyG5//eg819uNyHyL1o3I/EPSnf9X0J1E2nfjJ1VKmnSF016itRZ8VN
11vg3PVFff6Sc1icxyAvu4XOzyRPi3wN9m2H6/0b4rjEc1jX4d/xnsfeZe2O
qv2j7M6pVX5qw2P5VN779h0Drz34ZhVO2c+oeNPBuseVn/n06LlOA49Iv3z1
ww4226yiWdTDJ32ipB9r8zju3BSr2BaWQsW5fg2+vn9iN+nXtqrc6Gcbq0hY
O0fFzZxvFy/eqbxcL8+8qXB/7uzm7YczW0VInTaTJ3+3CNc8HsrvLv2wWeU1
1y0iWxc7xadX1befNfZaRMDuORMGbbKIXtcOvx64zCKGVI9RPH2UITF4yiSL
uFdcFD03xiJq5bF/3HKIRdyauWWWcz+LcD9/4HyzQOm/N1978EFX6e8vabH/
lWEROftUK9jPahE59LOH/pzv8Tvaod37uh/6RQ7kQk7kZhyMi3EybvSAXtAT
ekOP6BU9o3fsgF2wE3bDjtgVO2N3cAAuwAm4AUepNa7AGbgDh+ASnIJbcAyu
wTm4hwfwAp6U1ryBR/AKnsE7eMg9JvAU3rbXPD6keQ3P4T33oHMfMveicj8i
96RxX9JKfW8K9ydQR516ytRVpb4iddaot0TdFeovcA6b85icy+J8Bnna5GuS
t0X+Bvv37OMRz5+s4zus8+Zof4/3PvbvX/ru56wSD0/s41V+e78dRdS+k8ec
nxcKXJLr2q0XVDx6UauzFZdslP5oO6vKkznbYZXa5zpZP8vRFf2tokD/0wPP
+Mrv3cng+7GJVVxwcFFx9NTH4pTfW2zLaRVfW1Xa8fyKHxYxL7Zo+43PLGJx
/I9ev+fLBU7llL99aPLgqbO2W0TR80tOHV1uEd0r5Vfz8tD/RndcHGoRMw4N
udA/2CK8XAaU9OluEcUMm6sDuljEKfcJec96WcTZXhGhIY0k765bFiyrZRFJ
FY+2F9UswvJo/9XuVaS/Xnb5r+IVLWL4ysgKE8r/ffK5VX+P39EO7dJPUd0v
ciAXcvbQcjMOxsU4GTd6QC/oKZXWG3pcqPWKntE7dsAui7WdsBt2xK7YGbuD
A3DBugDcgCP2C8AZuAOH4BKcgltwDK45bw7u4QG8gCfwBh7BK3gG7+AhvISn
8BYew2t4nk3zflXF5PcB96JzP3JrfU8q9yVybxr3J8Xpe1S4T+GurqtOfWXq
rFJvkbpr1F+iDgv1GDiXzflMzmlxXuOFztsmf5M8LvI52Ndlf4c4bwod72Hd
h//HPAAewl4eUHGkCcYYlZdS5UJTtb78VNSzYPR6q4h5O1jlubyaklrlwzyZ
n7Lftl5yvuk9We2f70s5W81XXiPvqrhX+bouKh72JdXp966pJf9/TlDxtCEf
xrUfdk3yrk9pxYP78+e5pdtqEfN3F8s2MtIiPr86p+bVyncyq/n26rLFaj6O
uvH1m9lO+uEpsm5928AizvsM2rfCwyKaXhrvvrCU5OHUOm9eO1vE4QlFH+7O
ZRHHCwzca5/FIjJtqlvHLp1FBPrMeLEvhVzXu67vX/KnvwhyjQ/1/e4veukn
n/fS3+N3tEO73rof+kUO5ELORC13FT0OxsU4GTd6GKz1gp7QG3pEr+gZvWMH
7IKdsBt2xK7YGbuDA3CxQOME3IAjcAXO9mvcgUNwyfkCcAuOwTU4B/fwAF7A
E3gDj+AV9xfAO3gIL+EpvOW+Y3gNz1dq3g/2KKvqDd1u0kudK+CedO5L5t5U
7k/kHjXuU+JeFe7NoM469Zapu0r9ReqwUY+JuizUZ+CcNuc1ObfF+Q3yuMnT
Ja+L/A72ednvIe5L/Id1IP5gfz0vgA8zctN/xSVepnc9rPJcO01cN+bhbKuI
9Fuj9qu6Zq/wvmt3q1x/zVdx7G7j06p9rybxT04HF7WKmdFJan1rFzVRxct3
he/3WHXPIjyOZVB+cMOIHMMSd0h+ZP0+8/e6+qDth2KlJsp5c/3ng6kGWoRj
i//WDfSziLiGdddGNbWIMj8HKH6t9b2yf1kxycuzjoqHUw+5K372z1HH/dAX
f7HLI/vpN8/9xcbPxTPsvOMvOqV60bHcFX+x+WH0vf5n/cWoPr1ezj7hLxZf
qB+07Ii/yNF5+bxVh/xFTv1cpD/ne/yOdjbpdumnn+4XOZALOZGbcTAuxnlI
jxs9oBf0hN7QI3pFz+i9oLYDdsFO2A07YlfsjD8ADsAFOAE34AhcgTNwR14x
uASn4BYcg2twDu7hAbyg/iy8gUfwCp7BO3gIL+EpvIXH8Bqew/sfh7Nni5Hv
gw1zKy/+IN8PmfzOlf4c8ffedO5P5h5V7lPkXjXuV+KeFe5bGKXrrlN/+U8d
Vl2Pkbps1GeiTgv1Gji3zflNznFxnoO8bvI7yfMi34N93+x6/4c4MPEg1oX4
h5X1PAFeMoRXn1VA4md2AYvnyhFW0bFxFrV/HZywSsWrMxRzUn7pik8pp3d3
topn1eMsA2ytos/+zzXbvrGI5cuSlH+7YUZS399x9ZrLE5y3r7aI/Gs3xqyf
ZhG/LNlu3Rsk57mNcYoXv75PUP51nphpyg//OL/gkqkF5Pr46YUxF20tYlrV
5h+dP/oLz0Hp3s2/5y9COp0YZZ73F9261Uq79oC/KLfROmXCNn9xd+bd90VW
+4vIqMsFoxb5i1dRhRpkn+0vdkyskXfWFH/hMDCueqVwf1EhoNf+FOP/PvPr
z2P09/gd7dzT7dIP/Y7RciAXciL3Jz0OxsU4/4xb6wG9oCf0tkzrsbfWK3pG
79gBu3TQdsJu2BG7YmfsDg7ABThh3xAcgStwBu7AIbgEp+AWHINrcA7u4QG8
gCfwBh7BK3gG7+AhvISn8BYew2t4Du/LpPus8gaPtxqg4oVtjve18Zppip1n
bwY+HP/3HnXuU+ZeVe5X5J41X33fUkp978p+ff8Cddipx0xdVuozUqeNek3U
baF+A+e4w/R5Ts51cb6DPO+iOt+TfD3yP1LpfWD2g4gLEx9infhZ+4vMG+DH
03pT5b3eiul06HQziaP1A1S+XOU7tTu0cbCKKPv543Kmsoo80/uofbCw+70D
jp61iNt57NR8FrR6UueLCyUPypRTcbP5mWYqv3h316Y/Sze3iFGxGSefrGQR
oS0rfLqe3yJs7vUfGpbKImKTbNU8mynv1Ng6l/zFmZ87tq/d7y9G18tUrfl6
f/EhPtS5yzx/UWprB8Xfn3P87QIG+Ytn2w/HbenuL4Jv7MiS3sdfNM1XL+/k
1rKd+RNi2zTzFwP3OiYObSh5P/Ls4fT1/z75nO/xO9qhXfqhX+RALuRE7jg9
DsY1Vo9ztB43ekAv6Am9oUf0ip7RO3bALtgJu2FH7IqdsTs4ABfghPwBcASu
wBm4A4fgEpyCW3AMriM0zsE9PIAX8ATewCN4Bc/gHTyEl/AU3sJjeA3P4b3f
k9513ZaZIjTopqpDuOjO1joHp8jnqeR44qHERdlrD/57rzr3K3PPKvctcu/a
n3uy9D0s3MdAXXbqM1OnlXqNa3TdNuo3UceFeg6c6+YcLue8OO9B3jf5n+SB
ldf5ICP0vvBmvT9EnJh4EetG/Efme/C0/NF0lec2uE9nlQ/nl6u5yoNJ2a+L
2udy/mnTMvaEXA9XW6/2xwLr5Vf7areH91RxsaKVqy3r3dEiOjruftC/pkUM
OX11YWRBi1jkXVz5z1Vcfp36zZOao/ep+bRW/oOHFuz0F5/dJ8Xti/QXV5p5
Kb4tWvwqdk4ff2G7d1mT6E7+YveUTIq3duude5d18xc/psUtTSrmL9Jk2N8k
dX5/sSffWP+B2fxF8TELzgba+ovQLVHDU6XyF25Xtg9rbPP3yecl9Pf4He3Q
bnbdD/0iB3Jd1nIid209DsZVWY+TcaMH9IKe0Bt6RK/oGb1jB+yCnbAbdsSu
2Jl4LjgAF+QPkEcEjsAVOAN34JBzx+AU3IJjcE19QnAPD+AFPIE3f+4z0ryC
Z/DuneYhvISn8BYew2t4Du89l4erfKHGBydEXZglPy9beX2jcPkeSdGi97CR
pnjctas6j7iqUmMVb+Sede5b5t5V7l/kHjbuY+JeFu5noE77nzraum5rKV2/
kTpu1HOirgv1HTjnzXlPzn1x/sOmR3IeOPmgLXVe2G2dH8I+MftFqXTcmPgR
60j8SeaVQRpfvatNVfktRbvsUevTkbuKqfjVjZJJo1OstYh3t46oONeyNZF2
h3v93gfvViquhVzf2o9UcfZdwTd8G+ewiDYtaig/eeWGeLW+bjY/tOTSWLl+
94xV/vbphiMedhntLxxXTF2axfQX48YvGvG0sb9wdj98uVgFOZ+6RipeDq1z
OSI2jb9YfzqDGPPOT0RMbFl65l0/MTB+TiGnBD9RJNfwBm2O+YmUyy1bO+7z
E5Y5+co12+Un8u3+5F5rx9+nv/6c7xXVv6Md2qUf+k2h5UAu5ERuxsG4GOcq
PW70gF7QE3pDj+gVPaN37IBdsBN2w47dtF2xM3YHB+CCPCJwA444XwDOwB04
BJfglDpR4Bhcg3NwDw/gBTyBN3/uNdO8gmfwDh7CS3gKb+ExvIbnNTXvU9/Y
reqM7fG7NDFqminqVLuu8ons+2Wc+nyIfK/cGKXqFi526uic2Sr/nu3ThmLt
/t67zv3L3MPKfYzcy8b9TNzTwn0N1G1/rOs3U8eVeo7UdaO+E3VeqPfAuW/O
f3IOjPMg5IWTp/tY54mRL8K+MftHj3UcmXgS60r8S+YZ8FY38KvrxcMWYYwr
rvJidlnM6IDxFlF96RTlxwZHft/yOx4+/cphFQ975lhQzXc+9nd+dnzkL9bc
d1LxtuufU//KstJf9Ju4p2J8qJx3n4xSvClUca3yy8fuXKzm3WLvwksWyCjX
59lu94h5LXk8zcmS/rKfeFWpsuLr1NWV0r5a4yfiXq5olTpC8vresg9Xx/mJ
PRkyXV8x2E/8sE/aPDPIT9Sq/bLhsa5+Ymu6m006GX+fQn/O9/gd7dAu/dAv
ciAXciJ3YT0OxsU4b+hxo4cuWi/oCb2hR/SKntE7dsAu2Am7YUfitewXYHdw
AC7IJySvGBxx3gucgTtwCC7BKbhtonEMrv/UjaZuueYBvIAn8AYewSt4Bu/g
IbyEp/AWHsNreA7v+449ouqKZL1dQdUbqt5uZMKK0abo5LZQnT9+m0uofKPQ
NOcKlPcx5Xu/7ugcXpLPzfKmiKr39x527mPmXlbuZ+SeNu5r4t4W7m+gjjv1
nKnrSn1H6rxR74m6L9R/SK/PgXMelHNhnA8hT5x8UfLGyB9hH5n9pK46rkx8
iXUm/ibzDvhraRk3KmWYRYxZXl7lz4w+GeDqXsciXtYorvbJznwLUftqlhnX
t6S+Lv30zhuVP3w6/mv93/G1sRUSld9c50Ubte6e9aF6vvAS/sI9aqDyw78V
KTSrzmM/MXNbCzUfj9yST/HveKX11ztP9hPpPziVetfXTyy4l+bUjw5+YvLE
Lgmn6/qJB20Gt1tdwU/4+AamOlPITzSuPf3SoDx+4tCZlXbnsvmJ7W0HzfiQ
yU/s0E8+53v8jnam6Hbpx1b3ixyjtFzI+VXLzTgYV209TsaNHtALeorXenuh
9Yhe0TN6xw7YBTthN+zIfgF2xu7gAFyAE3ADjsAVOAN34BBcglNwC47BNfXi
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
h1uV2p9X5zNczvdM5zluPdU8bsnN5v9PGGMdtsiqXBbV0HVS91Pk1HHRwXuG
bEtisarTy8rr81P6xtM/mn649MWkrxz9pegzQ78JdOfRn0aHFj1KdOnQp0Jv
B70K6u+pw6Uej3oW8vPJbyXPjXyXL3LuzfkXcXDiYezvF8j6mPc9vE+apuea
qHV1zqnX3m1/564W/bbXP+p92zPHS70+/3XPUL8JA1upBm1yqShejvYcE7vK
mxZq6c6LlWZUb6GC3EY0Lb7KVVXr2S+yUz7z88bJLsUONVcH37g82T+4uTrT
2MOjm/sfnwfk73yP33Edrst9uC/j6CXjYpyMO5nMg3kxz4Uyb+ygxC4NxU6c
f2JH7IqdsTt+wC/UG+I3/Ihf8TN+BwfgApyAG3BEPxZwBu7AIbgEp+AWHIPr
IYJzcA8P4MUPnghv4BG8gmfwDh7CSz/habjwtpnwOJ3wGp7De2ub5pNf9Ijq
V+50Y7nVUJ0zZ0ryrZWhggLy6rqCZqef6nrDJdUGzJ9SzHx+BA+aU8LJUNsr
Ruh8pB1hWXW/k+7PbfuT33uW0ecW37c3031SXp5eXzz1AatK0LioroMsP2qF
zn/oVODC6cLjzPVPp+daX7Hl849aV0E5emi9Fd/np3Qc9ZT0kaefNH1lrdJf
kj5z9MmiXw79J9ChR48aXVr0KdGpQ68K3Rr0K6hjp56VujbqW8jPJ9+VvDfy
Xzi/5zyMuDhxvTuyT/4s62Xem07Cn4Jj/bImSequHKz79f78ZafWHaLW5TuT
fPebULOl+lb00sGo9/XKFn4b6ox3VeniHxsQxd8cV1bdHu/YXK1y3dJ85uBm
auq1DJsyODRTGROMCUqys6kq02/ysVpT//jk79Pke/zOSa6TQa7LfX6X+zKO
VzIuxsm4c8k8mBfzvCfzxg7HxC7Y6YXYDTtiV+yM3fEDfnkvfsJv+BG/4mf8
Dg7ABTgBN+AIXIEzcAcOwSU4PS24BcfgGpyDe3hQTngBT+ANPIJX8AzewUN4
CU/h7SLhMbyG5/C+ZVDH2GG+hvp9nZ/uM3B1fn+tK/KgYIUNo+qY+4XpiQo9
q2CoT5tS6n6mTjmzFrdkM1TIGVt94pq8DfKHf7eqRLWuZr3x0qoybK6k9Q43
jdibMdlZqyp63qrznIuG2vY3q58c+TjO3O+cjxit9VSDaxeNuNvNnP+GCTpf
ov+5zyFPXaxq5LZvawMKWlXyi721HstO6Sv/q/SXps8s/SbpO/dK+k/Rh4Z+
FOjS+4s+NTq16FWiW7dS9KumiI7NGdGzoK59tNS3UudGvQt57+S/kgdHPkw7
ORffLedjnhInbyXxsqKyb2b9HCjvUfgUa2+XkQvSt1I1ilZ8Vj95S1VlyaLf
o9btPRvU6p0sgaty7zLgcRRPb1laeBrFmqmSlR99/W40VQcK7Bm8+Lcm6lWh
u7eSOTdRG9fOCC60tbFausT/gHfLPz75O9/jd1znjlyX+/SQ+zKO6jIuxsm4
mQfzKiLzdJN5Y4ddYpcfdhK7YUfsip2xO37AL/gJv+FH/IqfB4jfwQG4ACfg
BhzR1wycnRTcuQgO6XsOTsEtOAbX4BzcwwN4AU/gDTyCV/AM3sHDnMJLeApv
4TG8hufwvpXnCJ0fXPb1XkdfL0MNy/vUeXpzQ0VMs8UP5sY6o/uWpjk/X9cf
3679LHFIZvM+sZPqfMTanb7o/gaTi++8c/WZue9PYatnHOVVavvmU+a6/vVy
3S/lWsitpp+WmfNceyFgSoBVnXvwTOdFp127pJVPJ9Mep237o1gJ3+m6yjjP
HI4XyWPu9x2a6/yK0xUqh259Y66zpM88/abph0v/SfrQ0Y+KvjT0p0Cnvqvo
VaNbm0j0K9GxqyJ6VujaoG9BnTv1rtS9uUr9C3nwWyQf9oPkxaWQ/BjOyTkv
+ypxc+Jn7KN7yHqa9yr8Kr2/0JzIR65q1vKZg6Lex+E9s70bvKSZchmS617U
e3xOtoOn105tovxzhj6O4nWlGmU/zbrQUO0MGDTm0OIGauXxTRMGn6uvYjXN
2CGv9Y9P/r5HvsfvuA7X5T7cd6aMg3ExzhcybvYFzIt5co6BHTzELtgJu2FH
7IqdsTt+wC/4Cb/hR/yKn6eJ38EBuAAn4AYcgStwBu7AIbgEp+AWHINrcA7u
4QG8gCeDhDfwCF7BM3gHD+ElPIW38Hi48Bqew/umczovyNfF/F7FoKVz2xmq
gsczrTNc8f4IrTe4dJwtr8C5fk/dt6zC3Xm2vgWlktyokNh8viSzxSM8ryfS
/VDTP1q2qcRVcx3jkcW6/Lj5nLrRe3jvbVZVLfyLrn8s6BR3dlQ/lYQ1b2u9
lJM1U+5xNawqazMXnS+VPPyuzqMuejmh1mOtncSlU4WEVvXx00u9v/KtekjX
Y9B3nv7T9MOlH+U26UtHfyr61IyXfhXo1qNfjY4tepbo66Fvhc4NuhvUvVP/
mlDq4KjLIS+e/Fjy5KZJvkw/OTf3kvMz4ujE05bKvpr1Ne9ZeL/n9lBr1Pq8
38kjEaUrNVVXWvef2s6hiUrZ7Ubu2SZv+0d6b43icwb3lg2+Zqin8h+e3cV3
fx31qoVH+qCQ2srr0OuCs1r+8Rkpfy8s3+N3XIfrcp++cl/GwbgqyzgZ9zKZ
B/NqJ/NsL/PGDlPFLtgJu2FH7IqdsTt+wC/4Cb/hR/yKn/E7OAAX4ATcgCNw
Bc7AHTgEl+AU3IJjcA3OwT08gBfwBN7AI3gFz+AdPISX8BTewmN4Dc+bCO8X
vrbFA9O06651xRNcev/Li8aG6tXs7aGB1Qx15fXGWzNLG2rds+d1K+Q11No7
/lqf8F02P61fHpD2is5PPri48bfVj6yq8oZCWt+scpYOWudk/LvuDlM3m8+z
uGN1fOP4La+cmyZa1bRcyeJk7GdVkRXX6zqJKz0fan3F0b9PSpi+tFWdqNFl
b2hmqxqyvU/SYXGsamCqwjrvek7hMTVaBVtU3fNhuk4zmfShpw82fWnpT0mf
Ovpk0beG/hXo56Nnja4t+pbo3O0RvSt0b9C/oP4+ndTD9pO6uJFSH0Oe/HLJ
lyVf7xfJn9ku5+i55DyNuDrxNfbZvWS9/VDeu/C+66F5GQqb6/adObJmPOjQ
UFlrhzR54V9PbexZ1v1hnTqqzZqVS5O1rWWuT5sPHHulhqpUoFiyiaerq3KD
fd68cPmHT/k73/OS33Edrst9fOS+PAcYF+Nk3A1lHsyLc0PyB7AD+YTYCbth
R+yKnbE7fsAv+Am/4Uf8ip/xOzgYJbgAJ+AGHIErcJZUcFdPcAguwSm4Bcdj
BNdXBefgHh7AC3gCb+ARvIJn8A4erhNewlN4C4/hNTyH981Sbnxa1sdQXccv
1zqCLgHnjnZpZKi4pZ12PlDmPmFoa61D3ihjap1npKZk1PHG1b2SBKVNYKiU
e1Lo/uf3Ey3QdYtFBxbXegYjWqzVfRDSufno/Ob4kbt1nsORQju0Lsrdl88m
JPOzquXDw8v7trOqUznTzHxU26pe7Tmt4yXF+0Tq+sr3r8K1LmtYx09FJt63
qLQJMqcef9yiAisEaz3XLzNW6TztNtKXnv7U9KnNLf0q6VtH/yr62JySfhbo
2qNvjc4tepfo3q0W/avJooODHkaA1MVTH0s9XqjUyxSXvHmL5M8GSx6dm+TT
cH7/UM7XiLMTb3OTfXdVWX9fkvfwAeFjrDg1e0a9r1M2HNkv6n3ub8k5J4rH
rteSbC22vZrymXOyc1B8FxXyZNqcpluqqpDdzXemGV7lj0/5e1f5Hr/jOlyX
+/AcCJNxKBkX42TcY2UezIt5usu8sYO32AU7XRC7YUfsip2xO37AL+gg4jf8
iF/xM34HB+ACnIAbcASuwBm4A4fpBJfgFNyCY3ANzsE9PIAX8CSt8AYewSt4
Bu/WCA/hJTyFt/AYXsNzeJ+zrO08oG3VoUXrtDbUhPa2vMGp40ZdGVvVUPvy
/ar1hmLNaFbsQ05DhXWuUPhtakOVT/hG65bnCmo7ummkVVWcnUj3N+j8uavO
WzpxZJNr1wNWFXLWFs+sur+E1kGq9vxhuNtYq3K9mVH3VytlmaPzoxO+26d1
VNTA5zsqF7Eqr0Ztio5OY1WJpoXqPg1PnVenWnXbooa2baPrMdfvf67jLxm9
i9dZONai8o5+pPVe6VNPv2r61tK/kj529LM6K31t6G+Bfj462ujeon+JDh56
WOjtoI9BnTz1stTNJZD6GfLoyadNLHl15O1wzs55G/F84m/sw1mP+8h7GX4u
qJegcIrmNVS5DUHr0sxxUcP9l05Pa/LbrXXrO5HHK6g6L8ssWVuynJozMrDW
ltvOKkg+lfyd7/E7rsN1uc+P+8o4GBfjZNzLZR7Ma4HMkzxF7PDDLmIn7IYd
sSt2xu74Ab/gJ/yGH/Erfsbv4ABcgBNwA47AFTgDd+AQXIJTcAuOwTU4B/fw
AF7AE3gDj+AVPIN38BBewtP9wlt4DK/huZPwfuPJrrqvaInOy9pWcTdUnjJ5
dP3gM+9BWl8srnf5h7WLG2rB1Sm6P9Hi9rk7BaYy1Oz1tvOHw80KaN3CMdtH
9Et7z6o+NDukdc7PfK64et0+qwq+fF/3S014cJDuk9K//76IGqOtqqRDA5tu
v3983Vehp8Mg3Xdp8NTvOl7a9dXDFasdzedl4xY6v9r6Nqmuv966yFXnXSyd
Vu5R5GKLSnU2mdZzTFsuna7fDMj31v1aFXN/lt7Wt57+1fSxpZ8lfe3ob0Wf
m9bS7wLde/Sv0cFFDxNdPPSx0MkpJnoZVaRunvpZ6ug+SD0NefXk156TPDvy
bRbJuXtOOX8rJXF44nF+si/fKutz3tPwNehEz5BrtSurlBMTp19n8vrE1ouH
e+QvrZo8KvU+v3sJlWPkmSUNQ4r9+OTvB+R7/I7rcF3uw30ZB+NinJwbkj/g
JPM6K/Nk3tjhvdgFO2E39Aew6zaxM3bHD/gFP+E3/Ihf8TN+BwfgApyAG3AE
rsAZuAOH4BKcgltwDK7BObiHB/ACnpwW3sAjeAXP4B08XCK8hKfwFh7Da3gO
7xM7fLtb1TCUcy8n3V8wxwLnbfnqG6pmE9v54dxsY/c2KWauG463HLIhh7nf
d/bcNMnRUJsCs+h6xO+xWul+Rh1O39H9z3O4fXnd/pxVrXvpPbvWXquKs/9Q
v/6rrepkFjed5zip5hh93tH+l8Rxe3Qzn4Mvpmm9lCk9cz71UVblXzWb1lfM
dsZJ92PplLWBzqvaHTvvyMNXLep1trZfE++1qHs32mqdlnZOm3U89mng7dBE
7SzqbXDT2YkqWpTv9ZXz86Sz/OhjTz9r+trS3/Kj9Lmj3xV9b+h/UV908NHD
Rk8XfUx08tDLyiK6Oehu9JI6euppm0ldXQ+pr8klefYFJd+2geTduUj+zWo5
h+c8jrh8GonPsU9nvd5f3tvwN6RmzWu3D5dUB75Wcu14t7CK1bl7qeXX86pY
vy44mvtIrh+frzrZ/h4i3+N3XIfrch/uS5yQcR2ScZI/UF3mwbyYJ/UF2AG7
YCfshh2xK3bG7vjhh1/ET/gNP+JX/IzfwQG4ACfgBhy9EVyBs7aCO3D4RnAJ
TsEtOAbX4BzcwwN4AU/gDTyCV/AM3sFDeAlP4S08htfwHN5X+j2Hzgeo95vb
qBOtDHWiw9OGw+qZz5H88SKPVjLUtqauuq7Acaz3o6fZDdXhZDJdfxxev9AQ
B/O+J6rk2X3wlVX1yDdy0r3bJl8/xu7lfdaq5l+x6ZsdyjNS1zeqOlN77Z1p
VT5NSmp95PVDnbVO4sINflpHXRWZ2vlBFata2iFh7rN5zXWNs5Puy1YoyyuP
5m8tau/4c/p85VZkR+PJbosK/lpZ12MMOh+o6zQDC0zVeVo+9wppXZcJ3tuO
xk9t+idVdZ3fvVb62tPfmj639MWk7x39r+iDQz8M9PPRx0YnF73MRKKbh34W
OjrHRU9jvdTVU4c7Vurstkm9TRHJu18v+bcukocXIPk4nMtzPkc8f6XE69i3
s37nPX5H+NxjwPHWeUyeH/jwpEyLsExKXc4f73XDNMpLPvk73+N3XMdLrst9
uC/nBYyLcU6XcVeXeTAv6hCoM8IO2AU7Ybc4Ykfsip2xO37AL/gJv+HH4eJX
/IzfwQG4ACd3BTfgCFyBM3AHDsElOAW34BhcuwjOwT08gBfwBN7AI3gFz+Ad
PISXKYWn24W38Bhew/OKwvu0ZTauUOZnxpH1XNuaf39/LVtIcvN7u9vV03VE
8yfv0DpjJxO0qtDJvO65OOO1HmnyyIV9+sUy1EgH1935zXF0Ci2r8xNyOtr6
G+R5G2/KqN+sKqik+855K62qRsR43S+1c7Jxul/S9VHjtT5a7tpTPeKZdij9
cpaulxzbJZvuu+Tj4KrPTyf4N0mc7o1FTVs5I3fvSxZVxvd+usG7ouqvu2r9
9uKjE+u8zLydSlWb5W5Rfb88/lDO2aKSd7mi9R32JRupz3PWz0jSK0oHhj73
9Lum7y39L+mDR58s+uLQHwP9fPSy0c0tKfqZsURHb4Hoac0RXR10N15LnT31
trWk7o76mxqSh08+bibJyyM/h3N6zvGI51+R+B37e9bzvO/hd6yGuYfea5pE
Dd8cvtUl4EtVPvn7j+/J77gO1+U+nBcwDsbFOBk3+cbMi3nWkXljB/QHsBN2
Q5cMu5YQO2N3/IBf8BN+w4/4FT/jd3AALtYJTsANOAJX4AzcgUNwCU7BLTgG
1+Ac3MMDeAFP4A08glfwDN7BQ3gJTxcIb+HxB+E1PIf3o9xvD01mfmaYZNMP
H9wwg+4rMi3O5WVpzN9NnVCmx40onZ/NYVpvxPFsY92fqOXS9ZeLmvf9kPyC
zkfKVPqg1i3bt2Skrlua9Xqm1jPImWCH7ovqX3zLkUnmvLYUSqZ1kLLFy6H7
KIa/txSb4GrON0snXSdx61ginS9Rta6L1lerk/2L7scS2dsx6MRFi/J6OlXX
X7arm1/rM5VcNrdpy4EW5eA+W+s6rw4fofs+uPZNqM9vu1Qf4tnhsbmuDxie
cOk+b3XdqZTWh0sjfe/pf00/XPpi/uiPJ/2x6JNDvwx089HPfis6upNFTxNd
vSeir+UjOjvoblB/v13qby9IHR51OcGSl+8s+blBkqdHvg7n9pzfEccnrse+
nvU97/sffLf7j7+zHuB3XIc4IffhvoyDcZFPWFrGfVbmwbyYJ/XH6A94il06
iZ0ei916iB2xK3rF2B0/4Bdn8dOP/mbiR/qc4mf8Dg7ABTgBN+AIXIEzcAcO
wSU4BbfgGFyDc3APD+AFPIE38Gi/8Cqj8AzetRIephJewlN4C4/hNTyH99Hx
f7r8bsq/yP+Z/+X8T/1P8t85Bv6/iYb/4BidLc8Y+J/Qjv/waOlP8n9aDPyP
teV/5j9/V9Hwf86/yf+E0fAfO7QTu3S243/3v5j/qWPgf4v/MP9nxsB/eOj4
T/J/pPD+P7X+v/YfXv93+cn1v5/d+r99NOt/1qXoaLNunWW3/n9lt/5nHRxu
t/4/JOvmzDGs/5Wsw0N+cv1/oIFtnf/jOSCfP/7+8X9e/zeR64bYrf8jY1j/
H7Fb/z+UedaLYf0/y279HzuG9X97u/W/30+u/7v8h9f/1/6m9f/7aNb/Pxv/
I65g/MnxvwUSB3H5i+J/d2OI/1ns4n/DfzL+9/VPiv8RBytsF/+jDpc42guJ
q+2MJv7nE0P8zyua+J+yi/95RRP/47o+dvE/xsG4XtjF/6rZxf8KRhP/22MX
/zv2k/G/r/8X//sf43/wdn4M8b+/6/zvVDTnf6X/w+d/n+zO/zb8i+d/G6I5
/+ttd/7XPJrzv0J253/U33OOxrmasjv/a/OT5393fvL8785Pnv9xX8ahojn/
q/FPnv+hV+z3Hz7/axHD+V87u/O/1//k+V/paM7/Tv3N53//bP7Pkhjyf97/
m/k/Q/7L83/8osn/2WqX/1M1mvyf93b5P70kD+asXf5PoF3+T8lo8n922uX/
lI4m/+fAT+b/nPg3838YZ067/J8c/2L+j7LL/9kaTf4Pfon3N+f/LPvJ/J8h
0eT/lPqL8n/i/WT+T0z5v/tjyP/N+X/5v/+f/N8XP5n/Gz+a/N/gfzP/d040
+b+c3zexy//lk7iB10/m/1r/yfxf5sU80RPFDgljyP998b88/9flvzT/92fr
fxrb1f+s+Sfrf+L9k/U/JaKp/0n3k/U/L//k+h9Hu/of+mDPtav/mS91Kp5S
txJmV//jbVf/01LqYHxiqP9pLXU11N9Th7szhvqfJtHU/5yQOP6JaOp/mvxk
/Q91SNVkXIxzuYx7dDT1P2529T/t7ep/wuzqf+bb1f9g9yl/cf3Py7+5/gee
pPub6n/+rvrfgTHU/1IXOeYvrv8d9W/W/w6Kof6Xfpz0x6M/F/1yfKXOFf38
HTHU/36zq/9Fd4O6W+pw99jV/7I+J0+XeJ2Kpv6XPKKVdvW/XId1xp5o6n/D
7ep/v0VT/8s80S3HDtgFOzna1f/2j6H+F7/89jfV/yb7i+p/4Yn/v1n/e1V4
2zOG+t8mf7L+R7p/Uf8jSwz6Hx/+Yv2PkH9R/+O4nf4H/XA97PQ/DNG1mC46
F33t9D/Qxdhgp/+x3U7/A72dvaK70ddO/yOpnf5HSjv9j8gY9D/4XsoY9D/6
yH0ZB+OqJONk3MxjQzT6H9gBXRQjGv2PljHof8T+L9H/+PCT+h+nYtD/WP03
6X/8s/pfd35S/2vkT+p/pfk39b+6/4v6X93s9L8c/kX9r6GiQ9XcTv+Lfrj0
xUxpp//VOAb9r552+l/VRFerpOhszbDT/1J/kv7Xzhj0v7gPeh+Mo5SMi3G+
jEH/i34h2AG7YCfsttVO/6v5n6z/1e1v1v8680/qf438Sf2vOzHofw2LRv/r
f4v+5y7RVVwag/7ny39R/3PRn6z/+dpO/7NtNPqfLUUHk74Z8UQnc4Gd/ue3
PTZdTRfhVyU7/U83O/3PUnb6ny/s9D+D7PQ/18rfX9jpf3Kd23JdNzv9T8YB
77/LOBPKuINkHsyrcDT6n9il7V+s/7noT9L/BHfqv0T/0+lf1P+MTv970d+k
//00Bv3v09Hof1v+Zv3v9z+p/71CdKp/i0H/2z8G/e+cP6n/jc7WCom3pZe4
O/X3K+Ucfpqd/jf5uaWj0f9eaaf/zXVX/KT+dwEZd+4Y9L/9o9H/fmWn/73i
//S//xL9b/v+H/QJoG9A+P+y/h/j/8v6fySQPhb083aJpv9H7xj6f6Cj3eMn
+3+gH0L+jbLr/0F9QbBd/w8Xu/4fi6Lp/1HPrv8H4wqMof8H8wyMpv8Hdkrw
k/0/ctv1/3D5L+v/0dGu/8fg/7L+H39V/69cP9n/a30M/b8qxtD/y+8v6v+V
/k/u/5Xcrv8X/XAH/Jv9v4irP7Tr/+Vk1/9rvV3/r4R2/b/Iz+d7Dez6fwXH
0P/L5Z/s/zVI5p3drv8XdqrxJ/X/Sv8X9/9yi6b/V8U/qf9Xbrv+Xxvt+n+F
/pv9v/7T/T/b2vX/nBpD/8/bdv0/faLp/5n4T+r/OVr6SJax6//Z267/53K7
/p/p7Pp/lpO+lmfs+n8adv0/+9n1/6SPZhG7/p/E0dHTJX+APp3k2RWKpv8n
dXgX7Pp/8j3ydLkOeTs+dv0/29n1/2ScrPOZB7xPJvPsEE3/T+yE3dLb9f9c
Ydf/s/f/z/p/RsTQ//NgDP0/4anlJ/t/Rtf/O6Fd/++vf3L/b9f/sv7f93+y
//fyf7H/940Y+n/DB9YD7AvYJ7vZ9f9ub9f/Gz3dxDH0/64rdXc7pP6WOtw6
MfT/Rq/T3a7/d3u7/t9udv2/WecPsOv/3S2a/t837Pp/f/mL+n8HxtD/u+2f
1P/bJYb+367R9P8u+jf1/969sVbbV0PMf88TL2n1XoZ6Pbt7wSodDOWxN+Pn
m+6GiihkyxtMXP7myi9VDdU5jm1/sWlQKp1nFOi8o6xjOkPlHNs/RcmEhrrf
81DIpQ9WNfBr6KpPj6zqe4B7zxmXrepU95FBQces6mHg9Qbpt1mVdcghp9dL
rGr0mV7ueadZVcpnm7etH2zye3WO/iPM9dGSIbn1eqnXuRm6XnL72gzj3PKZ
+4VCXo3fpDDt066Zzq+es6KNjrtuVtnbOR4x/7/U8fXbVlrUzOLDD5afZFGZ
vCckm+JrUR9yrdH5Gw0Shqc3illUyLmNW48kM7+/K6/b+gjz+d+jiH4fXEnx
NSAqD/y7d8pb9/p5q986NvhWpJG3GhB8dX5gTm/VonFlWzz5fnZdTxp85nOt
qPqSIhOSjfX2aq+ubCqh16Vjq52qGpWPlqbfb8Wi6lJ31ViS9eMgL5U288kx
UefXax1nTlr22VOlEfzzHqQfLvti4mNeEienXw59M8ifOSt5dOTTkldPfQ11
drOk3pa6ez6pw+V7/I7roNPLfdDt7y/jYFyMc7yMO1DmwbyYJ7zHDtgFO2E3
7IhdsTN2xw/4BT/tFr/hR/yKn/E7OAAX7wUn4AYcgasfOBPcgUNwCU7BLTgG
1+Ac3MMDeAFP4A08glfwDN7Bwy7CS3gKb+ExvIbn8P7U+RELYo0w1Mz58+/1
NfcDcRfa9gfrCl6Y5WnuF0KzF1t1ytw/RPS5+ynM3E8kc7DlFYz/LVaL7fnN
3zXxqDM6k/lZskWN20kMlXbD6LSHvlqVp+e2yvmem+ufK81eOty0qsb3ujq0
D7aqbqGztJ5BwzkjdH1jtmct9fonfeh1p2vmemiat3fNjD2sKs7QWTo/+nRo
mW+da1lVrEEndRzVq+ywbbMzWlXcTvVmhMc27Z1hhGuDJxZ1q3X57HvPWVT5
nft1Pobbqdk6TrO43Rxdpznxw3V9fluhnG+1M1UtamvATf28X14k2/mlv3ur
/pFj3AZd81Z1ZqUedGWbt8qyav32NVPN9WLSAB0vbp3ttwe9q3irnX1veNZL
7a3apb3zrXV4e+XYZr2ON7WuW1afOzmVTKbrziIvBtavmKO9qvH26Nz0EV6q
3yvP/SU2e6kU2WZci6pXA++8987K+pd9MH2CT0hcnPMx+mSRL0M/EfKKqS9A
Z9hV6uqoO6bOHh0S9Ij4O9/jd1yH63If8vUYB+NinIy7hsyDebH/KSLzxg7J
xS7YCbthx5xiV+yM3fEDfsFP+C2z+LGu+HWA+Bm/gwNwAU6CBDfgqJzgCpyB
O3AILsEpuAXH0wXXGQTn4B4ewAt4Am/gEbyCZ/AOHsJLeBomvIXH8Bqew/sH
PZrHLjPaUB0GNi8VYu4H5uaKKJyhm6GCelQdmai9ofpbcs4LcjXUro0ea67W
NtSY+Fd2baxgqNHuK39xKmKoyp8vab2RBy4pdf1xh1LZdD2i85hybya8sarh
LqX0ucW87Z31eibHuYAi/cz1TblbHXR+c4X1FQMiF1pV3nmDl9aZaFWWdzl0
XLR6uoKF31tMu3pU1flSAyJGrTtZ3rTvrZNzJ+ayKmNGE51fkbBAnXVTI83n
8FBLkb3Xzf3brIvpPx001/unizwtu8KiGiVfqvO0r9QZr5/nVX7Zrc9zctwu
UMCjhEXl3xSs9R3yffPX9Z7ljyfW8eAqv4bm2LrCW70vWlznh+ctU3FJ99bm
8yHtUK0bE5Etp15nek+/vine9fYqXeCTAM917VX9Z05Zcg1tr355WUvvTzO1
66Xz0jYUeRkQdV7VX/C9U95zrHfZ96aQ+BdxcM7D6ItJfzzy5OiXQ958fKmf
aSp1dNTTUlfvI/oa6JHx2UH+zvf4HdehLof7LJP7dpBxkLfDOEfLuOnnzbyY
502ZN3aA99gJu2FH7Jpe7Izd8QN+wU/4DT9WEL/i53zid3AALsAJuAFH4KqI
4AzcgUNwCU7BLTgG1+Ac3MMDeAFP4A08glfwDN7Bw7HCS3gKb+ExvIbn8P5E
sfMpJo0zVJbaKTo2HGyoeq7Jj+7tYb7HTxx7dNVqqJedfC2BbuY6415uXT/4
edqIy47m+mJhtTipdpUwVJ0jrXN/ymWoOSuXrT2T1lB7q/bT65NRj8N0fvLy
0WmPznpsrncabl026YpV1ej0ps/vx63qxp7JOs45r3uPl2WXWdW9Kl2uRQZY
1ef+SbQO0lW3oKMTu1pVYJi/zpdI1PlJtm7VrSqkw2sdVxl88k4dt/RWFfok
yaHMsazqSev8Ou86or7ak8J8Pjs+2GfLy1zupPWZPG98+tBvqLmeK5Nc12+G
rpqp67niHd+t470f4wa/zR/PonaO319++T1vtXb6p55ROjC+Kya2CZvvre4M
7qLzxX4J8Sm8u7G3mnb5iM4nOfNlpNaTqTShVM8Woe1Vv7mbdb3ZqL5Ny6wY
0F41XdtT56WAZ95rrG/Z536WeBfnBZx/kT9APgx5ceTH0ieLPkMVpG6O+ll0
tNHTQFcHfS0++Tvf43dcp5Jcl/tw38QyDvp1Mk7G7SDzYF7E9Zg3dsAu2Am7
YUfsip3Pit3xA365LX7Cb/gRv+Jn/A4OwAU46Sa4AUfgCpyBuyGCQ3AJTsHt
FcExuAbn4B4eVBdewBN4A4/gFTyDd/AQXsJTeAuP4TU8h/f3NhSoGW+ioS5O
Pnj72TBDnS2Y8tRYP0M9Gf3i6VkfQ13Y+zHBoTYmr5dM0+cItQedssw31xer
dtbQ6w1j2tMl78z1h0+W1QUSZTZUzfpJdD7i7KAzPR79bu7Tr3TXccv3145q
3bJfh/besuOsVUWe8m/2ea9VHcngXGHzWqtKnm+5zn/YtTbl+k7+5vPOLUv3
Nn2s6vWlNbpOwvVYWX1++ibPbZ1H/eyz15neOc19QIHKWl/Ns39t/TwuncxB
11+XS9lK12NeO78jmd8qi4pz0HH5/CkWNaT1aB3PzdS0TN1vLSzqQhYnretS
vIaTzvdMGTRB133+uuSTjg/dzuCo141da2bW+nBLVgY6HunmrfoGft0UlUf6
rHIBXU+2aVk+XV9ypdxwrTNhnfzum44PCn4D5D3GepZ9LfEt4tycd32Vc2/y
X8iDIx+W+gLqjKiT+yz1sugPoJ8RS3R0AkVPy1d09dDX+6GzJd/jd1yHOlzu
M1zuyzgYF+Nk3MyDeXEu8lXmjR2wC3bCbtgRu2Jn7I4f8At+wm9LxI+O4tcS
4mf8Dg7ABTgBN+ColOAKnIE7cAguwSm4BcfgGpyDe3gAL+AJvIFHtYRX8Mwq
vIOH8BKewlt4fE54Dc/h/d5qdTMumGKo7TucP68dZahuRbsO6hm1Pjg9XOcH
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
glfwDN7BQ3gJT+EtPIbX8BzeV/11/PwMgYaqd8g/6MIv5vqgWJk1dccbKlHs
xt0HDTXUo44dJxi9DbW8dL1R8X0MVfhcr5NubQxVv5wtzhDRKsvo5DUM1Wxh
Es8uZc19ybV5uv64XN1qrTJlNZ9H12z1iaOb3ghvEqVT/Cm/1i2sNPaYft7t
aVO7/Arz+VfooEXrnHT9UOn7bnNfNNGppEPapVa1aVYnHS/tEFZU6yPXKlBH
508WaNW10fQ25n7pdfxF3nWt6l3R/jrfKlbn7MU9nKzKuUMjfS7TZOA01/jm
uu3242Fj3pnruKDVY3W9Vo0VD91jbbGouK0sWr/9+eR4Ws+xY6qSbzt2sqi+
oct1Hsi0NX6670O/Hm20DmT3ilN0fSh4473D+pN9KPEo4tKcT3FO7Sr5Kssk
b4381XWSx049C3Vt1LdS544OyUDRvUH/Ch08+uGii4s+Njr59Mvgk7/zPX7H
dbgu9+G+jINxMU7GzTyYF/MkXw877BC7YCfshh2xK3bG7vgBv+An/IYffcSv
L8TPccTv4ABc3BKcNBbcgKPvnWy4AmfgDhyCS3AKbsExuAbnewX38ABewBN4
A4/gFTyDd/AQXsJTeAuP4TU8ryK893rcvUbZJeb63PdmmqxzDDX/zubqhyYb
asHpumtyjzLU4SsLdJ5wWf8n+vzQdW37uUvbG+r1sFf3HrQwlMeV9LqvSP8t
EbrecF+VQgUOFzfH2+OXPTtzmfsS3yZbXM3n1691bM+zZ9eb6fqFGnUztXht
Pu+m17LlOaycYOtv8D3eOB0PjahcSNdBnnS6N6DoQqtK39nFVifV/7rWSykX
K5vOp2qZv4fWUb+xfK+OvzhkW7y8TTGr8sttW6eVqJxB52UOCYrU/Vg23vHS
57dPjoV49DlqUQubniu1aL1FbXvdX+u5BHqt1Pmeresl13Uft7d7HA5uaFG/
hk/TOjDgi/cM6032ncSffsSh5TyKc2nyU8hTmy/5quStU79CHRv1rNS1o2+B
zg26ZOjeoX+JXjF62PlFF5/+GPTJ4XOU/B39fH7Hdbgu90Fni3EwLsbJuKvJ
PJgX8yRPFztgF+yE3bAjdsXO2B0/4Bf8hN/wI37dLn5eIH4HB+BisOCkuOAG
HIErcAbuwCG4BKfgFhyD61WCc3APD+AFPIE38AhewTN4Bw/hpbPwFN7CY3g9
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
07riKdwitM7wkuR1G6aqZaiy8+9tKl/BUJeabNf5SvO/T9T9iWau6Lw+TlpD
ZYzvq/XLs29JkHDfZ6vyHbtJ1ztFVitn63Pq1z124ij9s8wrdB+E1ddO6PPT
LHHLab2UA+3H6H6pj9c7ZMxk7r/CFvbUeRcTI9sX6WK1qpQXc+j6y5kd+ui+
S7tfbwl9XdzcF+SIp/WZ/Irc/ZDiH54DvBdYH7JPJF7EeQHnR5wjk09CXhn5
peSZU29C3Rn1pwulDh09CnRp0KdCpw6dUvSKm4p+dV7RsaefBX1t6G9Ff0P6
XdL3lv7XfPJ3vsfvuA7X5T7cFx1txoWuZicZN/NgXsyT+nvssEzsgp3iit2w
I3bFztj9rPgBv+An/IYfWefh597id3AALmYITsANOAoVXIEzcAcOwSU4Bbfg
GFznEJxnEtzDA3gBT+ANPIJX8AzewUN4CU/hLTyG1/Ac3o/PUP/V1D2GKpPW
9jw45OPd2sV8PrhPP1ww2HxeXIlXr6rTbPN9f/g356qTzedQJVs88VrdZrqO
qG3fxt7K11Afajw42dtiqNmB2XV/wfHFXul8pKJJQuP94mKohjMPJz5axlDl
PP3KbylgqKNeV3V84+JvSXU907xvs3We4/F1tnXRgmpXppV6Yq6jNh/b1uO6
VTlkGKH1UDKMulM84X6rqvJ4bRvPjeZ+3vNju87mfiv7pBqF8wdYVfxsw7We
atK9j7W+4vo313WcZkaJRXdyN7OqQetyJeziYlXFHI/p/A38z3uA9SD7QuJD
ERIn5ryIc2PyR8gjI5+UvHLqS6gzo96UunP0J9ChKSx6VOjSoU+JTi161ejW
07+CPjbVpJ8Vfe3ob0mfW/pdp5G+96nls7P8fZt8j99xHa77QO7DfRkH42Kc
z2XczIN5MU/mjR2wC3bCbtgRu2Jn7I4f8At+wm/4Eb/iZ0fxOzgYKLgAJ+AG
HMUTXOUQnA0S3IFDcJlQcApuwTG4BufgHh7AC3gCb+ARvIJn8A4ewstdwlN4
C4/hNTz3F95/S77qbaGDhlpYN3+m+ubzYO0yJ4/y5r6gaETzoe/M50WJu711
vLDjkNN9LwQYqt/qdydf+Rtqjufur5eHms+fF8l1XYHvqyo632jnhmq5nD0N
9blZncKlXc3n0Oo+ZyLrmM+hT4/1ucXmZd8do+qVErpFdNmdx1DbV83SfQvu
JPjg8t5cB7WMs/ly0ViGqlKous6DKjtyruv5h1YV51P17+WvmPuoUim82pwy
n7crPfX+ar1rAX2+8rTj7OtZFlnVqaO+WlfheOZSv0cMN/00Jo3urzbk80qd
lzkpb89dq5r+8Rzguc/6j30g8SDiwpvkfIhzYvJFyBtLKfmj5JEPlXoS6sqo
L6XOHL0JdGfQn0KHDj1KdGnRp0annn4V9K2hfxV97OhnOUb62tLfmj73151K
6XM1Pvk73+N3XIfrch/uO0HGwbgYJ+NmHsyLeW6WeWMH7IKdsBt2xK7YGbvj
B/yCn/AbfsSv+Bm/gwNwAU7ADTgCV+AM3IFDcAlOwS04BtfgHNzDA3gBT+AN
PIJX8AzewUN4CU/hbRHhMbyG5/D+YZIJKuyouR9/saN4jr2GCs93s3nlrYZq
dbXRlIJrDBW34tOD4YsNlWbQ6bM95pj7iZqpZhyfYqiJLa7pfKJZwXWOXhpo
jr/N8beTehjqzOHOuq9oj14TvjbxMNS91VN0fsKRsM9jitQ0VOwyu/sdKm+o
eOu36XVOwMJdOcrkNMfXaovWMxmQsVGZ9YnM8fT9oPsbjO7ZYnf+V1ZlTl3r
IBW4mEPXSWRI/kLXS+ab91tkht3mc3rsLd0v1WPXphnTF1rVoTjfZkX1U+mS
3kHXXR59WN35S48//Mtznn0B+z7iP8SBOQ/iXJj8EPLEyBclb5z6EerIqCel
rhx9CXRm0JtCdw79SXRo0aNGl76n9KegT81o6Vd1XvrWLZP+lV2kjy39rOlr
v35Gkl5RcfWNAcMTLt33x+c6+Tvf43dch+tyH/pkMQ76ZjDO6zJu5sG8mCd6
bNgBu2An7IYdsSt1HNidvE78gp/wG37Er/iZdT44ABfgBNyAo9aCK3AG7sAh
uGwnOAW34Bhcg3NwDw/gBTyBN/AIXsEzeAcP4WVq4Wk84S08htfwHN6fuZBt
wrhThvKolsMx1iFDjX1e73L9XYb6ujTXjU4bzftszZvNfYW5Pnnur/OFtiVI
23zFDENVH5Ff1w/e6R/qV3SEoZYWyv4kdz/z+VXLFo8YYPTSfQZGDW856kQr
Q93u0fdSeANDxX/XIsEZc10T5lBN1y12XVtI6xZ6DQvVegYeIQ3C86Y21OD3
t5I+TWCoBv0a6LyIsoXH7T1o7p+adLuh+59XvTrm5ZpQq7r95lSxusei+iUt
1v1SKt+8uOnyaqtqvmibjscWW1An/fh/eA7wXGd9xz4vlsR7iPty/sM5MPkg
5BOSH0qeOPUi46VujPpR9AfQk0BXJqPoS6Ez90NvUnRn0Z9Gh55+FPSlSSL9
qehTR79K+tbSv7ql9LG/k6q6XnfvSzZS87VL9SGeHR7/8cnf78r3+B3X4brc
h/syDsbFOBk382BezBNdRuyAXbATdsOO2BU7Y3f8gF/wE37Dj/iVuB5+Bwfg
orPgBNyAo0qCK3AG7sAhuASn4BYcg+v2gnNwDw/gBTyBN/AIXsEzeAcP4SU8
hbfwGF7Dc3j/sPyDyTXOmde/n7jzk2OGWhK2ZrRln/m7AWk/bNpmPlceXLkW
utZQ53bOqnfiV0NVfPzIe8o88zmVxqieZ7p535Bzup6oec72rw8OMVS931WG
Y70NtXpFQa03NLaWbd2SNXUOrUey8UtafX5ZdePWGperGOpgk5ldlpQy75+l
m+5b1vPXHlrPdN3vSfT+yPeXd7M3xjPUlvVBCbp+tKreDdPqfKnka8rquEq1
dR20XkqWDAt0HWXX4R/TvN9hPm+D9/br/w/PgcPyHD8m6zn2dZMkvkOcl/Me
zn3J/yAPjHxQ8sKpD6FOjHpR6sZTin4EOjLoSaErh75kItGZRW8a3Xn6T9CH
hn5UW6UvHf0pX0ifWvpV07fe9/rK+XnSWdQE721H46c218tdruj4mmvfhJq3
LeQzmfyd7/E7rsN16YfLfemPx7gYJ+NmHsyLeTJv7IBdsBN2w47YFTtjd/yA
X/ATfsOPt8Sv+Jm4HjgAF7zvwQ04AlfgDNyBQ3AJTsEtOAbX4BzcwwN4AU/g
DTyCV/AM3sFDeAlP4S08htfwHN5/3/h76sRhhkq04vK7a6cNVbBXdodRh833
72/jB8f+zfxew7JjW2w2VJfPE1oPXWVep4/tHMH92p669Web49686/7zyYZ6
FZi5rre5DmnxuMDpFea6ZP3opFpv5EmNwIW/muuWbJl76vzkegEOZ240NVTS
XY2qFqttqBs3a2u90q6TEuk8h+2VPun6xmQpW2l9s/xHMiS9kdxQvZdm0P1O
yiRY0Pf9e6sqfLZ06d0R5nv7Rnytj9xjT0PdJyXXFS9bHYH4i/UA+wL2ccQJ
OS/gfIdzXvI9yPsi/5M8cOqMqAujPpQ6cXRI0I1BPwp9QvQk0ZVFXxqd+QnS
b2K99J2h/xR96OhHSV9a+lPTpz4g31v3a1Us6m1w09mJKlqUz71CtjyZL48/
lHO2qNXhI3S+HJ995O987438jutwXe7DfRkH42KcjJt5MC/mybyxA/p62Am7
YUfsip2xO37AL/gJv+FH/IqfieeDA3ABTsANOMopuAJn4A4cgktwCm7BMbju
JjgH9/AAXsATeAOPWgqv4Bm8g4fwEp7CW3gMr+H5N+H9lTeDX166Yqh0jncG
hoYYatiHu5lWnTBUlS1VMrQ6YKg+n/Ptu7HDUPtb2OIHveq913mDld4Gn/Jb
aM5jUSvXZua6I4myrUM6+edPNsFcl1iflM9331yn9JsVK3MKX3Od8u3G0GRW
QxUunl7rkd7bX7X28Mbm9Q+cdI6sYahbXe7q846AdyP3NilmKHUtTNc7rd52
Qvc3SFslvueIZIYq3zezrovMvtZB9z8f1zOB7ofa8PS6O19v/uEfntOs19i3
Eb8hjst5Due65HeQ50W+53XJ+6b+gzow6kGpC0cfAp0Y9KLQjUM/cpPoyH4T
PWl05ekvQZ+ZIOk3Rd85+k/Sh/aG9KOmL33e0Y903mu6cul0/Cwi8HZoIpOX
gQWm6vdw3k6lqs1ytygH99n6/JxP/s73+F1auQ7X5T7cl3EwLsbJuJkH82Ke
6GhjB+yCnbAbdsSu2Bm74wf8gp/wG37Er/j5kfgdHIALcAJuwBG4Amf+gjtw
WEFwCU7BLTgG1+Ac3MMDeAFP4A08glfwDN7BQ3gJT/sKb+ExvIbnl4X3N77N
/rbqpqHmnlpx+vxF83er+owKO2OoZ+27jt501Hw+bGlV3Gev+XvvGs8/bDWf
X7kG5PUy1xXJl0xoGGSuMxwiJl3fYa47wtZYdZ5RvJcVqnTxN59b99KWTTDM
UJ9mztX1x1f7vn23p4uhno54q/MWfFLZ9jc1y7vo/kT9un7U/Uqylj2p+5a2
aVGqx40ihqrVqFGxDznNz3y+LR6nN5RzKVu+xPHyV3SdVLLBNZudeveHP3gu
sz5jn5Zf4jXrJG7LuSHnuORzkNdFfid53tR7UPdF/Sf6A+hBoAuDPhQ6cQlE
LxLdWPSji4uOPP0k6CtDfyn6zJ2UfpP0naX/dFLpQ/9lxiq9b87oXbzOwrHm
e/RsMp0P085ps+blwPOBen9dfHRi/T4uuWxu05YD//jk73yP33Edrst9uC/j
oA8z42TczIN5MU/087HDNrELdsJu2BG79hQ7Y3f8gF/wE37Dj/gVP+8Xv4MD
cEFcD9yAI3AFzsAdOASX4BTcgmNwDc7BPTyAF/AE3sAjeAXP4B08hJfwFN7C
Y3gNz+G9MeZswZH3zP1Imy/Hwq4Z6tfeu9LGCzXXIaXPj09xOmpfUWHe+0OG
ejs61uGdu8155rKtKzZnStUt2FxnVAt2TJR1saGmVWvyrtYcQ81++Pxy3amG
mjQtyJJnrMnTjh11PmKHMEPXI65K8vjqSXM/c3XoL7ofyceBR09mammY+6+c
WrcwYpgtDjLmroOuc0wSmlT3M+3jZYuXOpYerfOjM2QIvt/5H54DPIdZj7Ev
Iz5DnJbzGs5tyd8gj2u15HOmkrxu6juo86Lek7pv9B/QgUEPCl049CHRiUUv
Gt14+keskz4y9JOirxx9TukzS79p+s7XPR+m4+GBFYJ1nuv6/c81/5ZOK/co
crFF3bvRVsfNg79W1uvt7Rm66jyZtnXz6/haO/ncJn/ne/yO63Bd7sN9GQfj
YpyMm3kwL/rlMG/sgF2wE/qu2BG7Ymfsjh/wC37Cb/iRPF38jN/BAbgAJ+AG
HIErcAbuwCG4BKfgFhyDa3AO7uEBvIAn8AYewSt4Bu/gIbx8IzyFt/AYXsNz
q/C++ofvPu0eGSrWnG+trt821II8LzY7m+uCvl5rv3c31wnLyn45MdZcN2Tr
571ooLmOCL6aT58fjijveeWDuc7YsyrNyOErzOeTR8DJB4HmOqXkEa0r0iux
LQ+h4+ymWmf4Ynik7jdS0ifAdVNPQw1xW/e0rI+hdtZbuHRuO0OdcPugdcve
1sml8xzfBGXd+UAZyrVMx7XbnQ1VtmrOyh1Me271bOMa6WSolGJvnrvsC5zZ
h0k8hrhsQTmf4ZyWfA3ytkZI/iZ53NRzUNd1Seo7qfNG7wHdF/Sf0IFDDxJd
2O83bfrQnqITT78I+sbQP4o+cvSTpK/sr9Jfmj7zvlUP6XjYnMJjarQKNtf7
CTKnHn/c3Ge3baPjZVsXuer37Ztsbb8m3muuryM7Gk92m/tp3/vpBu+yKK+n
U/X6m0/+zvf4HdfhutyH+zIOxsU4GTfzSC3zon9bOpk3dsAu2Am7YUfsip2x
e5j4Ab9Qh4vf8CN+xc/4HRyAC87xwA04Yn//A2eCO3gPLp0Fp+D2teD4jeAa
nIN7eAAv4Am8gUfwCp7BO3gIL+EpvIXH8Bqew3vvrr13VX5mqJBYhfs+eGCo
yQ/X1O1irgs819nWCb2XNJ+b/qyh7u6o3rLSMUMN9/daV3WfoWKHv2nqtN18
zvkfj3V3nbm+6dNV1xV4HR2/4tMC8/vtbfuTlJ4ltN6Qy7gGaRaMNNS42ZMq
TR5gqFMzhmRs08McT7+eun4hoOThhDPaGir8btWHvzc3n3v9t6epbdrr1pd1
Wt/s9XYXfU7Cc4DnLOst9l3EX4jDch5D/gD5GeQTkq9J3jb1G9RxjZF6znRS
142+AzovD0TvCd039B/RgUUP+kf/AukPQZ8Y+kUVkL5x+aR/JH1kE0g/afrK
n65QOXTrG4v68Oml5tXAVIX1Pjms46ciE++b+2/n1alW3bYo69ukOm62O3be
kYevWtSe8ec0P6etnJG79yWLiuztGHTi4h+f/J3v8Tuuw3W5D/dlHIyLcTJu
5sG8mCfzxg7YBTthN+yIXbEzdscP+IX6e/yGH/Erfv4qfidfD1xwfg9ufpw7
Ca7AGbgDh+DyjeAU3IJjcA3OwT08gBfwBN7AI3gFz+AdPISX8BTewmN4Dc/h
vd+MC/myvzbUkgW18rx8Ys6j7cmLQea64FazzXdLXTdUYpe2H1aY64b4sRMG
fzXXEW9i7ctS8oihCh/quKH2HnP+627ovILNszM/TGXuP8o2s50/9Fs4Z0Db
+Ya6cOqUzkcaX/d8q3wTzOeeS+KabUYYakPlzlqPNN7W/o06djfU4UTddH+i
zK276vzmY+8eOU9vHtWvPEtI8n94DrSQ5yrrK/ZZxFuIu3L+wjks+RjkZZGf
SZ429RrUbVG/SR33CdFz2Cy6Lug7ofOG3iO6r+g/owNPPwj6wtAfij5x9Iuk
byz9o+kjn/xib1s+kkNzvT6ulcSlU4WE5jp5e5+kw+JY1ftX4TrPLdG0UJ3f
fqpxC72u7pS1gX7vFszyyqP5W4ua4N8kcTqTp3Wyf9F5MnyOl7/zPX53Wq7D
dbkP960t42BcjPOUjJt5MC/mybyxwymxC3bCbtgRu2Jn7I4f8At+wm/4Eb/i
Z/wODsAFOAE34AhcgTNwBw7BJTgFt+AYXB8RnIN7eAAv4Am8gUflhFfwDN7B
Q3gZT3gKb+FxOeE1PIf3c+5kOB37vaEq9ara5/ML83mRxdnrkrkuiAg8W33m
HUONbt3olvNVQ30IrvVu93lD7W43vKXTKXP9EfTxSidzfxE3y7u2M8z9xufQ
QheCzP2H++w4xaauNu1TMnyQ5xJDPR69W+uMLe1ii1u41fGtknW8oYLCjt/r
O9xQzbYs1nVLPT5ZY4f5mu/tecemXTHMfU6991q//KjYj+co6yn2VcRXiLNy
3sK5K/kX5GGRj0leNvUZ1GlRr0ndNvoN6Lig54Q+IfqO6Lyi94zuO/0fqkkf
GPpB0ReO/pD0iaVfNH3jfZ+f0u/Fkdu+rQ0oaP7+mcPxInmsqujlhDqP9XiN
LntDM1tV8T6ROj7m1ahN0dFprKrrq4crVjtaVbYzTjrvtZyzk8577+jgqnla
ta6Ljqvxyd/Ly/f4HdfhutyH+zIOxsU4GbePzIN5MU/6u2IH7IKdsBt2xK7Y
GbvjB/yCn/AbfsSv+Bm/gwNwAU7ADTgCV+AM3IFDcAlOwS04BtfgHNzDA3gB
T+ANPIJX8AzewUN4CU/hLTyG1/B8tvC+TvL+Rx98NtcdCVOOjB9pvocDT35L
/NzcT7wOjf3uofl8mVfE7fAtc91ytd+lPpfN8e665p7U3E9MTG3bX9ToETft
Q3O/UX3dgQr5dhkqVd3Q6g03Gepb4fe1W60y1JdtHr41F5v7mqVOL9PPNVTD
wTfSnJtmqM6rbPHM4oH7dT8Cz+Ozxria9gj/NETrFmKvTPLcfCjrJ/ZRxFOI
q3K+wjkr+RbkXZF/2ULysKnHoC6L+kz0B9BrQLcF/SZ03NBzRNe1qug707+A
fg/0faH/E/0N6QdJX1j6nm+WPvGnl5XX696qjh46b6X/uc8hT13MdXLCdzre
nTz8rt4Xj/59UsL0pa3q1Z7Tmm8uA5/vqBzVH2nqd81D/6rZ9PnY0g4Jc581
379ju2TT+XC3jiXSfOWTv/M9fsd1lFyX+3BfxsG4GCfjZh5bZF7Mk3ljB+yC
nbAbdsSu2Bm74wf8gp/wG36k/h4/43dwAC7ACbgBR+AKnIE7cEjcCpyCW3D8
UHANzsE9PIAX8ATewCN4VU14Bu/gIbyEp/AWHsNreA7vD5YsVeP4d/M5l2Fi
7xSfzH2Bq0NY5TfmOmFG3vLNnhrqUJJBQxqY+4WIfiNGFTb3D4NO9Xd+Y+4n
apdrMnGhub/w6bdsRNHj5vroUVjuZfvNz2ZZdF3h6ychd6pvNNTyeKtadF1p
qBsOtvyENedO6fzkJHMzzWlozrfZgD0pUpnzr/eow9l9//Ac4DnJeol9E/ET
4qicp3CuSn4FeVbkW5J3Tf0FdVjUHVOXvVr0GdBpQZcMfUL0G9FxRc8ZXXf6
O9Dn5b70e8ojfd/oc0of2LrSD5q+8AuqnfwcafJhyJ4h25KY78GWzz/q8+ty
Gybo9XDwaRuPsjRz0evkKz0f6vyWUznTzHxk8i3hu306Lt7TYZDOb5/SM+dT
H2U+F4pM7fygilWVfjlLr7cXZemk38d88ne+x++4DtflPtyXcTAuxsm4mQfz
Yp70wcYO2AU70ScLO2JX7PxI7I4ffvhF/ITf8CO6G/gZv4MDcAFOwA04Alfg
DNyBw5OCS3DKfhYcg2tw3lxwDw/gBTyBN/AIXsEzeAcP4SU8hbfwGF7D8wPC
e2ePnsNWxuugXPblHpL+m6EWfbqd3PeDud+/3CHN2lemPbqG+J039wtlWjfM
fsvcP6Ry+5rkgrmf+L73TKV1Yeb6ZGHffd3PGGpfLL9VGY8ZynoxW641+8x9
yNOQdrl3mHy1ZF40ZoOhIk8lL3tuhfk8fDhjYmxzfvVz39A6hJutYZ45/+E5
wHOR9RH7JOIlxE05P+EclXwK8qrIryTPmnoL6q6ov6QOGz0GdFnQZ0KfEL1G
dFvRb0bHnX4O16WvC/2d6PNGv8es0vf1R99z6QPf9vPest1N/G9Ycm2x/xDz
vily6vfgs07PdX5qcO2iEXe7me/LtUta+XQyeVgz5R5Xw6reVVyv98fLh4eX
921nVaUsc/Q6ep5/fJ3vVvrFNB03W7jBT5+L56491SOe+Rn+3lJsgusfn/x9
gXyP33Edrst9IuW+jINxMc6nMm7mwbyYp6PMGztgF+yE3bAjdsXO2B39ePyC
n/AbfsSv+Bm/hwkOwAU4ATfgCFyBM3AHDncJLsEpuAXHP3AtOAf38ABewBN4
A48M4RU8g3fwEF7C03XCW3gMr+E5vL940mH3uEQd1PyMW25midtBFRjYJmLe
V3Ndcsq2P/il5sBeTV+a1+/Z5Pr4x+bzMLNfojV3zfXGm6DE264ZKlcOW5xh
jc/Lt6OCDbUyg7VE3aOGKpt88YsPew2132H8gGnbDfWqXlGtNzSsj+3cwsd1
xOsri/6YP89B1kPsi4iPECflvIRzU/InyKMin5K8auorqLNKIPWW1F2jv4AO
S17RY0KXDX1GdFrRa0a3nf4N9HFxlH5O9HWjvyN9Xun3TN/35m936XOpZ91b
afwvHVVQn1e5LKqh49idClw4Xdjc716IGK3zVEMePNP74IQ1b+tzrmm5ksXJ
aPLr7stnE5L5WZXrzYy6jqWkQwP9nm3/S+K4PUw+rh/qrOPl10aN13G0bPFy
6Hw4Pvk73+N3XIfrch/uyzgYF+P0kXEzD+bFPJk3dsAu2Am7YUfsip2xO37A
L/gJv+FHdLbwM34HB+ACnIAbcASuwBm4A4fgEpyCW3AMrsE5uO8oPPh/XZ15
fE5HF8dtRRBilzZErCEIkYRYR2wlNAS1E/o815baqrW2JQhBqSVoJZFqqSWx
VtBWvbbailiSRu1rKiEaVBLrO84zX/XJX/eTJ/fOnTnn97tzZuYs8AKewBt4
tMHwCp7BO3gIL+EpvIXH8Bqew/vMY23b2EpaqvN3nlerFLVU1YgPEw7mt1TU
X+2/C3mmx1Wj+O4Ter0Q36lkdoNMu3LZeDJsWppdjZqW0Oina9oe+v3c8JQL
dpXRsnSbm2ftqlmgw7+4nnvzpL2H7Krf4sKeC3T/q01LtnXQ49m9SL26t/m/
8fLdw/5hHdTX7IewLzrXnI9wTrrR+EvgN4X/JH7UxFMQV0V8JXHWTUy+BfKu
kH+JPGzkY9xg8rKSn5k87dRroG4L9Zuo40Y9R+q6Ut+ZOu+3Yy92qbhT28ND
Nrl32GJTl0dW37ZH4//ioBbil5I6b7bty9U2FTDzR7F/N949lDNH82Zj/Nkl
C7VdXNej4IrXcSpHroRW26bt5UNeu2QfPPD+7Tt9Imxq8qTf0tvNsqkF7Wc7
+NjNR87HRjrPEX+YHV7Osr7myu/cx3O0Q7u8h/fSD/pFP+k342BcjJNxIwfk
gpyQG3JErsgZuaOHN3oxekJv6JG8k+gZvZN3A1yAE3ADjsAVOAN34BBcglNw
y74euI43OAf38ABewBN442V4BK/gGbyDh/ASnsJbeAyv4Tm871YkLqxlWUsF
FOmU4uZsqfh7bhvTClsqe6RrWkw+S3n6pi9t/VT3v9XKfX880nzY3za8/X29
Lg+4+2LDHbtavK7R4KdX9feluWO/seeyq/sG6/6FTPm716e6v24V/sg3Sfc/
bKjDH5Hx8Z17ZOwd1j0pZv+DfVDOQzgXxT8CPyn8JfGbJn6iiomjIp6SuGry
K5BnhXxL5F27YvIvkoeVvOXkZac+A3VaqNdE3TbqN1LHlXrO1HUPvuGwV4+P
CZdzqL1PKvaoovGesbrDv5c1/ufGLZR5b+fxHgV9tttU4eAGsp/tfc7Bm7+S
rnTP1XZx4J1nsv81tWCE8KvQ459lPm29r5HshxfZP1X83I659ZH5Vr2/aPze
KJtqnx4pfq9zG+44tOCtK79zH8/RDu3yHt5LP+gX/aTfP5lxMC7G+ZsZN3JA
LsgJuSFH5NrFyBm5owf0gp7Io/0m77TRK3pG7+AAXIATcAOOwBU4A3fgEFyC
U3ALjtnXA+fY+fAAXsATeAOP4BU8g3cHDQ/hJTyFt/AYXsPzYMP77PaRMWUq
Wcpvfd9qFcpY6vHPrq0Kl7BUo8jJOTfesVT9kCuh8a/sqlS806KhuXre7Hz8
+3d0+/O/STwWdc+uPuud5VdWv/98kxzPL3R/xn7riCuYH9DhZmXd35zV7mE9
3voO8F3DvmGdw34H+56cf3AOij8EflH4R+InTbwEcVNzTPwkcdQ3TT6FbJNX
hfxK5Fkj3yJ5V8m/TB526jFQl4X6TNRpo14jdVup3/yjqeM+vU3jpTtvaPs4
1bE+fbmk77hlf+r7VowSvO85OFv8ULqc+TNk01E9b9a+J+vbByc2Nyz7P33f
GZuse6dmrZO4lI2XPpn+iZ435/47pugiza8KfYaL3Zx0ysG7P/68KXEsBfYd
kPjVAzXDxb6O8+m7+9v1NlWt8C7xg6turqvN79zHc7RDu7yH99KPaaZf9DPT
9JtxdDXjYpzeZtzIAbkgJ+SGHJErckbu6AG9oCf0hh7RK3pG7+AAXJB3A9yA
I3AFzsAdOASX4BTcgmNwDc7BPTyAF/AE3sAjeAXP4B08hJfwFN7CY3gNz+F9
TkeX1jfdLLUj9FS9YhUtVarYhDNVSltqdUJ0C4/ilkrZuHx2af383TYF/njw
UtvllSc3/TXHrlJXtHrx2UO7enky58Oq+v2Dp4z/avdtvX6aY3/cWvfP3fOD
e4lvfQf4jmHPsK4paPY32OfkvINzT/wf8IPCH3K+8YsmPoI4KeIliZsmfwJ5
VHJNPiXyqpFfkTyr5Fsm7zr1F6jDQj0m6rJRn5E6rdRrpm57+N/nJ3jk2JT/
7KYP52n7dPDgnXLuNOX5uQ25aXrdGtxR/M0CI4tJfEn17kHDUi7oeXhfLbF3
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
A3fgEFyCU3ALjsE1OAf38GCk4QU8gTfwCF7BM3gHD+ElPIW38Bhew3N4v/Si
Z9U4X0ttHb1i8cf672nnN6+tr/9/oU1k5LUalrKefDEuQj/f1D3mG3fdXpqf
R4f4t74Drua7g/3BOoT9CPYlOZ/gnPKNv4LxW5pi/BfxYyaegbgm4huJcybf
AXlPyH9EHjTyIZIXlfzI5EmnXsI6UzeF+knUUaOeInVVqa9MnfW2Lk/ia/fW
/W7bbnrZELuqti1L9pEmDD5TMuh9u+o49bjYn0+/niH7TRHvpO7Z2kzjtmh7
wfOoAiWejPXRvw/qdW65ntc6t/QWf7MSU6a9nFTbru6VuyDr2hl/TF3ZyEPb
ydUqN/xIr3evdbxXLEnbwwHXvxV/tYRrc+V8q81CVwfPRjar96islsOQGiNi
Nf+W+A/etkDPs/ZjzmJXny4QKftmZU4Fy/kY11Pmd+7jOdqhXd7De+kH/aKf
002/GYezGRfjnGPGPdLIAbkgJ+SGHJFrdSNn5I4e0At6Qm/oEb2iZ+rlgANw
AU7ADTgCV+AM3IFDcAlOwS04Btf46YJ7eAAv4Am8gUfwCp4x38NDeAlP4S08
htfwHN5fDhxSPSjAUqMz7x9pov+ueHXp3Yr6/x8fXLkno46l2mf1HbtDP38o
6ZeuY976DvCdwd5g3cH+Q7rZh+Q8gnNJ/BPwU8JfEb9l4heIYyLumLhm8huQ
j4h8R+Q9I/8heVADTD5k6hdQH4E6KdRLom4a9ROpo0o95Samrvo6385iN8a4
96vqrNeNs95JqtxokMZRYZ/oT/raVeiZXPED37vGMR9tu1FD/MP3bO2/6UJH
Pc5Pr+ee13guFnB5/TON72fVg8SvdFTPtmLPVt3pEz7XT9uP/g5erAmcvGqh
t55ft7lInGm5M6tkn8s/aJz4pSfcu9+pWS27CnYtK/NovmUhEpcac2Gh+LeE
Hfnw8y16nnWJGJqWoe3qY4V7Nxuhry22nxc7m+tR8zv38Rzt0C7v4b30g37R
T/rNOBhXmBnnczNu5IBckBNyQ45DjFyRM3JHD+jF3+gJvaFH9Iqe0Ts4ABfg
hDza4AhcgTNwBw7BJTgFt+AYXIPzN/70hgebDC/gCbyBR/AKnsE7eAgv4Sm8
DTM8htfwHN6nZ6VMymyp//99bmxuU0u16d+rTG5jS0WtvlLkfgNLFc6c+Evy
W98BvivYF6wz2G9g35HzB84h8UfALwn/ROILiFcgbon4ReKYyWewzuQ1Ib8R
ec7IU0reU/IfkwedegjURaE+EnXSqJdI3VTqnlNH/WBqdJlAbSemDRsm/h49
L30p8VxZFZTsG9X/bFnSeLvWW9PW4U56/jm7N0fiPv8ZMfqj2D52NemjauJH
cs7de8Nxjee7Xg9lHuvSbk2NWL1e/Whg8pCgDhpnvz+TuJI7pVJe+mk7N+RE
huxn/bbYyeuenhe/yXdS4s5+mOOYL1Oztl6J8tX2/Bf95Fx7X+3vZT+s4NCA
2x0b6vurREi82s7uPWW+XfXVLllHL5znJ/Gri8yV37mP52iHdnkP76Uf9It+
0m/GwbgYJ+NGDsgFOSE35IhckfNDI3f0gF7QE3pDj+gVPWcbvYMDcEG9myiD
G3AErsAZuAOH4BKcgltwDK7BObiHB9MML+AJvIFH8AqewTt4CC/hKbyFx/Aa
nsP7bivnn4wMtFTg+VqHt+u/1QDPpCT9/zOX99W6pe9fbp7HHsCeYF3B/gL7
jJw3cO6I/wF+SMuMPyJ+ycQnEKdEvCJxy+QvCDV5TCaafEbkNSO/YWuT55R8
x+Q9f2HqH/QxdVCoh0RdNOoj9jB1UqmXTN30Xacvh93WuIk+4bATnfIHj5mq
14nlxxdfmDHZrvo3WSV+IN0GfNPFfZxd3ToxXdaXd2dlZpzS81H5o7+nXbBp
+2+sA78Jdc8uHzxQP7fXVfxIi7jHyn70kdlLT/froe1e18Uy34X0bSfxJauX
1JL17a26zbbM1PZv+tcO/jS/OUPOs8aFPDowJVDj1tdD4s8XzZmZGqHn03tD
p8q+WPtuDh5GexZ6fLjFa3u0s8y7iwv8ubbcW1d+5z6eox3a5T3jzXvpB/2i
n/SbcTAuxlnUjBs5IBfkhNyQI3JFzsgdPaAX9ITe0CN6Rc/oHRyAC+rlUDcD
HIEr8umCO3BIni1wCm7BMbgG5+AeHsALeAJv4BG8gmfwDh7CS+Z7eAuP4XVb
w/Ngw/v5rt2S3TpayvefzAdD9d+5Exf8FfvWd+DNd8PYD6wj2E9gX/G5OV/g
nBF/A/yO8D/ED5l4BOKSiE8kTpl8BeQtIX8ReczIZ0heU/Ibk+ecegfUPUkz
9Y+og0Y9ROqiUh/Z2dRJLxGaVD9b46TX0XH5QrRduOra9rYHtJ0Y6u23qVOk
Xnc2vyj7RC16f3Huh+l6fRA+p/w0bV9+3CBM4j5O13WR/eTOPUuK38g31dPF
Li0YU0/8SbJWjJH4UO8DDvt1vtdyiSO5PyfxPS/Ng4oJtQM+76fx8d67xV++
jjNZNUn2safXypC8Es3635Pz68IpT5ZmBut1+ZLTh0d9YFeRQxzzaU2/mmI/
V43231k7SNv3VkbXLzUfn/xVRfLSfN61kuyTc+V37uM52qFd3sN76Qf9op/0
m3EwLsbJuJEDckFOyA05IlfkjNzRA3pBT+gNPZY0ekXP6B0cgAvqZIEbcASu
wBm4A4fgEpyCW3AMrsE5uIcH8AKewBt4BK/gGbyDh/ASnsJbeAyv4Tm8X5k7
ofOPQZaKCQ+/6KT/9jP/5zuBvcC6gf0D9hE5T+BcEf8C/IzwN2xm/I6JPyAO
KdDEIxKXHGjyE7Q0eUrIV0TeMvIXkseUfMbkNae+wSNT52SAqXc02dQ9o/4h
dVBTTT3ku6Yu+tWgj+X8Nn6FX8xjjZOj3SeIXThr9GWJ1wo6MDfu7FK7+jU0
eV7cIm2XXvURf8/QAmfknChxl//TeD3/JH+1X+I93TqWGtb1df7jKT1knzlq
lWPe8q5ZSNan4U+vt/Qfo+3m8TefddfzW/hpBw+u15kg+1fVq3hcWqfnwRcJ
E8QfrUnW3tKjNX/Sm8dJvGm5QWPkHDsscp3sdw9s/UWD9zXfGo1cO7CVnlf9
xnuIf0vnX/qIP6treOeeA/W10gLHvhlXfuc+nqMd2uU9vJd+0C/6Sb8ZB+N6
M04zbuSAXJATckOOyBU5uxi5owf0gp7QG3pEr+iZOtjgAFxQHw/cgCNwBc7A
HTgEl+AU3IJjcL0ZnBvcwwN4gX8+vIFHUYZX8AzewUN4CU8rGd7CY3gNz+H9
1sbT7nt2++9vvgvYBxlmnXDF7Bewb8j5AeeI+BPgT4h/YY7xMybegLgj4g+J
QyYfAXlJyEtGnjLyFZK3lLzl5DGnngH1jKhvdIo6Z6beIXVPqXtOHfS1jR04
mBTgLfEYLw6VcUnUOGlQJFv2e0P/HtOuyRq9zvg+UvaFCl36Rfy6x808LH5f
t94bL/PN3sBOrtEL7erGljpyfnTU24HXW2N7iH/48TMzovPN0Pb21g4D/9Hr
033O2RI3Ujw6RtatA34IPLlO8+DAh77+fno9axvQ46tMPQ/2jhsmeSR6D54h
dnD3lSOja4/SuM1y8CrEZavEn1Zr4uDb1mNh4sdWrOjL6631ernFi6rCx/J+
W39U+jqz71WJY+HK79zHc7RDu7yH99IP+kU/6TfjYFyMk3EjB+Ry28gJuSFH
5IqckTt6QC/oCb2hR/SKntF7ZJ462HnrYuatk5W3boY9Tx7tvHk18+bZ2p8n
70beOFx4kpPHP79JHn+9vOf3effz4W1eOz8v7/8PoTW8/g==
   "], {{0, 0}, {128, 
   128}}, {0, 196.32073358760022`}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.849111019109248*^9, 3.8491110292297993`*^9}, 
   3.849182862031939*^9, 3.853591300502531*^9, 3.854464614864534*^9, 
   3.854469351975883*^9, 3.8558727683279963`*^9, 3.855873255499309*^9, 
   3.855873557635404*^9},
 CellLabel->
  "Out[7159]=",ExpressionUUID->"987bd5ef-86c4-4650-acbd-b39ff797334e"]
}, Open  ]],

Cell["We can also plot one cross section of potential as below:", "Text",
 CellChangeTimes->{{3.853520839317976*^9, 
  3.8535208526217203`*^9}},ExpressionUUID->"8492077e-bc7b-4be9-82f0-\
015b669a8559"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Abs", "@", 
    RowBox[{"pot", "[", 
     RowBox[{"[", 
      RowBox[{"64", ",", "64", ",", 
       RowBox[{"64", ";;"}]}], "]"}], "]"}]}], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.84911103292511*^9, 3.849111063277083*^9}},
 CellLabel->
  "In[7160]:=",ExpressionUUID->"0af91a90-190c-40f6-8a2d-c2f7173e35cf"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1UwtMUwcUrXwKfa+v75WWTmEOBWECXclKgCKwHtg0oAKCEAQ1oAZGUhjy
/88MmDJFx6dzmzAZ6AbyU2D8REQhfJQJMmK3RBKGGASZWwlIKXYwl5Sb3Nyc
nOTk5J57d55MCI42YLFY3m/7/7lZZ9Pvt6W9Z45/3NfWfSSz8k1MGjZmvSxb
lGs//0GZYL7Jr8i7/INzrhmaw/niK433Pa3cftDFtXReCIMdDmtkvU4+ODb4
tXpIiLAIaVOS9YY8PnnLg4pKIZLrPeQt1Sx8c4WRlCQK9fpbEBVW7676SAhR
aFt3s8IAJy5LS1JNhTjodqZjRmKIcev+ys/GBMi9OnFHNG2Isr2a4kalAEFF
HzoafWmEhqeyeaNwAWq6fxc9fNcY56+uT9hvF8DK199dVGeMYzF9TS3TZnr/
bLCTsivfqTFD1pm1+4o6NnyiVip+iTfD2RLFnmwrEwRGRib/6mIGcasR2/WS
CTxTq/2KNvgomUnO9tGYwG5OE0yP8NHclKCUHDUFI/Y+cfI7PoYHvNJTbptC
XBhje+5TPtSt4//mmnPgPK1gp8v40IpLc2riOMg7npVvS/L1++PgK2rMOm+K
wSML9UslQ6DbP0iT2caguMCwc+o4gZunieHVIgY2+y+rImoJ/Ni/f2E+moHV
+qMRmZqAzMLtmQwMylWk9mcXEg8Dd/WPWzKIcCzxHc0gUUN1vfFZpKEY7rw7
0UXCWssyFTfSGO98svzHKomYc61dngoaK1TXFzoXLgqyRkJDHWkMLNGHIxK5
GCo9GnjkFU+fLxfTo1VSh2Yeeob2/L17hotv6YrC5jQear37Bwa3URhJudiu
8uJBRRXGagMo3H2hfZrP5oFKknpM5FGwmWq+df0xhYCGS3uj2yiQN96csqug
8IGXJKR3lkLx+ZxcTSwF/l9CkVrEw0Gp2z0TNwofh+hcjffxsHihj/ZlU7j+
4FoamcLDWGNPWJ2Kizif4h5eFQ+He+JSd9Zy0a4udrJ4xEN1RJRNVRYXqd2H
PGWrPNzpNXixPYCrv08afOWzjSJrLm5aNnT8doCGq0fZkecaEhusoI2oFBqO
B3QZFqMk/G401dlW0NAtL2Xa/USi3tM6dnc/DdmcwdpGDgmuoC/99DyNTD9n
QWUoiaX12+F5JgxmncaCdBISh+IcRl5ve5vr5Ot6hkMi/EpjlbmYQfypxcwn
MwT89w0OPPdi8KfCK+GTXgKZ9kPa6EAG+QpXZVg5gQvS6MnyKAbH8hlwMghQ
cWYLhYkMdlmWC0JCCSxMvl/glMdgsiNyWepMwHLrzFxJKYPO9R2mVXxC/38M
CGX7re/VHKTaK8tKWxjUcrwKtz7m4D/HQ68F
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.17574460294265487`, 3.0659394014371375`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->NCache[{{-0.17574460294265487`, 
      Log[65]}, {3.0659394014371375`, 
     5.279749717648775}}, {{-0.17574460294265487`, 4.174387269895637}, {
    3.0659394014371375`, 5.279749717648775}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {-0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.700480365792417, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.787491742782046, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.867534450455582, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.941642422609304, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
      3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {5.298317366548036, 
       FormBox["200", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.0106352940962555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.8491110473614483`*^9, 3.8491110635764217`*^9}, 
   3.84918286497265*^9, 3.853591302207518*^9, 3.85359138516371*^9, 
   3.8544646150105*^9, 3.854469352186054*^9, 3.855872768486865*^9, 
   3.8558732555286427`*^9, 3.855873557658648*^9},
 CellLabel->
  "Out[7160]=",ExpressionUUID->"137fd626-f2e6-4492-b343-11a256f91c7f"]
}, Open  ]],

Cell["\<\
Note that above you\[CloseCurlyQuote]re just plotting the values of pot \
against numbers running from 1 to 64. If you wanted to define a radius to \
plot against, you could do something like this:\
\>", "Text",
 CellChangeTimes->{{3.8535912214531*^9, 
  3.853591257459634*^9}},ExpressionUUID->"d9add0ef-bbdc-48ca-92fb-\
b3e61e809e46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rval", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0", ",", "64"}], "]"}], " ", "+", "0.5"}], ")"}], "*", " ", 
    FractionBox["2.0", "128"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.853591404599103*^9, 3.853591410134726*^9}},
 CellLabel->
  "In[7161]:=",ExpressionUUID->"e6d50065-1329-4e89-8396-9f65329095a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"{", 
     RowBox[{"rval", ",", 
      RowBox[{"Abs", "@", 
       RowBox[{"pot", "[", 
        RowBox[{"[", 
         RowBox[{"64", ",", "64", ",", 
          RowBox[{"64", ";;"}]}], "]"}], "]"}]}]}], "}"}], "\[Transpose]"], 
   ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.85359127318056*^9, 3.853591277750224*^9}},
 CellLabel->
  "In[7162]:=",ExpressionUUID->"fe63075c-1d22-4011-84eb-ba7ec6ef8f2d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwBIQTe+yFib1JlAgAAAEEAAAACAAAAsfIan3poE8CGd8G1dh4VQN1j3wAA
Bw7AhnfBtXYeFUDJHj9C1PAJwPl+nZRvFRVAN7gc57s/B8C5TVJ8owMVQFji
iMMKPQXAKcY1NpLpFEAXrraGEaIDwMbPxo/wxxRAElkEE/FLAsBtcwHJnJ8U
QESd6ATfJgHAlZoQLpFxFEDpZTt8iSYAwGBXqznWPhRAbGRicH6F/r9hljKR
dQgUQGNtjFON6/y/0SLDn27PE0DlYsiA7nb7v5NF95CtlBNAXrCQjGYh+r+s
2zjpBFkTQKXBZAwr5vi/ip7+0ykdE0CIzs/keMH3v1xmwq6y4RJAEXRJ602w
9r8GcnufF6cSQCNZwJI4sPW/QmD2nLRtEkA640vWNb/0v09fX3PMNRJASzv2
n5jb8788daJJjP8RQBmvW6v3A/O/Juj3Ug/LEUAqck7xHzfyvxAsQWFimBFA
o/JBUAp08b8siGYlh2cRQH03JI/TufC/M+FrBnc4EUBZ6Ukdtgfwv4JdeoMl
CxFALSwOQAq67r+JDc8igt8QQI6Rk/tQcu2/u01R93m1EEDgok5YMzfsv69w
Csj4jBBA9Z3/KsIH67+gw0rr6WUQQMPCausn4+m/OBo34jhAEEDFSZ4qpcjo
v8pPJMPRGxBAIzVEoI2357+nDbn7QvEPQLHUvrFFr+a/IvkACCytD0DgSTZc
QK/lv2aHs7k8aw9AHwyXb/225L+EestVVSsPQLW/NgwIxuO/x5JbT1jtDkBD
37BX9dviv+HOoTIqsQ5AWRbGX2P44b+XD5yIsXYOQKhaxyP4GuG/y3SNttY9
DkCtA3a+YEPgv77n+duDBg5A5RO0VqHi3r8j37GwpNANQGv63kYCSd2/C6n7
YyacDUD74oAbYbnbv5CKfH33aA1AefokAkQz2r9MMjfABzcNQPUti6g5tti/
8YvCD0gGDUCxe8Z22EHXv8+tvVeq1gxAMF9Z373V1b9TvWx1IagMQBvEccKN
cdS/olpgI6F6DEDkXNPh8RTTv7y/AucdTgxAlWtaY5m/0b8RlOL/jCIMQGJY
TWA4cdC/NjuTWOT3C0ASEOf/DlPOvytL/HgazgtArdg7OIfQy7/89PN5JqUL
QH8B99xaWsm/OOgC+v98C0C8anWLEvDGv3lJMxOfVQtAYbUzgz2RxL/mL89R
/C4LQALCSSpxPcK/kNz1qxAJC0Bm1ds5kei/v21j8XnV4wpAHFutjchqu7/g
az1vRL8KQOHA6grTALe/g2s2lFebCkClF0ekBKqyv1yDEEAJeApAzLLdzXPL
rL8kG5sTVFUKQOrjLdSuZqS/3Ldf9DIzCkC/ysgoJUmYv7j+IAihEQpAcd6I
dRUQgL8KlLawmfAJQIlnEGsq4H8/qAk9iBjQCUA6jvgX
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-5.056631741012969, 3.0659394014371375`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.056631741012969, 0.007782140442054949}, {
   3.0659394014371375`, 5.279749717648775}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.7047480922384253`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.8718021769015913`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}}, {{
      3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}}, {5.298317366548036, 
       FormBox["200", TraditionalForm], {0.01, 0.}}, {2.995732273553991, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.0106352940962555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{
  3.853591279008852*^9, {3.853591388718408*^9, 3.853591412049776*^9}, 
   3.854464615137332*^9, 3.854469352593604*^9, 3.855872768520651*^9, 
   3.85587325554979*^9, 3.85587355767881*^9},
 CellLabel->
  "Out[7162]=",ExpressionUUID->"5ec68ce9-7f71-40cc-9395-ac6971a1360b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["What is the run.h5 file?", "Subsection",
 CellChangeTimes->{{3.8535914316620913`*^9, 
  3.853591435182085*^9}},ExpressionUUID->"6bb6f2f8-2b9f-49ec-a3f8-\
7e6b77c18dbe"],

Cell["\<\
The run.h5 file is sort of the main output of chplUltra--it has things like \
the evolution of the mass, the density and energy profiles, etc. \
\>", "Text",
 CellChangeTimes->{{3.85359143787464*^9, 3.853591500224184*^9}, 
   3.853591545187969*^9},ExpressionUUID->"992abe15-fc03-47d1-bb89-\
a6d376cb7bab"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test/run.h5\>\"", ",", " ", "\"\<Data\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Keys", "@", "ff"}]}], "Input",
 CellChangeTimes->{{3.853591557216724*^9, 3.853591558936462*^9}},
 CellLabel->
  "In[7163]:=",ExpressionUUID->"90d668ee-f055-477f-84d6-22b9a4d14441"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/info\"\>", ",", "\<\"/profiles/000000/KEc\"\>", 
   ",", "\<\"/profiles/000000/KEq\"\>", ",", "\<\"/profiles/000000/PE\"\>", 
   ",", "\<\"/profiles/000000/counts\"\>", 
   ",", "\<\"/profiles/000000/mass\"\>", ",", "\<\"/profiles/000001/KEc\"\>", 
   ",", "\<\"/profiles/000001/KEq\"\>", ",", "\<\"/profiles/000001/PE\"\>", 
   ",", "\<\"/profiles/000001/counts\"\>", 
   ",", "\<\"/profiles/000001/mass\"\>", ",", "\<\"/profiles/000002/KEc\"\>", 
   ",", "\<\"/profiles/000002/KEq\"\>", ",", "\<\"/profiles/000002/PE\"\>", 
   ",", "\<\"/profiles/000002/counts\"\>", 
   ",", "\<\"/profiles/000002/mass\"\>", ",", "\<\"/profiles/000003/KEc\"\>", 
   ",", "\<\"/profiles/000003/KEq\"\>", ",", "\<\"/profiles/000003/PE\"\>", 
   ",", "\<\"/profiles/000003/counts\"\>", 
   ",", "\<\"/profiles/000003/mass\"\>", ",", "\<\"/profiles/000004/KEc\"\>", 
   ",", "\<\"/profiles/000004/KEq\"\>", ",", "\<\"/profiles/000004/PE\"\>", 
   ",", "\<\"/profiles/000004/counts\"\>", 
   ",", "\<\"/profiles/000004/mass\"\>", ",", "\<\"/profiles/000005/KEc\"\>", 
   ",", "\<\"/profiles/000005/KEq\"\>", ",", "\<\"/profiles/000005/PE\"\>", 
   ",", "\<\"/profiles/000005/counts\"\>", 
   ",", "\<\"/profiles/000005/mass\"\>", ",", "\<\"/profiles/000006/KEc\"\>", 
   ",", "\<\"/profiles/000006/KEq\"\>", ",", "\<\"/profiles/000006/PE\"\>", 
   ",", "\<\"/profiles/000006/counts\"\>", 
   ",", "\<\"/profiles/000006/mass\"\>", ",", "\<\"/profiles/000007/KEc\"\>", 
   ",", "\<\"/profiles/000007/KEq\"\>", ",", "\<\"/profiles/000007/PE\"\>", 
   ",", "\<\"/profiles/000007/counts\"\>", 
   ",", "\<\"/profiles/000007/mass\"\>", ",", "\<\"/profiles/000008/KEc\"\>", 
   ",", "\<\"/profiles/000008/KEq\"\>", ",", "\<\"/profiles/000008/PE\"\>", 
   ",", "\<\"/profiles/000008/counts\"\>", 
   ",", "\<\"/profiles/000008/mass\"\>", ",", "\<\"/profiles/000009/KEc\"\>", 
   ",", "\<\"/profiles/000009/KEq\"\>", ",", "\<\"/profiles/000009/PE\"\>", 
   ",", "\<\"/profiles/000009/counts\"\>", 
   ",", "\<\"/profiles/000009/mass\"\>", ",", "\<\"/profiles/000010/KEc\"\>", 
   ",", "\<\"/profiles/000010/KEq\"\>", ",", "\<\"/profiles/000010/PE\"\>", 
   ",", "\<\"/profiles/000010/counts\"\>", 
   ",", "\<\"/profiles/000010/mass\"\>", ",", "\<\"/timing\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.853591559261795*^9, 3.8544646151731167`*^9, 
  3.854469352858162*^9, 3.855872768555662*^9, 3.855873255574634*^9, 
  3.855873557698358*^9},
 CellLabel->
  "Out[7164]=",ExpressionUUID->"08eaef51-6912-4fe3-9d43-8dc6b8f2bcc8"]
}, Open  ]],

Cell["\<\
\"Keys\" are what you give ff to ask for a specific bit of information. Eg, \
if you wanted to know how much time each of the steps took:\
\>", "Text",
 CellChangeTimes->{{3.853591563788095*^9, 
  3.853591616690086*^9}},ExpressionUUID->"907583f6-3143-446c-a4f2-\
d434911833c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ff", "[", "\"\</timing\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8535915868932533`*^9, 3.8535915961533327`*^9}},
 CellLabel->
  "In[7165]:=",ExpressionUUID->"ecff3d90-7880-482e-9a74-a5bef7c3bd52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}],
    ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.021386999999999982`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "0.35397400000000007`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "0.708924`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.000174`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "0.810269`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.042509999999999985`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "0.7032100000000001`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "1.411644999999999`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.000348`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "1.2995649999999999`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.06338400000000008`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "1.0519159999999999`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "2.1139229999999984`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.0005210000000000003`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "1.7646029999999997`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.0843800000000004`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "1.400966000000001`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "2.816249999999998`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.0006900000000000005`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "2.288254`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.10522700000000074`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "1.7493510000000003`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "3.5148999999999977`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.0008620000000000008`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "2.766869`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.1261810000000009`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "2.0975589999999986`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "4.2180459999999975`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.001035000000000001`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "3.260684`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.14684500000000011`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "2.4470340000000004`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "4.915348999999995`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.0012080000000000003`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "3.777783`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.16748799999999942`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "2.795812000000002`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "5.615416999999995`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.0013849999999999995`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "4.263191`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.18809499999999849`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "3.144705000000001`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "6.319333999999997`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.001555999999999999`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "4.753404`"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"kick\"\>", "\[Rule]", "0.20865099999999762`"}], ",", 
     RowBox[{"\<\"stream\"\>", "\[Rule]", "3.492869000000001`"}], ",", 
     RowBox[{"\<\"pot\"\>", "\[Rule]", "7.018793999999997`"}], ",", 
     RowBox[{"\<\"sponge\"\>", "\[Rule]", "0.0017279999999999982`"}], ",", 
     RowBox[{"\<\"analyse\"\>", "\[Rule]", "5.226198999999999`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8535915899108677`*^9, 3.853591596371784*^9}, 
   3.854464615178364*^9, 3.8544693528672447`*^9, 3.85587276856752*^9, 
   3.855873255579864*^9, 3.8558735577030487`*^9},
 CellLabel->
  "Out[7165]=",ExpressionUUID->"a72faa22-c683-43bd-a9f9-b939dec86795"]
}, Open  ]],

Cell["\<\
See an example of how to get to the DM density profiles from run.h5 below :\
\>", "Text",
 CellChangeTimes->{{3.853591545929071*^9, 3.853591550151227*^9}, {
  3.8535916287559834`*^9, 
  3.8535916302972527`*^9}},ExpressionUUID->"d9ae5eb8-c51b-4216-87be-\
00a6bcf7fce4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ff", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<test/run.h5\>\"", ",", " ", "\"\<Data\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rho", " ", "=", " ", 
   RowBox[{
    RowBox[{"ff", "[", "\"\</profiles/000000/mass\>\"", "]"}], "/", 
    RowBox[{"ff", "[", "\"\</profiles/000000/counts\>\"", "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.849111075944231*^9, 3.849111076307131*^9}, {
  3.849116500800783*^9, 3.849116538787347*^9}, {3.849116579646036*^9, 
  3.849116602023313*^9}, {3.849116687721814*^9, 3.8491167202042847`*^9}, {
  3.8491168022915277`*^9, 3.849116837382563*^9}, {3.853591506793668*^9, 
  3.8535915338254957`*^9}},
 CellLabel->
  "In[7166]:=",ExpressionUUID->"7567ae34-8299-4126-9e36-a9a02abce8e1"],

Cell["\<\
You have to remember to divide by counts, otherwise you\[CloseCurlyQuote]ll \
get a cumulative density instead of a density profile!\
\>", "Text",
 CellChangeTimes->{{3.8535916320843782`*^9, 
  3.8535916511711473`*^9}},ExpressionUUID->"05aa0d47-c57e-4752-8019-\
fe5b0e86206c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rval", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "64"}], "]"}], " ", "-", "0.5"}], ")"}], "*", " ", 
    FractionBox["2.0", "128"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"{", 
     RowBox[{"rval", ",", "rho"}], "}"}], "\[Transpose]"], ",", " ", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.853591657690343*^9, 3.853591686477171*^9}},
 CellLabel->
  "In[7168]:=",ExpressionUUID->"6f539ce5-4fa1-4521-a28f-cd437d44030e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAsfIan3poE8A3Jlfm7b8dQN1j3wAA
Bw7Ayf5w/T+gHUDJHj9C1PAJwNMWIHF5Wh1AN7gc57s/B8DYQBxmGPocQFji
iMMKPQXAYmGJusaAHEAXrraGEaIDwLbGlVfY7htAElkEE/FLAsB73huQlz8b
QESd6ATfJgHAbNthTS51GkDpZTt8iSYAwBQqZuFvmBlAbGRicH6F/r++aR64
fqYYQGNtjFON6/y/l1TiXzWnF0DlYsiA7nb7v1Zsa8mJmRZAXrCQjGYh+r8J
t9rPbXMVQKXBZAwr5vi/vOwwQ1g/FECIzs/keMH3v7bu0ZZnAhNAEXRJ602w
9r9lqQTIt7sRQCNZwJI4sPW/9X0Dzp50EEA640vWNb/0vzj50PTsQw5ASzv2
n5jb878QWHxF348LQBmvW6v3A/O/NVpWGODGCEAqck7xHzfyv9gIY7pv6gVA
o/JBUAp08b9INUohCQUDQH03JI/TufC/oSse7p8mAEBZ6Ukdtgfwv1XkC18X
gPo/LSwOQAq67r/AR9YBlYP0P46Rk/tQcu2/0grUE2Pf7D/gok5YMzfsvwPr
KlFozeA/9Z3/KsIH679Hl21rU9rCP8PCausn4+m/av5eTAGxzb/FSZ4qpcjo
vxuoLcgrrOO/IzVEoI2357+U5EguQQfwv7HUvrFFr+a/mXJbAuhO9r/gSTZc
QK/lvwkHYKM4pvy/HwyXb/225L8ipBYCRIIBwLW/NgwIxuO/K8KruyGoBMBD
37BX9dviv00+0deOzAfAWRbGX2P44b/H2Sotd/oKwKhaxyP4GuG/BvX24ig2
DsCtA3a+YEPgvxal2CgZtxDA5RO0VqHi3r8LbGeYMVASwGv63kYCSd2/7pGA
olvsE8D74oAbYbnbv1Kup9v0iRXAefokAkQz2r+uJX/4ASgXwPUti6g5tti/
x5atOijNGMCxe8Z22EHXv1FV/q7HchrAMF9Z373V1b8mPzSwHxUcwBvEccKN
cdS/AHUl4Z+1HcDkXNPh8RTTv2PBQJU3Wh/AlWtaY5m/0b8hDTPLW38gwGJY
TWA4cdC/GYI5kZxSIcASEOf/DlPOv6p/BTQ/JyLArdg7OIfQy79gMV3j3foi
wH8B99xaWsm/Bt2CSzXOI8C8anWLEvDGv62YnaV9oSTAYbUzgz2RxL/Cbqw7
6XYlwALCSSpxPcK/o4YyRFwEJ8Crq8OH
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-5.050304755901951, -12.991144338808203`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Exp[
         Part[#, 1]], 
        Exp[
         Part[#, 2]]}& )}},
  PlotRange->{{-5.050304755901951, -0.14250006260728304`}, \
{-12.991144338808203`, 7.437430953091783}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.09531017980432493, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.1823215567939546, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.26236426446749106`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.3364722366212129, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.4054651081081644, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.47000362924573563`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}, {{-11.512925464970229`, 
       FormBox[
        TemplateBox[{"10", 
          RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
        TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {
      2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {-9.210340371976182, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.605170185988092, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      6.907755278982137, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.210340371976184, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      9.903487552536127, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.308952660644293`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.596634733096073`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      10.819778284410283`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      11.002099841204238`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{3.853591680842725*^9, 3.853591728432983*^9, 
  3.854464615246917*^9, 3.854469352965085*^9, 3.855872768633704*^9, 
  3.855873255616345*^9, 3.8558735577363863`*^9},
 CellLabel->
  "Out[7169]=",ExpressionUUID->"eac3b346-ba25-43d3-8a79-8b2eab88ccdd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["chplUltra Units", "Subsection",
 CellChangeTimes->{{3.85359176286098*^9, 
  3.853591770342471*^9}},ExpressionUUID->"d0e107d5-d933-4a8f-a23d-\
993f5cbe4139"],

Cell["\[Lambda] and m22 are constants; we tend to set them to 1. ", "Text",
 CellChangeTimes->{{3.8535975383379307`*^9, 
  3.853597553161929*^9}},ExpressionUUID->"6c8ca5e6-2ffa-4671-aff6-\
3622ac897ad1"],

Cell[CellGroupData[{

Cell["Code units and conversions", "Subsubsection",
 CellChangeTimes->{{3.77350735357123*^9, 
  3.773507362189612*^9}},ExpressionUUID->"08858886-beaf-468e-b6f5-\
d707440728a0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxion", "[", "m22_", "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"m22", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "22"}]]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1.783", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "36"}]]}], ")"}]}]}], "  ", 
  RowBox[{"(*", " ", "kg", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hbar", "=", 
    RowBox[{"1.0545718", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "34"}]]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    SuperscriptBox["m", "2"], 
    FractionBox["kg", "s"]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parsec", "=", 
    RowBox[{"3.0857", "*", 
     SuperscriptBox["10", "16"]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", "m", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ly", "=", 
    RowBox[{"9.4607", "*", 
     SuperscriptBox["10", "15"]}]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", "m", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"kpc", " ", "=", " ", 
    RowBox[{"3.086", "*", 
     SuperscriptBox["10", "19"]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "m", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mSun", "=", 
    RowBox[{"1.989", "*", " ", 
     SuperscriptBox["10", "30"]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "kg", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"6.673", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "11"}]]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"N", " ", "m2", " ", "kg"}], "-", "2."}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"omegaM0", "=", "0.31"}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"H0", "=", 
    FractionBox[
     RowBox[{"67.7", " ", "*", " ", 
      SuperscriptBox["10", "3"]}], 
     RowBox[{"parsec", "*", 
      SuperscriptBox["10", "6"]}]]}], " ", ";"}], " ", 
  RowBox[{"(*", " ", 
   SuperscriptBox["s", 
    RowBox[{"-", "1"}]], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.773503413828999*^9, 3.77350349704389*^9}, {
   3.773503549295925*^9, 3.773503659100545*^9}, {3.77350370821369*^9, 
   3.773503775808909*^9}, {3.7735042712855253`*^9, 3.773504295854155*^9}, 
   3.775397848708343*^9, 3.775397882003187*^9, 3.7866674076043997`*^9, {
   3.7894768979382153`*^9, 3.789476917695592*^9}, {3.7894770425255213`*^9, 
   3.7894770437107487`*^9}, 3.810998779148885*^9, {3.810999400419484*^9, 
   3.810999467426882*^9}, {3.810999683191971*^9, 3.810999685934641*^9}, {
   3.8164473577228518`*^9, 3.8164473645221148`*^9}, {3.816447898825255*^9, 
   3.8164479026733513`*^9}},
 CellLabel->
  "In[7170]:=",ExpressionUUID->"d1f52f3f-27f9-4c0d-b821-1d4b9b0b68fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining code units (in SI):", "Subsubsection",
 CellChangeTimes->{{3.773504700250442*^9, 
  3.773504723730002*^9}},ExpressionUUID->"150e99ec-bba6-4917-a86b-\
87b619bca771"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"timeUnit", "[", " ", "\[Lambda]_", "]"}], ":=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"8", "*", "Pi"}], 
       RowBox[{"3", " ", "*", " ", 
        SuperscriptBox["H0", "2"], "*", " ", "omegaM0"}]], ")"}], 
     RowBox[{"1", "/", "2"}]], 
    SuperscriptBox["\[Lambda]", 
     RowBox[{"-", "2"}]]}]}], " ", 
  RowBox[{"(*", "seconds", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lengthUnit", "[", 
    RowBox[{"m22_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"8", " ", "\[Pi]", " ", 
        SuperscriptBox["hbar", "2"]}], 
       RowBox[{"3", "*", 
        SuperscriptBox[
         RowBox[{"maxion", "[", "m22", "]"}], "2"], "*", " ", 
        SuperscriptBox["H0", "2"], "*", "omegaM0"}]], ")"}], 
     RowBox[{"1", "/", "4"}]], 
    SuperscriptBox["\[Lambda]", 
     RowBox[{"-", "1"}]]}]}], " ", 
  RowBox[{"(*", "meters", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massUnit", "[", 
   RowBox[{"m22_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "G"], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"8", " ", "Pi"}], 
      RowBox[{"3", " ", "*", " ", 
       SuperscriptBox["H0", "2"], "*", "omegaM0"}]], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "/", "4"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox["hbar", 
      RowBox[{"maxion", "[", "m22", "]"}]], ")"}], 
    RowBox[{"3", "/", "2"}]], 
   SuperscriptBox["\[Lambda]", "1"], " ", 
   RowBox[{"(*", "kg", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.810999822914514*^9, 3.8109998361228857`*^9}, {
   3.810999924100363*^9, 3.810999944170568*^9}, {3.81644700584802*^9, 
   3.816447012858437*^9}, 3.854467417166926*^9, {3.854467715072693*^9, 
   3.854467719973151*^9}, 3.854727882898135*^9, 3.854742794242692*^9, {
   3.854743460430483*^9, 3.854743464262329*^9}, {3.855178785039167*^9, 
   3.855178785508745*^9}, {3.855179884960801*^9, 3.855179887742091*^9}, {
   3.855179924375374*^9, 3.8551799245897017`*^9}},
 CellLabel->
  "In[7179]:=",ExpressionUUID->"ec01f915-9ac7-4406-a10d-87db3be27fd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code units in \[OpenCurlyDoubleQuote]astronomical\
\[CloseCurlyDoubleQuote] units:", "Subsubsection",
 CellChangeTimes->{{3.773504700250442*^9, 
  3.773504720304882*^9}},ExpressionUUID->"b39238c4-687f-40d5-b0a6-\
4519e9345148"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"timeUnityears", "[", " ", "\[Lambda]_", "]"}], " ", ":=", " ", 
   FractionBox[
    RowBox[{"timeUnit", "[", " ", "\[Lambda]", "]"}], 
    RowBox[{"Pi", " ", "*", " ", 
     SuperscriptBox["10", "7"]}]]}], " ", 
  RowBox[{"(*", " ", "years", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lengthUnitkpc", "[", 
    RowBox[{"m22_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"lengthUnit", "[", 
     RowBox[{"m22", ",", " ", "\[Lambda]"}], "]"}], "/", "kpc"}]}], " ", 
  RowBox[{"(*", " ", "kpc", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"massUnitsolar", "[", 
   RowBox[{"m22_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"massUnit", "[", 
    RowBox[{"m22", ",", " ", "\[Lambda]"}], "]"}], "/", "mSun", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"Solar", " ", "masses"}], " ", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.773504732114448*^9, 3.773504760737031*^9}, {
  3.810999980636219*^9, 3.811000048182513*^9}},
 CellLabel->
  "In[7182]:=",ExpressionUUID->"be7113b6-da85-4595-9ef2-0bc40cd1f61c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lengthUnitkpc", "[", 
  RowBox[{"1", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8553345192202*^9, 3.855334524247735*^9}, 
   3.855334670240016*^9},
 CellLabel->
  "In[7185]:=",ExpressionUUID->"c3eacc78-0549-4177-95d4-afd6ac90bc30"],

Cell[BoxData["38.36085049273944`"], "Output",
 CellChangeTimes->{3.855334525181758*^9, 3.855872768649914*^9, 
  3.8558732556328773`*^9, 3.85587355775298*^9},
 CellLabel->
  "Out[7185]=",ExpressionUUID->"e53f831d-aa60-482c-9024-ce84ae9f148e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lengthUnitkpc", "[", 
  RowBox[{"1", ",", "2.55739"}], "]"}]], "Input",
 CellChangeTimes->{{3.855334678526816*^9, 3.855334683824686*^9}},
 CellLabel->
  "In[7186]:=",ExpressionUUID->"62cb53e1-ad03-4edf-9628-635476cac155"],

Cell[BoxData["15.000000192672779`"], "Output",
 CellChangeTimes->{3.8553346850318947`*^9, 3.8558727686669064`*^9, 
  3.855873255651805*^9, 3.8558735577578363`*^9},
 CellLabel->
  "Out[7186]=",ExpressionUUID->"177d310e-8114-47b8-acba-ac4675db8f95"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\[Lambda]", "]"}]], "Input",
 CellChangeTimes->{{3.855334619744459*^9, 3.855334627527701*^9}},
 CellLabel->
  "In[7187]:=",ExpressionUUID->"605ea4ab-2469-4048-abb4-5fcd3b8f0d2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]", " ", 
         SuperscriptBox["hbar", "2"]}], 
        RowBox[{"3", "*", 
         SuperscriptBox[
          RowBox[{"maxion", "[", "1", "]"}], "2"], "*", " ", 
         SuperscriptBox["H0", "2"], "*", "omegaM0"}]], ")"}], 
      RowBox[{"1", "/", "4"}]], 
     RowBox[{
      SuperscriptBox["\[Lambda]", 
       RowBox[{"-", "1"}]], "/", "kpc"}]}], " ", "==", "15"}], ",", " ", 
   "\[Lambda]"}], "]"}]], "Input",
 CellChangeTimes->{{3.855334572772212*^9, 3.8553346122841787`*^9}},
 CellLabel->
  "In[7188]:=",ExpressionUUID->"c4611a54-96ed-41ff-ad09-3370082eca35"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "ratnz", 
   "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 7188, 299, 28455508633806633648, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.855334613372467*^9, 3.855334630089076*^9}, 
   3.855872768711563*^9, 3.855873255674458*^9, 3.855873557766266*^9},
 CellLabel->
  "During evaluation of \
In[7188]:=",ExpressionUUID->"9dcef6a3-27f2-4288-a1ea-d6391bc12f15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", "2.5573900328492956`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8553345868272676`*^9, 3.855334630097574*^9}, 
   3.8558727687332478`*^9, 3.8558732556926823`*^9, 3.855873557773315*^9},
 CellLabel->
  "Out[7188]=",ExpressionUUID->"7f87398b-f816-49b9-8024-24b323eac3db"]
}, Open  ]],

Cell["\<\
Need to calculate the lambda you want for a choice of parameters; in the \
meantime, posting the table below with some ideas:\
\>", "Text",
 CellChangeTimes->{{3.81100011958339*^9, 
  3.811000158903241*^9}},ExpressionUUID->"53794e21-55cb-453c-8b4e-\
45426f479ff4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQn0VuPax3/4kz9Zpgw5qFd10EAyhUwpkikhU0SGRkKGVNJoqnCyFJKx
c0iGvEeGEy1R6RClJaL3yKt3kWEpedfhPRZn/8/n9r8e975/ez/Pnp75+qy1
5benZw/3vu/vfd3Xdd17Xnzl6f02/d3vfnfN//vv/5zed1jnoUP7Dj9ju3//
0WvINQP7D7ns0u5Drr2s/2VDD734//n3ym3/ve+P/142+/f/e4qiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqiKIqi
KIqiKIqiKIqiKGXmv//7v73PPvvM/FuPy0cffeS99be3yn4duuiiiy66xFvW
rFnjLVq0yPvll1/K3ZQqiqJUBP/3f//n/e53v/N22WUX868uuuiiiy66VNvy
5Zdflrs5VRRFqQhE269evdr8fz0uTz/9tNe8efOyX4csH374oTdlyhTf8sEH
H5T9urJe7r77bt89Pv+X58t+TeVcHnvsMd/zePTRR8t+TWmW9957r0E5Xrdu
Xdmvq5qWefPm+Z4fdUO5rymL5YcffvDuvffe3H1R9pOe65NPPjFt2P/+7/+W
uzlVFEWpCKgbqRcZ26xX/vM//9P7j//4j3JfRo7HH3+8gU3qkUceiXUOxqfz
tXX//Oc/015majbbbDPfPZ588snlvqSy0qZ1G9/z+MMf/lDuS0rFDTfc0KAc
o/eV6Jx//vm+5/fcc8+V+5Iy4YsvvvDd1z777JP4XP/zP/+j2l5RFMVCtX3l
anvauwEDBphl1apVeY/hHq655hqjj9GIjRs3NufYddddvS5duniTJ0/2fvrp
J7PvyJEjvS233NJbsWJFKW4nlEGDBpl7O+mkk1Tbe79p+969e5vnMmnSJLN+
9OjR3n777ee1atXK22233bwmTZp4r776apmvtjCMw0j5/f3vf1+x2n7q1Kne
oYce2mA54ogjzLcYB/rM5513nnfYYYc1ON8xxxzj/fzzz7HOh7Zv166dOS7f
sTfffHPgb3bu3Dl23c7+fIvu+fh7woQJsc6VD7mnvn37qrZXFEXJENX26bQ9
cbjjxo0zPjNZIdr+nHPOKbjvsmXLjAaxbWBt27Y1+mLIkCHe6aef7jVv3tys
b9mypXfCCSfk9lu8eHFm15yGuXPnqrb3ftP2n376qW89eqpZs2a+d/zyyy+X
5yITcvDBB1estp8+fbrpO7Fssskmvue84447xtKMd911V4Oxij333DN3furb
OKDtOa4QgwcP9vbee+/AuKmbbrop8u/RN+H37OMbNWpk7qFNmzamD5E1l1xy
iWp7RVGUDFFtn07b33nnneb5zZw5M7PriartsXvbfi1HH320t3z58gb7YRvD
Nom9126zVdtXFmHaHn788Udv2223VW1fZA455BBznfZ3ddttt0U6Fj+4Fi1a
eNtss43vO3v22WcTX09UbS+MHz++gbanPx+VK664wttqq618x59xxhlJLj0y
qu0VRVGyRbV9Om2P/0Q5tD3xZ3b7279/f+9f//pX3vO+8sorxhdHtX1lkk/b
wx577KHavsig7TfddFOvR48euWfNc4/iS0MdwP7Dhg0rm7Y/7rjjzG+KnxsL
/lBReOmll8y94yNjXz8x78VEtb2iKEq2qLZPru3Xr1+fs6WWUtu///77Ptvg
vvvum/OlLwT+Q6rtKxPV9uVHtD3zXdj6dsaMGQWPbd++vdehQwfvr3/9a1m0
PeMG22+/vfHLeeqpp3zXwPwl+fjmm29MH+D444834xT2sYVifdKi2l5RFCVb
VNsn0/bkcDvqqKNy7V8ptX2nTp18be+0adMin5v8FOJvoNq+slBtX35E28OR
Rx6Ze974mucDmzf7/flPfy6btl+yZEnOZk+ud/sauK58nHjiiSbu/quvvjL/
H9fmnwbV9oqiKNmi2j6etkfTX3755SYu1W470fkXXHCBWS666CLv22+/TXw9
+bQ9vgFbb711LJuci2iWd99917d+4MCBZrnyyivNgj8/7a7bByC3Yb9+/Yxv
Lr5At9xyi1lPnk7un/hd7H+nnXaaWU++FHx2WUful88//9x3vkrU9sQoc+/c
41VXXWX+5Z7tuER8nC699FITs8zC9jFjxiT+zTTafujQoeZdcB1yrRJ7wXvp
06ePeQf4XlNWsUvPmTPHGz58uNFy3bp186677jpT9qJoJL6ZESNGGN8Vxo1Y
OAe+Yl9//XWD/atR27/wwgu+7yxf/kliXagT8Isrl7aXMbmJEyeav6nT5Bqo
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
886cOTOz61dtryiK4qdU2r5169Y+XZ8vzzVzotq2+/Hjxxf12lTb+1HbaXag
kUaPHu0df/zxpizzby0yatSoWNoeHx7mzrL1JDBfG3Nd2H1JfPVkXKBU8fX1
BGXUfRcvv/xyJG0f9h4ldoo5rmzuuOMOs75Xr16ZXb9qe0VRFD+l0vY9evTI
+deHzVMofPXVV7n8OSzY8YuJans/ajvNDnIw4bfy5ptvmrl+Vdv/yr333mv8
Nf71r3/51uMPgg+Hu545dTn/mjVrMrtmJRzmRuZ5M2aXj7D3+Omnn3rdu3c3
5d9m2rRp5rxnn312Zteq2l5RFMVPqbQ9Pp3P/+V5b/369ZH2xw+HuW/wY8BP
v5iotvejttPisNVWW6m2///BNyPqeNzixYvNuZm3Vykey5YtM32rLl26mDwG
d955Z8Fj4rxHwGaQ9fy6qu0VRVH8lHvuqkpAtb0ftZ0WB9X2v4IPCNrx22+/
Lbgv+7Rs2dLbfvvtzdynSvHAloJdHZv6tttua8rq6tWrQ/eP8x6BPEpZ2+xB
tb2iKIof1faVre3J8Y9/Er7vc+fOLdt11ILttNzPstK0PT7R9NeiLueee27o
ueJo+9NPP93r3bt3wf3Il8u7+sMf/lD0sbt8lLvcRIG5vaO+x2bNmnnvvPNO
3vMRR8/7JF9OmGaO+h5h1qxZJraWvGeuzSAtqu0VRVH8qLavbG2PL8yVV15p
3hHasFCsQjGoFdtpuZ9lpWl7tDNxAPTboiz56oio2v6LL74wGq+QtiTmhpyJ
PXv2NNcJr776amSfviwpd7mJAnOERH2P5K6x88xT/z311FO+86G/mSucew7K
7RT1PcLUqVNN34jfAWL1mZM8K1TbK4qi+FFtX9naHsgjLv4wxLgVIkt7bKXY
TrMi7rPM0h5aado+S6Jqe/IudezYMe8++HwxDwb5NW3I01Quf7C45aZaoN+C
Xw1lU/pQQrt27cz9iia3ifIeYcyYMV7btm19MTqzZ8/WWFpFUZQiotq+8rU9
MJbNe2KOAOYAyEdW9thKsp1mSZxnmcYe6lLL2n7gwIHmmRIvHwb6mHhs+p5h
rFixwtiLmzRp4h155JG55cADDzQ+4OUkTrmpJtDeLDb00TbffHMzXufea5T3
iN1/0KBB5nkdfPDBuffI/Fi77rprg35bGlTbK4qi+FFtXx3anrzy5K7hXU2f
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
URQ/qu0rT9srSqmZNWuWsT/fcMMNDXw2bPAJIc8KeXmC5ldSykvU91NL71G1
vaIoih/V9qrtlfqGfC/45vMdADGiQTZrYjfJk8n8t2hDYNwgyMdEKT1R30+t
vUfV9oqiKH5U26u2V+qXMWPGeG3btvXlSJk9e3YDvxx8e5g7a9y4cb715Eav
1hjMWiLq+6nF96jaXlEUxY9qe9X2Sv2B382gQYNyc50eeeSRZunUqZO36667
+rTfihUrTCxukyZNcvuxHHjggSY+VCkvUd9Prb5H1faKoih+VNurtlfqD/Lg
yBypQcuzzz6b25ccKmH74duhlJeo76dW36Nqe0VRFD+q7VXbK4qiVCuq7RVF
UfyotldtryiKUq3UsrZfsmSJ165dO1100UWXWAtxdK1atTL/lvtayrUwVk0u
uHJfhy666KKLLvEWacP+8Y9/lFuKZ878+fO9I444wnv00Ud10UUXXSIvDz30
kNehQwfvnnvuKfu1lGsZO3asmRey3Nehiy666FIvyx133OH179/f69Wrl3ft
tdcmPs+0adNMG1aL2p5ctL///e/LfRmKolQZ6pOjPjmKoiilgnmUhwwZYvIx
XXnllca+xLjp5Zdfnuh8teyTo9peUZQkqLZXba8oilIqTjvtNG/nnXc2OTkF
dD76Pgmq7RVFUfyotldtryiKUgrIrUp7gw+ozQsvvODNmzcv0TlV2yuKovhR
ba/aXlEUpRR069bN23TTTb1169Z5ixcvNhp/4cKF3k8//ZT4nPWs7W+77Tbv
xBNPzLucdNJJXr9+/bw//vGP3vvvv5/ZtTGX9amnnuqdddZZXu/evb3zzz/f
/Hvuued6PXv29B544AHf/k8//bRZf8455+T2O+OMM7yrr77abB86dKiZR4/x
m1122cXsX0lwv6eccoqJDznvvPPM/co9M48341FR53Z+7bXXvLfffjv1Nb37
7rtm/jnmld5jjz1M3HU9kdVzrEWKqe03bNjgG3dNw3fffWfygdEerF+/PpNz
CtWq7SdMmOB9/PHHsY754osvvM8++yxwG36w7733XhaXpkREyvWyZcu8H3/8
MdIxP//8s3lPb/3tLe/7779PfQ2//PKLabdef/117/PPP099vmoGfbho0SKj
gaK+j0KsXr3a6Fe+vWoibv390Ucfmbb2ww8/DN2Henb77bf3unfv7l1yySXe
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
Hye+7lrT9u+++67Xs2dPr0OHDqaPJc/p7rvvLvelKQkQrZmVtmcsje9Utf2v
FON7ufnmm71NNtnE6Kcvv/zSrPv222+9gw8+2PhHMK98pXHDDTd4Xbt2NVqS
a+cZMOd9PmbOnOltuumm3tFHH52zA3///fdet27dzDnuu+++0GNHjRpl+gFp
UW3/axsm5faFF17Iuy/vaddddzX78p5qja+++srr1auXN3To0Ab+X4pSL2Sl
7X/88Udjt7ntttsCt0tfmpieqGD/xwZB/XPKKad4p556qm+hLeacaf12ak3b
MzY+evRo78EHH/TWrVtnNKFq++qEtl3a7Cy0PTZZxsDknKrts/9eli5davoI
+ASgO22wQaB5mzZtWnFalLJA/Y0v5T333FNQ23/zzTfezjvvbPoq/L8N97bd
dtuZNsF9BgL9nrT+OFDv2p77bt68uXkGtJNRmDFjRq4OeOihh7K4VEVRKois
tP38+fPNechfHMSCBQvM9gceeCDS+X7++WfTPq5cuTJwO/6DaPvTTz896SXn
qDVt76LavjrB/km5xBctK21/xx13eC1atPBatmyp2j6EtN/LySefbI4/5JBD
ArdXw7Pn2gpp+6lTp5p98IkM4owzzjDbb7/99gbb8H1iWxb1d71r+xtvvDGn
0/EDiwpjJhzDWJKiKLVFVtp+9uzZ5jz7779/zh/HBn8dtr/00kuRzkcMzI47
7hi6/YorrjA2/Szi3VTbK5UIuS7wdcBvOQttz5gZdlT64fiBV7q+LBdpvxex
oZK3PQjR/mGaOAh08vHHH2/q60JMmjTJvOegejgqUbQ9Y6fsM2jQoMDt+Piw
nb6py6JFi8y2Cy+8MPE1CvWu7Y899ticthf/rygccMABueMYuwLGbLC/3XLL
Ld4111zj/f2//m78avFbHz58uFk3a9YsY1sLY/369d79999v6i/KOMeQHykN
5PGkj3jllVeaskmshsTGUJfxfXCd77zzjhl/Y9/rrrvOe//99wPPh1/SI488
YuZb4L7wywPW8Z21ad3G6AIbcrcOHDjQ5HHt3bu3d+uttzb4xtasWWPiyckD
wvLGG2+YGGY7nwh2Tp4zMYL8/9q1a33n4Bj81RiDOfPMM824SljZjnJNgL4j
zhrbDvc7Z84c87ywxeK7xPvVHKm1RVbanrxb4qNJLL5tPyB+h/zF6Ge+yajX
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
t1e7vaIoSqnAnsR8XuQ+ufLKK82cQsyje/nllyc6Xy3b7VXbK4qSBNX2qu0V
RVFKBfm+yQ+4YsWK3Dp0Pvo+CartFUVR/Ki2V22vKIpSCsgtTntzzz33+Na/
8MIL3rx58xKdU7W9oiiKH9X2qu0VRVFKAfN9MkfQunXrTJ5yNP7ChQu9n376
KfE561nbjxkzxjv99NO9c8891+vdu7d3/vnnm3979epl1sszefrpp814yTnn
nOPb7+yzz/ZOPfVUkzc+Dfwe80G1bNnSjMl8/PHHkY6bO3eu16lTJ69NmzZm
HimuKypDhw41cRaM9+yyyy7mHiuFb775xnvqqae8jRs3lvtSqg7mG0hbHpXi
afvVq1ebOvuLL77I5Hzfffedt2TJEm/ZsmXejz/+mMk5hVrR9hs2bPCNc8eB
b4n5+JTysHz58tjtAN/EG2+8kem8h5Sf9957L9F869XMu+++G3rPzEOzfv36
VOdP822Wi7jX/NFHH5l2+cMPPwzdh3p2++2397p37+5dcskl3uTJk40+a9O6
TWQ96FLP2p5xkPHjx3vHHnuseQYsTZs29W644Qbv9ttvzz0T2mJilukDyH5b
bbWVd9VVV3m33npr6jrk7rvv9s4666zcud95551Ix1HX3HjjjV6zZs3McSec
cELk33z88ce9gQMHmr4ixxKXXQnQT8XHjGuiz6NEZ+LEiea5bb755nnrEaUw
WWp75om76aabvB133NFr1KiReT+cm371vffem+icCxYs8A499FBvyy239Nq2
bes1b97c22yzzUxdRnucBdWu7Zlfj3ugfmSJC/X/nnvumehYJR30fS+99FLz
nUT9RqZPn+7tu+++xlZ10EEHmbb88MMPN/OzJwEbas+ePc359tlnH699+/Zm
fvf7778/0fmqkU022cTUW9g2r7nmGm/kyJHexRdfbOa35908/5fnE5037bdZ
DuJe83PPPWfqeDR7x44dvSZNmpj65IknnvDtR99JdNi1116bW08btMceexi7
b5K5RutZ2wvoINHV/fr1C92Pd8C3zX7Yy7Nmm222iaXtBcYf4mp7oV27diXV
9vQp8uXV+/bbb3PPgbpUiQ59TSnHYeMwhZ6/8itZavsTTzzR1EMzZ840Nkjm
iJ4yZYrR+fwGuj8O2CS33nprk0uB6xRod8XugD0iLdWq7bHNdO3a1TxztAnP
hHHNuIi2rBbtUe3QJ0VLd+jQwdtiiy1ydRm2r3yQX+Siiy4y+1533XXmb1i6
dKlZd8opp8S+Fr4xykyrVq187fGZZ55pzoldrR6Qd+Au1F3YNeOS1bdZSpJc
M3U9ev3oo48240hAvY/vDee47777fPvTf+K8rk1OyjX5iOOi2v7X/rmUWbvf
FAR9ePbjHWWNvN+42v62225LrO3pE5ZS248ePdo74ogj8u7zwAMPeD169DDj
WEp0sE8x1oG/lbRvLlGev5KdtiePGe1gUFmmbZR655lnnol8TrQKx5x00km+
9fQbZEygc+fOqa4bqlXbY+elTnz99deN32oS/UDbIe9GtX1pwHeB+unBBx80
bbKMRxfS9qJ/+vTp41uPrZn1tNlx+OSTT7zGjRsbe+sHH3yQW8//S5m44447
Yp2zWhEbGzoKmxvjIjxn3lUSsvg2S03ca8anGN9qyhD/b4PO3m677UzZQnsL
MibkMnjwYPN7fBNxUW2v2r6U2p7fU21ZPvT5RyMrbX/yySeb8/Tv37/BNupc
GQd0dUk+ZKwN+7w7VssYcFZ6tFq1vQ3tclz9gH2N+z7uuONU25eRKNqeOBN8
0XbaaSffGBY8/PDDxkZKXFwciKHjdydMmOBbj78ovig77LBD3cQ08RzQR8Ug
ybdZbqJc89SpU/PqsTPOOMNsx+9buOyyy8w6d67E8847z6x///33Y1+ranvV
9qXS9rNnzza/pdqyPOjzj05W2h4/XalbZGzWBl958b2PCppl//3392655Rbf
evxB0TicL4v5uOtV2/ft29eMpeMXq9q+fETR9kcddZTZ54ILLgjc7ur9QjC+
xvnwp1i7dm2D7fSl0+QuqTYqXdujk/ExjfKeJ02aZOzlxMImJco1S99w0KBB
gdvx8WE7tgOBsoad3z7myy+/NP1IYmqToNo+G23P2Au+zPjRMq5o98moD9BV
lAtid/EJ/OGHHxqc29b2vFfOh38F5yIXRhi2tue32JfY32HDhhkdgB0qjELa
Hr/DUaNGGT8AfA3xMYhbVlatWmVifvER5rcY1yNvqyyin3gms2bNMnU5z5DY
UBvGxPDXQdMQ10OcPvf75JNPmnvlm/nzn/7sq3u5fs7Fc6Q/ne9ZZHW/XOeM
GTPMe+Fd276ZjOs+8sgjJg5+xIgR3pw5c3LbKENcP3k5uAZp08itctddd3lX
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
V22vKEoSVNurtlcURSkVp512mrfzzjt7K1asyK1D56Pvk6Davr748ssvvSVL
lng//fRTuS9FUSoW1faq7RVFUUrBs88+a9qbe+65x7f+hRde8ObNm5fonKrt
g5kwYYJ3yCGHeHvttZe3yy67eJMnT8746koLfcGOHTt6W265pXkm2223nffg
gw+W+7IMXBt+vfvuu6+3xx57mOdea1xxxRXewQcfbPrg9M2f/8vzRf29oUOH
5n6P8vv0008X9fdqjWJq+w0bNvhsM2n4+eefvffee897629ved9//30m5xRq
QduvXr3aW7hwoffFF19E2v+XX37x/v5ff/def/1146+qlAf0yKJFi7z333/f
+/HHH2Mdu3z5cm/jxo2ZXEfc8lMvoI9WrVqV6hwfffSR99prr3kffvhhRldV
GuLW31Hus1u3bt6mm27qrVu3zlu8eLHR+JS7NDZY1fbB0K5dddVVXuPGjc3z
ueWWWzK+utLx1Vdfmeew9dZbG5v94MGDzT2hoysByuDYsWO9du3ameuiP1Vr
PPbYY16/fv28TTbZxNzjrFmzivp7jz/+uDdw4EBTX/B7xOYo0SmGtv/Xv/5l
6pVmzZqZJQ3r16/3Lr74Ym+rrbbydtttN69NmzbeFlts4R1//PFG22RBtWp7
9PlNN93k7bjjjl6jRo28zTff3LxL+rn33ntv4DE//PCDd+2113rbb7+9GQdv
3769qS/pFxPTRnlQio/YoDbbbDPz/Hlv2KPOPPNM79NPP817LPr70ksvNceE
vecoJCk/9cRdd92V6hk/99xz5lnyrfGumzRp4u25557eE088kfGVZkvc+jvO
fVLPsl/37t29Sy65xNiSsc21ad3G+/jjjxNdr2r7/Bx77LFVr+2vv/56cw+X
XXaZ+full14y9WWvXr3KfGV+nnzyyZrV9gL3VgptL0h/SbV9PLLU9jfccIPX
tWtXUxdJ3w49nhTsmLxXdPzSpUtz67EPHXTQQUaTYO9MS7Vq+xNPPNE865kz
Zxr7LeMZU6ZMMTqNZ49uc6FNpd19++23c+vIkUQbzjGck7ZdKR7Y6emr9unT
x3v33XfNupUrVxqNwzvg/bh5q9ivZ8+eXocOHUzflv1Y7r777sTXkaT81Auf
fPKJt+222ybW9jxT7E1HH320991335l1PF/s1tSN9913X9aXnJok9Xec+2Ts
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
e+21VzH11FO7farZc4S9NffYY49+F81gMGSAvRRPP/10t58V/JRx5rn/fS56
7dFHH+32Uudf+P18883n8prU7YUKRrLd3ri9wWDIgXF74/ZDAeTgJWcXtjsB
ng+/NxgMww/M14877ji3jzj7X5dxe3KWjDPOOO5f4dNPP3Wcdqeddqp9j3F7
g8FgGAjj9sbt+w1yDyOD559//oDf77333uKhhx7qU6kMBkOncOSRR5Zy+1VW
WcX51ITYYYcdHOf/5ptvKp9t3N5gMBgGwri9cft+g/0A2UPkk08+KZ5++mnH
8Z988km3pm8wGIY/qrg9vH7++ecf9Dt+99zDHL8Kxu0Nwx1ffPFFceuttxZ/
/etf+12UQXjppZeKpZZaqph77rndfl/sh9VN7LfffsVCCy3k1uzRDbfddltX
3zdS0S63P+GEEwbt4ywgE2V7OLO3wldffVX63K+//rp49tlnHderuq7de0C7
3L6qDoYaXnnllWT9kVufTUHdTzbZZMWqq65abL/99i7mjr49Zo4xxdtvv921
9/YSb731lvM5eOONNzryvF71D/rvq6++6jhZnf10uKJJn6hCr/pLN9C0DprK
cxm3h4/z+2KLLTbonrPPPtudw/++CsbtDcMZ2LDwP0WGN9xww34XZxDghscc
c4wbjynjnHPO2dX33XDDDcWuu+7q7H28j9wahuZoh9tL91500UXR82ONNVYx
5ZRTOl/q/fffvzj88MOL7bbbrphjjjncfb/7798Nugf+sNlmmxUTTDCBkyX2
Tx5vvPGK9ddfv3S8zLnHRzvcvq4Ohgo+/vhjt8adUtZ267MJ4I7qwwcccEDr
d+QSGwHxdD/++GNH39lL3HXXXc7+wNxlkUUWKaaYYopihhlmKG688cas5/Wq
f/A7fZV72KOdPHzcs/LKKzseOBLQpE9UoZf9pdNoWge58lzG7T///HP3+xJL
LDHoHjg954jHrYJxe8NwxpdffllMPPHEToaHcr4+OHYvuL2AHjVun49cbv/u
u+8Wk0wySeWYwLnYMe644xYnn3zyoOuJvUK2xx9//OKWW25p/U6OygknnLCY
bbbZiu+++67te0LkcvuUOugnWDdZd9113Xo3XEP1f95555Xek1Of9D14eOqx
6aabDrif+R/lCm2A22yzjfv9/vvv70Bt9B7XXXedm7css8wyzqYL4IH4IDHv
vfjiixs9r1f9g9wk6FV4/AsvvND6HVvtggsu6Nrrtddea1T2oYKcPlGFTuif
XiO3DtqR5zJuT95KfmeeEOLMM880u71x+1GByy67rFh77bUHxJMPNaDfesnt
sesZt89HDrcn7zA+VxoTqrg94x66iXkp/lpbbbWV4wgxHHbYYe6eWN7DQw45
JHou554QOdw+tQ76CeqZnHJXXHGF82Wffvrpa8fwnPpkfH/mmWecL0LKEcoa
MsIcKYRya1D+4Qb8J8n7A7/j/z7gIJNOOqmzfcJLUtGr/nHEEUc4P0d4awjk
iHJvsMEGyeUeSsjpE1XohP7pNXLqoF15rvK3xx9h9tlnH/Q7csg9DzzwQOX3
GLc3GLoP4/bDCzncHnvKjDPOWMw000y13J6xIxXYdLnnxRdfHHQOv2vOTTXV
VAP2NMm5J0QOt0+tg6GElDG8E/XZFDvuuKN7brh/Gn4O/D4cbcQXXHCBKzs5
QGLAX4Pzp556avIze9U/mLNW5R5deumlnR/GSEC73L4f/aXTSKmDduW5ituv
scYabm4f1tEmm2zi1hXq9qQybm8wdB/G7YcXmnL7d955x9lnHn30UeeD2ylu
D3+TDTymo9H7+PJwnni13HtiaMrtm9RBGVgXxw5WlwMCUIe8h/jxdlA3hneq
Ppviww8/dPbA3XbbrfUb+a0nn3xyF1M7HLHWWmu5evK/yYdsuiuttFLS83rZ
P1hf4zf2D4th1llnjfpQDEe0w+271V/gyfhDoZvrgC86uqhqv9c6pNRBu/JM
bFxZjBXzImIV/DGctQF8vw466KDa8o9Wbs+chzWNxx57zMkXa6ePPPLIgPwD
2Ev4TWumoc/HE0884eZda665pluLo8/79QgvYH8CbFmHHnpoceedd7r4p6uu
usqNR+Qw4e/33nvPPZtycPBcyubP1yjn448/7uZ3/B+9nwLuwWflpJNOcnF7
5OHgnTfffHNx8MEHO9m7/rfXD8irxvtZm6KMzEur8gAQE4OPMHPJ1Vdfvdhn
n30q14rolzyTvRfI/7D55ps73kvZwpzN+DSytkfd0ocoL32AWCaAv95NN93k
+h7lPe2001r39qJ9myDk9ugc/PTYc5I5fVVcfdM6BnXcnno466yznI8vPobI
QZlPSBMgX+ecc46zLdJme+65p2uDGIgXpA/Q9nwXsUush4Y5ZFL7UYh22q8J
t6efLr744m6fQdBJbo9Mcz18rgzE9HHNUUcdlX1PDE24fdM6KAP9Fp9mOC2+
uWUg1g0uNdFEE7m8kO2gbgzvVH3mAH2HHwi5tqhbykq/guMPR2CrpZ4Yj2Kg
DTiPvbIsl5SPXvYPdCW/4VtNW/jj4qWXXurOEUM+EtAOt+9Wf2FsoO5XXHHF
Sn7PeMqzGVPaQUod5MozOo61TeYfHNgzZp555pb+FOBKcPktttjCxdSzLgRv
Sukbo5Xbw6enm266Yuyxx27NMfF9PeWUU1rXsMe3znGw1gzglIpnop7hxnAj
5lis2b3//vvuOrgb79D98Djmnb/85S9bv11yySXuPbSv/y7uk18f8RmKTeNg
PSbVHrveeusNeDa8CD9O4kX23XdfNz7y+7LLLuuuZx2Yd8PJiA3hHH5f2ORC
kBeAcrFWyRhOmXQP9RLKFHwG+SXuiGvh1fBA6pV74G7C8ccf75594IEHupix
22+/3XF6rmMPZgDvQtaVT4Jv6WX7NoHP7eGptAnvgNfSd4k5isXUN61joYzb
w8GYJ/At5NdiLEIXsp5MXfk5OZqCZ8G1kBdyv1x44YXF1ltv7coRxgkyt0AO
aBPkEL298847Ox5Dm/pzsNR+JHSi/Zpwe8Yy9LRiw1K4PbLPmivfgE8mdh36
QgjqhusZC8tAXBrXbLvtttn3xNCE2zetgypgmxK/j9mzfF5fN8dNQd0Y3qn6
zAV9HHmhH5B3cbgC+5H6a1ldoxt1zWeffVb7zF72jz/84Q8DYizRSdjIGKvY
SwjbxEhBO9y+m/2FPR4Y71dYYYUov2d857mMD7G4iCaoq4NuyHMM3IcuZhzz
96euw2jl9oJf9/TTEMyXOIdMyY4uH6owbgbdy+9wFh/ym8QHDU7NnIt/+U3z
NMZE7uM35D4E7YtMw8GarjMR3w9n4tnUB7xd34K9U75x9Bdsb34+V31ryM0A
Ofw4h13UB3mb+J268wE3h9PGOD/8FTsyQCZZs4MfhiD+RtxeUL49n9sLvWjf
FIjb04boDJ+7am4f8+VsWsdCGbdnLY/fsdWHe+BofZC9MZqC+YLmR75NkTmZ
6l+5zjmPvQNZCNdKGD9pX/h9aJtM6UegE+2Xyu1pR7i5/x0p3B4uwBoEXI15
M2Mcv9MGPshrzu/ITBmUX1Xfm3NPDKncPqcO6uDze8ohfPTRR66fdIrXg7ox
vFP1OdpBm0oXlMkFOXx1TcyeFKLX/QN9pvxF/lGXs2S4oR1u3+3+In6//PLL
O24jaAzqBK8HdXXQDXnuJEY7twcLLLCAqwP5eviAW+ELIdx3330tjhbGRQPG
Hc7768SSOY7nn3/e/caYzu/+XA6bOtdgP8W3wQd+qNgdc2zGQL6C5NAO13Ow
bXIOm0T4fM2DsbeHYJ2Yc2Huyauvvrpl7/ex8MILO04T289mtdVWa3F71fFG
G2006LqXX3550HPJLVvG7UG32zcF4vYxvo2flc6R09NH0zoWYtyeuqONWSNQ
ri4fcH34Nnm7muQcYo1E60roMh+suUimxZM1X8H+HsOxxx7rzrM+4SOlH3Wq
/VK4PXPBRRdddNA6ah2vxVYPR/DBHJs1He7z57T0AX6r4ti6D1+N3HtiSOH2
uXWQAvF79B59nLGK9mOtp1O8HtSN4Z2qz9EOcqOq//rrbD7wsdQ1KbHC/egf
7MkWcnvmtvjljBS0w+170V/E75dbbjnH77VXa6d4Pairg27Icydh3L5w+UfV
P32bNfZkxhV/HUQ+d2U8UrEVvn+J+HFdWRgn5Z9CnjMfW265ZZTrpkLcHr+H
EIzLnGMcDcF+r5xj/TEEsooPfLhnh7gqPNIHHJrf4Y/Ym5F7cTLu0bwCrqj+
AEdFl3KeOQn884477hjwXDhIVZt0u31TIG4Pbw55tfap4AhzYjStYyHG7WX3
Zr5QBvxEuAaf/lSwNxf3UJexvAe0l2KmmLvoW8vmD/B1zrN24+ullH7UqfZL
4faUx/dDEXJ5rcYn5kny5dW6UooNjDlT7j0xpHD7TtdBCJ/fs8bfaV4P6sbw
TtXnaIe4RqqdkzW8OvSyf7Beznondgr8q5lvsr7oc3z2Dh4JaIfb96q/iN+r
DTrJ60FdHXRDnjsJ4/Y/+axonc3vm8Th4aPiY5555nHXMcbgAx0exERwHv9e
QZyE83WQbZJ9zZTjiFhK3tdODgZx+1isj3wxyBEfgjhFzpX5zsHliNfFx26+
+eZz9S3/dw6f67EmpfrxD+bwYdwccefhdXAefBpDn6Q6bt/t9k2BuH3Mzu6v
7cW4ZJM6FmLcnnUTftt4441Lyyn+38TvSHb4qvxwguzqHMzhYkDedY3vb53S
jzrVfnXcnrUn5oqxOOFcXktumPC71Q9SfFfJkZ97Twx13L4bdRAD81rVS9N+
l4K6MbxT9TnaAcdQO6b4JxNXUYde9g/0RxjjzZyWeH754fNvuOY+HNEOt+9l
fyH3pOyFVTk/clBXB92Q507CuP1PkDzK1501ctqWtvGh+D18vfCTKTt826w4
SVkOVB9+3Kxi67Bbt5vzTNyeuW4IcXv8lEOI28fqEZsyviKcZ+6MfL/++usD
fExC3gmPxWeesd+Pc+UI92LBLkJMfOjfyL2+nbCO24Nutm8KxO1j6x9V3D6n
jkGM2yseldxEZZAs4A+fCnwyUucDyJ/KXZbrCR2ta/zcRyn9qFPtV8ftiXeg
XViTCA/4MPdSl/wtf3HWnfALw8eUtZoQ5GrSd6ufag+Y2B5GgnJOyMcp554Y
6rh9Th00BeMT/oDM1XhmWXxtO6gbwztVn4ailfvwuOOOi55X7BGH70tdhl71
D2SOv8P1dAHbi3JWxMbY4YZ2uH2v+ot8oxjTWQ8P/e/bRUoddFqeOwnj9j8B
GxTyQV1wH5wWG2sYb6g4PdZ/UtGE2wPF1eEbDweF05Hvrx10mtvDv/hN3+X7
8MOdYryTfCx+PAn+MehM7WPJ2j7gmnCvB9azyHOJnTCcB6Rw+262bwpyuH1O
HQsxbs8e2PwWW58RtJ5KjEIqmKtxT5nvvw/ymqrczFFi8Nc6md8JKf2oU+1X
x+2RWXxFYofkjDkpf2udQXEhHLH1s4cffrh1Xn5n+J/ot7I92vFX4Tyxwrn3
xFDH7XPqoAl8Xs834b/HWj5lz50rxFA3hneqPg3/tgOU7UmqPTdj+3HG0Kv+
Qdw7f5OvqAzKvdiNXEm9Rjvcvhf9RbyeMQ0/HPQpOkf+951ASh10Wp47CeP2
/4ZyC+JzzByQ/IshNA+DY5btC4aPFVxOaMrtsdVqbMROwDeEHLQpOs3t4Yz8
zhpkaANV/KR4J34w2M3xJ0HWQ8BZFVtDncJrmPPHfOeU68S3n6Rwe9Ct9k1B
DrfPqWMhxu3xEeU38syUAR3ENU3yudFeKktZ3nZiK5Alyqp1GHL3xqA2Zl3H
jzVP6Uedar+cfWkFbMvcG/qjPPXUU+537Hsx30tiyVWPyhFE38A/j99i+Q/J
G6O6wpcp954YcvalFcrqIBUhrxccvx/TWX5fN4Z3qj4NP+U2lg6Ogbgyzof5
okBsDOxV/yAPO79V7akmu0VZrvPhhCbcPszN0e3+EvJ6AT8H8fuU/a3qkFIH
7chzt2Hc/t/wY5rxZ475DDC2aN0/1ubaN4w8JoKfmykVyo/CwRpXuxC3j5VZ
sbTkwg+hWNqwHpXDNsYTif305+2UH9mG21N3Mc5Orh7tdSGuGMsrJnu1rz9l
D63z9+5W+6aA/Js8M+aD6MfS+lwyp44F5Qbyy0lf1zoAfu8h5OeDXk7dGw3A
oeU/ST77EOhZvkFlUdmxecTWHOgnnCdXq4+UftSp9svl9nwPeYhi82jGPDhv
GT/Q+lX4fVqLiOkB2QpDu3jOPSFyuX1VHaSgjNcL9BdsAXX7W6VCOYCr8hh2
oj4Nhdsfj7rCdhPadOkfytXM3sY+4NbIVCz2shf9g33w+K3Kn5G5OdyS/USH
O1L6BBydtXbaEn9CH93qL2W8XqC88s9pl9+n1EGuPPcCxu3/DdpCfmBVe5qx
hygxeega9rrUnpjkeSFeEZllfKOtiRdUrCHtTO4+6jy2j6YP2Xl5R+oeljHA
ZeDDspWSR4Rysm6Fzwf+L8STcg57GLKKjZh+Q84W+VvgV6Y8dMC3G19++eUt
jkadk59c+7XhS8Q8hf4Bt+c3cg34/Y58hPQN2eLF7eGY/l613IPOwO4J91QZ
yemiMlK/Zfn/O92+KVAZ+Ta1J3pQ9mj0I+9QXaK7iMXi+Tl1TB4aYg+lU8g1
DD9VfWNbwqbNPMqvW8Yunoc9lD0ymoJ3aK8wxmGVlW+BqxIv4tfZhhtu6MrH
v8pdRH9h7OR36lllbtqPOtF+Tbk9+pNr/bZk/MEXzM/Tz3wDnUQ7+CBHDmMS
5Q77O75L9A++24/TQ3awLbGuE+5pknNPiKbcPrUOqgBvr+L1/nXi9/gyNQHy
QFwbOeywXWgegn2BvoNuCcfpTtSn4Seoj4dzd9nGY+vHyh/HEer3XvQP9IX4
KnalUH8wX+d5xNUOR+T0CcYktQn7zPvoRn/RfrdlvF5Ax2K7Y9xJHadBTh2A
HHnuBYzbD4TiQOryrNHW7CXJeAxPwi6OLGO3VPszxsE3xaXgpOy5glwj41VA
zuBKcJ92wPoU4x/vpgyUhTIxd8B/HfnlHDyaf/kbOz58m1z0fJNfdr5TILek
Yubor8rhgi0N/wvuoY/hC4N8YUtmPk0eQs4Ri8dv8En8SeQnxxyCMrPPEs/D
Hs++WvBZ/G6UOxHfR5VR5dezytDJ9k0BnDlWj8Qg8r3Uj85x8H++XXy3aR2j
z2Lt7X8vvJJ2EE+mXikjc7x2cvDC4dCD1BlzSeJEKAuxo6F+QTeTO5P5BO/m
WmQPbkt+e5+z5/SjdtuvKbdHj1NGyaIvj6wj+ECuuZa5NHMv9gfmXbRhWe4g
5nm0FQd7GeNPhn6gnsvWAXLu8dGU2zepgzLgt4Q8puS5xG7BXK2pDwT2DL9P
Uh8cKi8yG8sl1W59Gn4C/U9ze/QV/Z0xgb7K/D3mS0fOWuZ7ZXsd9aJ/oLPg
sMgzvovExTPWIIPIEvJfZ7MbqsjpE+h0xmPsZTG7dKf7C3vg4PuSkueSPdHh
DX7O6zrk6oUcee4FjNsPBO3UZP2E8YUccIxJncytiu0cLvPMM8907JndAPNi
fIfx8YAz+vZ4fOl8G6R/nn5E/2ZNIYx9oT9qTo9cMs+gLbVm0A6GSvs2QZM6
bgJs/Hwb9dtkvpL6XNYn6uJEWEvBzs63lfHadpDbfu3426eA9TFiJFjPYS0/
pZ9TJvoMvlqsVbFXTp3ezrlHaMfffqSinfo0DAT2XGQfWxK8WPvR5aJX/QP7
LTbrAw44wPFVcq31Or/hcMFo6i+dlud2Ydy+/4DfkEPLj5dk7tckx7jBYOgc
us3thwOM2xsMBsPwhHH7/oP1Kt8vC47PWhA+FwaDofcwbm/c3mAwGIYrjNv3
H8pBSYwpNnw4vu1dbjD0D8btjdsbDAbDcIVx+/6DPCrs70KcCbGE5PGI7Vtp
MBh6A+P2xu0NBoNhuMK4/dABsRjdiCc0GAzNYNzeuL3BYDAMVxi3NxgMhoEw
bm/c3mAwGIYrjNsbDAbDQBi3N25vMBgMwxUjmduTx3zppZcuDj/8cDvssMOO
5OPQQw8tFllkEZfDqt9l6ddBnuZll1227+Wwww477LCj2cH+C4xh/do7q5tg
/6M111zTDjvssMMOO+ywww47RtXh73VpMBgMBoPBYDAYDAaDwWAwGAwGg8Fg
MBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPB
YDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAY
DAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaD
wWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAw
GAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWAwGAwG
g8FgMBgMBoPBYDAYDAaDwWAw5OCcc84pnn/++X4Xw2AwGAwGg8FQgR9++KF4
+eWXiz/96U/9LoohE++9916xzz77tHX87W9/K33+O++8U4w11ljFkksumVSe
L774olhttdVqjzXWWKPYc889i4svvrj48MMPo8865phjivXWW6/YdNNNi803
37zYYost3MHfG2ywQXH88cdXluXMM88sttxyy6yDftEUu+++e7H++usXm222
Wau8/LvRRhsVa621VvHBBx80fmYZLrzwwrba/JZbbnHPeemll4qlllqqmHvu
uYv/+q//Sm5nH//zP/8zrOd+99xzT7HEEksUY8aMKaaddlrXbqnYb7/9ioUW
WqiYZZZZip///OfFbbfd1sWSVuPjjz8ulllmmWLeeectfvnLXxbTTz9938pi
GNlAd0vuf/aznxW/++/f9btIfcFQrof333+/mHLKKYuZZpqp2HnnnYu//vWv
/S5Sx5Gif+Ekt95664j8/hD/+te/imOPPbaYZJJJnP7/j//4j2LhhRcu/v73
v3fsHZ3gDIZ63H777a79OGaYYYZi5ZVXdtx3m222cfKuc7TDtttuW2y88cbF
SiutVEw99dStc3/4wx9Kn3/IIYe4a/7zP/8zaQ74zTffFKeeeqq7j76md+y7
777FaaedVpx++unuOPTQQ4sVVljBzRsmnnhi9/c//vGPAc+64447HH9ffvnl
W8/hmXDTk046qbj55psry0I/33vvvV3f1/1wnv333784+OCDW8eOO+5YrLrq
qsV0003Xuu68885LawAPV199dXHcccc5fuWX96CDDipOOeWU4qOPPmr8zDLA
33j+uOOO6/rWOuus49p83XXXdW3FufHHH7/YcMMNi6233trNLagH6ptzXA+Y
bzCHGjPHGPf7nHPO2agctCn3jTPOOMUbb7zRse/rJV599dXiiCOOaOnCVVZZ
JfneG264odh1111bdX7NNdd0saTV+Mtf/uL6yyKLLOLKMvnkk/etLIaRjWuv
vbbYaaedWvrkpptu6neR+oKhXg+///3vHf+ibNidRhrq9C/2a3EdxsKRjiOP
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
b3zzzTfFrbfeWnz55Zet37777rvitttuc7KaihNOOKFYeOGFi1lnnbX4+c9/
XpxxxhmDrvniiy/cu6i70YhTTjmlWG211SoP9ujYaaedXK7e1157raPvH+31
b+gOyEX3/PPP97sYhgrsueeexUILLVTMMsssxc9+9jPbu7OHwP537LHHOq4w
/fTTuz2WGCv//ve/97toQxLDTZ9gw11kkUWK8ccfv5hmmmmKSSedtLjiiiv6
XSxDBr7++utipplmcu14zz33tH7/+OOPi912281x/Mknn7yYYIIJsp7/wQcf
FMccc0wxZo4xTg/MOeecnSr6IKBjeMcKK6zQ+m2llVZyvy244ILJz7n77ruL
ffbZp5hwwgndvSeddNKA88xlmf9wbsMNN+xY+YcT7r333uL4448vVlllFVcP
HLPPPntx8sknF6effnpx2mmnFXvssUex9NJLO/3AnhybbLKJk6t2YfVv6AaQ
WWRqnHHGKd54441+F8dQgmuvvdbZDMYaayzXXjfddFO/izRqcOSRR7o6X2+9
9ZwNbeyxx3Z/X3jhhf0u2pDDcNMnn332meOB7KeFTXf33Xd35ccmaxh+2HLL
LZ2OfPTRR6Pn4Wm0by63F6655pquc3uezTvmmmuu1m+LL764+w0bQ1Msv/zy
UW6PTmMdg3Pzzjtv2+Uezvjoo49a3P7AAw+MXvPWW2+5+SPXMMdjfaUdWP0P
Ldxwww3Fyiuv3O9itA3m85Jl1voMP6Ef7TvffPMVTzzxROU1rKsOFW4/UvpA
FbDNY88dd9xxi08++cT9xpo8a/3PPPNMn0vXe9TJ6HDTJwcddJAr64477uj+
vv/++117m/1s+OHHH390a2szzDBD6TWswbEfcrvc/pZbbuk6t3/xxReL/fff
v3jllVdavxE/wG/MQ5sCv5IYtweXXXZZsfbaa7s1t9EMfJ6kvw4//PDS61gT
0nW77rpr2++1+h86OProo7vqa9crYLdiHNtvv/0GxRuNZvS6fTUuldmbBPw8
hwq3Hyl9oApPP/20q2/sND7gCKMNKTI63PQJ/g60r++DMxrbdiSAPY5pyymm
mKIyZoK1peHA7TuNKm5v+Amp3B5dyNqkfHcMIwe//vWvRzyvGc3odfviE4me
GE7cfjT0AbULvq+jHakyOpyADPNN9913X7+LYmgTrKuJlxGXWAbs4PietwPj
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
VSRPoY1RkK6Pcfu77rqrVM8BjTusX4a2Er6Dc9ShD/Xb0J9R9UMfwlfIh+oa
/4kQrG9ybrnllhvwe119NoHP7SUrOmQDYN5Pnw9tjzntJsTqHz9Bfttoo40G
PYt3Mb8XqGN0le9HIWBvFYdtp4w5MlCH1HILGidZ2w+BDRCbTzvPT+E1OTJa
VXeUm3O0C3ZoH+ypJo6dA9bDysY3X4eFnBG/OZ3baqutBt0rGx5+jyHUH33b
rUB/l91fuekAsqb3hfn1ZO9n/uujqc4Gde3bpM+loim3b9K/cmSxDqncHnum
2kxc8tVXX3W/w50E8kpyTZjfV2u2ZXXatD6atl0Vt9d8JFybElRH2Fp9pNZJ
3ffl6IScPiSkymhMn7QzprTDo+pQxe1BN3iY0C99P5pAveIzwfq9csNzsHas
fYcYFyTbsTk/fhPwZX9+JZmkXcN2x6dL74ntYa1xETmKQXN/dGIZZDvGXwxI
JlgDL8tPBSct4/ZVeg5IVn3bg6A1z8022yz6HWGeZOpE9ePb86nnsn4OWIsQ
v/ZRV59N4HN7yo/86Ah9SEPktJsQq3/8/lQW9BS+Bug7yoJewcdYgOvK/gGf
wR9VYwn3SIe0U8YcGahDarkFfBm5HjulP1YiO+hg3+6T8/w6XpMro6o71vRD
UJ+c8/exEMgJwDnsZTmoGt98HRbOU9F1+s6YPww+Epw7//zzB51TfyyLYYMv
cf5Xv/pV6zd0MP2XIxwLtV+fr5tzdDaoa98mfS4VTbl9av/KlcU6pHJ7jTnY
JqtAOfA19tcVgLgbHCeGpvXRtO3Kxjx4pJ5TlpMYvs557FP+mmBqnfjf1ymd
0LQP+UiV0Zg+aWdMaYdH1aGO23eDhwn90vcjGXCzKmCvl2+Z1lK0lsWBrSMF
ksmYzYH1HD0vFoMnmSrrR9qPduONNy59v+RO+9NqLadq76NOcPvYvF8+NuE6
EvEq/B6uqRHLIr7l82XJNQfxtYwt/iEfUuywvp2urj7xicOeGzvQ/T58bh/r
l1XIaTehrP7ZS1nl0YEexl7l8zHWWvGpDK8lHsTfn7mdMubIQB1Syy0QF6v1
KWKwBHwZGb/afX4dr8mV0aq609ou+xuEwP7GOXxBc5DC7WM6jHgufSf+9iHk
86IYOB913F72Wo5wboWPA3qDOEB8gXzfVXxwhRydDVJ4a2qfS0VTbp/av3Jl
sQ5NuX1KPh3eT5wh/ZQ9kuC+Goc5YuXL0TdN2q5M58r+z1GWj4HYYF3j+zw1
qZNu6YTUPuSjHW7fzpjSDo+qQyq37yQPE/ql70cqWEcu46Y+8J3y2wx/tFg/
rYJkMja/SuX2xJ7HIJ82YtzLIPlgfRuIt1fplE5w+5idrkzPsv6Obc6/DxuH
xhxiUnxoLsBBDBTtGTtC/4q6+iQeItT3OkKfjHa4fU67CVX1j78O8WN+LJMb
z8eMGTCXRe7wK+V3P+6UQ/t3tFPGHBlIQUq5fTBXU9/DPgXfh7/HuHrT59fx
mlwZrao71Tfz8xDS9Sl2wBhSuH1Mh/ncPpYPQtye2NUQddxec/vwGmyKrL3A
RdHN5AXAdqc1bJ+X5OhskMpbU/tcCppy+9T+lSuLdWjK7cnLUwXs9pIXfJuZ
DzJf9H0uqrh9U32T2nZlOpf36R7iR2Lw+4ef2yy1Tuq+L1cnNOlDPtrh9u2M
Ke3wqDqkcvtO8jChX/p+pILceFX9UcB2z3XkxwKs2yquoswfLUQ3uf1vfvOb
0nmdgH8B1yi/jOwV3bbbN9Wz6FPs9qy58d3Em9MPYutgcAjVW2hPr0JdfcIf
sHHFDuJjfbTD7XPaTYjVPzbncP6DvZLcB8pHIm7KdX6cFDIN52F85jrtvdhO
GbvB7VPL7YP+zVo45/G7wK+7LN6q6fNjvAa/MdllcmXUuP2/wT16tmIRld8M
XhL6QcR4SY7OBnXt26TPpSLGm8jTGeZ0aNq/cmWxDnV1JKTwWOQI2dV1vq+I
H9PRCW7ftO3KxjxyK6lcsTUrQNyurmEu0aROUr4vRyc07UM+UmU0pk/aGVOG
Mrfv1lhp3L45xO3Js1UF4r+4zvc9Y52Q38jVFgM+7Pj4SQd1k9vDvTlPPHUZ
2AuVaxRLJJkoi/sAWmPqFbcnnkFzLdZDyTuLP3TV+rDyUJGfOAbWAnhfzCen
rD6boB1un9NuQqz+8Q9F58biJ+C0XE9OQoD8kps6BGMp/idcS921U8ZucPvU
codA33KO+So884wzzujI84nLCXkNvIm1bSFHRo3b/xtaN/X97ZUbjpwSIRQv
Kl5CjhK4fVOdDerat0mfS4V4E7kXBWKQLr/88gHX5fSvHFmsQ0ofACk8Frnj
Gnzqw3GJHJU+t6cPY6MSmtZH07YrG/Moi2Q4zLkRPo91QD/up5/cPqcPCaky
GtMn7YwpQ5nbd2usNG7fHOL2+GCEfpw+yI9Bn/Tz1Wt9kxi90JYLyIPt2waV
jy/mF+XHgMRkUvHZZbYWbAKydcTGR61l8hytUeDrolj4mE2cZxJny3lyAIdQ
npYy+6dkNeZfq7imcNxRbBNjL/0U34k6UDbuYe02dj0xWWEZ6+qzCfwYwqY5
X3LaTYjVP2NVGX+SzUvzNHgO+YJj4xo2G9q+3TLmyEAdUssdws8JQa7isv0+
mj5fegCdLdD30RlCjoxW1Z1iq8J8jUA+1bm6XnktYj7pVTrM7wcxnw7F0lZx
e+y/IfDPkF8Ue7gA6lC+1yGXQq+Jd+BXBe+CJ9LeTXU2qGvfJn0uFcpx7ucv
I2Yk3Fsqp3/lyGIdUvoAUE6YMFeCD/zry/gRZZOMYVNhfgLvEZrWR9O2k86N
5SRR2bAdxOZFytMT8uiUOkn5vqY6IbcPCakyGtMn7Ywp7fCoOqissVxeoBs8
TOiXvh+pELeXrou1h/qen39NUH/GnsdaHqDPEPtFPAr5T+EIxGwz/+da7OTY
ozV3/+ijj1rrAhysk7E3Gf2J9efHHnus1QfJYQz/jdnZmXewjgj38PeHY+8F
fFrwbdHYKDC+EZPCOcoq8C3+HhrsH8UaKzYdfQ9x3pzD14HcXYo7gpOjFzVe
o0uZN5HDlfGfdVD5z+PfQC4E4owEfHL0Xg58c8jfjH80+Y75hjCmH3s512I3
8nMZMWdBR2HvAU3qsw7cw3fhf6+ykr+KfAjkF01F03arqn+NVegO/1nIJHN+
ZFI6RTZMbKL+GP/kk0+6OvPtVU3L2K4MVKFJuUNU5SLIfT59iDZApriG8Q85
DP0+UmW0qu54NnWn/F30FWzkyKLkgrFYcgEXYbxJAbk+aAfFHZNPhPGRMqbo
MNpf/YA+wXuJe+d7GO/1PcyP0CW+H7Pv5+zb/eD1yu0c5myUvyC2NpWD+iEP
hfYaR8bgAv64l6Kzm7Rvkz6XCq3bE+tN/VMm/xtCGSG3U5P+lSqLqairI9oa
Pas8kcgYOksy4sO3zSML4snsF6Q9DcUVyUcCL8/VN6ltF+pc5pr4peucwD5W
nOdf2bj5dvyv+Z11cOmUJnXSLZ2Q24dSZLRKn4DccS+HR9UhLCtrvPgLKGd9
N3lYv/T9SIe4PXVCDg3sOawjMj9CFqlL2pO9Wsv2q2bPdWSa/o69A93I2rHi
tWhT/Dz5nfZGX8BVWaOm/Xi+znHwf8qBbuB5XMs9nENmmD+zT3gMyBU8XLoC
Xci7kY2yPZ/5Xfv28e2MeZRB+9P6PBs9yhqcvgedSNmQV62NkhuZ8vtlRu5Y
S8NmQZ/knO7lb/oKoD9pLZDzjOvaP9Hf3wa/Ph/0X9aFdR32I74dPe6vGTat
zyqwtuB/C4faD1losk9ck3arqn/kmLonlz4yyfey3wXPY/3V96nERsE7iSHh
GewLw296lr9PUNMytiMDdWhabh/IL/0t5jPSzvNZF2XuSX3wvczxsCH5SJXR
qrrDDzhWd9h14FQxPcN8JgXYDfVens1z+GbGvSodBvg91GHcy7hFXca+x8+T
qXGNvUHRQay3Y+enH/E3tqkQcFLaiGdxoKtoA3Q3dkfqkWcynoa5+Ot0dpP2
bdLnUsE8XZyP8iOz/lyx3f6VKotNUFVHcC7KJ84j+UH3wslCsA6gnAqsqStP
DrHvvIf7qRNyxautc+ojte18navys/aH/Pj+5vAt9vWlzbgefsy7qBfWpHzO
3qROuqUT2ulDdTJapU+EJmNKOzyqDmFZqV/qULksu8nD+qXvRzqY86HnBeZn
7HmKjxnzQ2LuwvzXMWBHxgaE3X8ozJvoP8wzaf/UHA3UBXqK+2SDZw9DnsEa
O89s4oPZFPAA9Ctrbc8+++yg8/RR4iJkt2FeFoL511Bqh6bIaTcf1BFtBtDN
PAd7V6wu0D+yITEPIRcJ9oMqbtyJMraL3HID7T/fjedT3+yLQb2U2QHAcJfR
biD0t8duRV6bcO+eGJBH6h17b1if6O5wjU9oqrPL2rdJn2sK5K+bctJpWUzt
AylgrFHZ/D4JsLk3WRstQ7faDtlibYqyl+XEHErI7UOgEzLa7zGlWxip32Uw
NIHW0+p8U1lf4To/j5jBEIL1Sji5wNiNDaVJ/kNDb1AXS2swGAwGg2H4AX89
xvdYLLgP9o/iOuNohjJgj2PNnLVN5aQj901VvldD/6CYfdZIDAaDwWAwjAyw
Bsu+eIzxG2200aBcG8RrideTR7ZqndAwuoFPmXKrsK7Pmii+XGEOB0N/QR9n
DyXFqOFHSkybrV8bDAaDwTByQO4C4vaJC8H3npg64mkZ/4lpJJdDN/3+DSMD
xAoSXzTbbLO5fy+77LJ+F8kQgP5MjA3xkuTlor/jn0P+C4PBYDAYDCML8Hfi
kMhVgF8F/tIGQxMQf0ccXkqcrcFgMBgMBoPBYDAYDAaDwWAwGAwGg8FgMBgM
BoPBYDAYDAaDwWAwGAwGg8FgMBgMBoPBYDAYDAaDwWCI4+OPPy6WWWYZt6cO
OeDIBTeSQc6b559/vt/FGPbYc889i4UWWqiYZZZZip/97GdDbh+vfrXzfvvt
16oX9qC97bbbel6GXHzxxRfFrbfe6vbdGm4gn9U+++zT1qE8WENdtg2GbqBT
OnO49R/2Dl9qqaWKueee2+W6XnLJJftdJIOhbbDHzvHHH18sssgibu8W9mcc
qTjttNPcN44zzjjFG2+80e/iDGtce+21xU477VSMNdZYrk5vuummfhephX62
8w033FDsuuuurb2Qrrnmmp6+Pxc//PBDMfXUU7syb7jhhv0uTmOw/xRl55hh
hhmKlVdeudh0003dXnNwDJ1j/N52222LjTfeuFhppZVa36w9xsBQlm2DoRvo
pM4cbv3ngw8+KI455phizBxjXHnnnHPOfhfJYOgYnnrqqRHP7bHNaRwvs6fO
N998xRNPPNHjkvXvve1i1llnHXL6O6Wdu4255pprWHH7L7/8sph44oldmVnD
K8NQldMLLrjAlf3II48ctF/0RRdd1JKH++67b8A59p/daqut3LlHHnlkwLmh
KNsGQzfQDZ3ZTv/ph55BVxu3N4w0vPzyyyOe23/22WfOJonfxD/+8Y9B53/8
8cdikkkmKR599NGelqtf7+0EsIMONf5T1869APsaDyduD9g3d+2113Zr8zEM
ZTmF02Ovp4whLr/88hZvefjhhwed/+qrr4pJJ520uO666wb8PhRl22DoBrqh
M3P7T7/0zC233GLc3jDiMBq4fR3uvvtuVwe91in9em8nYPwnjuHI7eswlOV0
5513LrbbbrvouTpuD4g5Ov300wf8ZrJtMOQjt//0S88YtzeMRIx2bv/9998X
Cy64YM91Sr/e2ykY/4ljpHH7oS6n6667bnHCCSdEz6Vwe/zyDzjggAG/mWwb
DPnI6T/91DPG7Q3dwh//74/FOeecU2y22WbFWmut5eLNH3vssei1+JTiF7f/
/vsXq6++erHDDjsUV1xxxSBf0xjIKQHn4F7iaF988cUkbo//G2vfa665ZrHB
BhsUV155ZSu3RBM8/vjjbrw95ZRTigMPPLB49dVXW+eIZ7v66quLM844ozjs
sMOKO++8s3WOPB7X//Z6V0eU47zzznO/v/POO8XZZ5/t6uvUU0+NxgLxjdQP
53nna6+95n5n/ZH4xyWWWKI1/p988snFvffe646HHnpo0LNeeOEFVzbqgHY6
+OCDXS6AMrthDDnvBW+//XZx1llnuThB+MwhhxxSvPXWW8nv9fGnP/3JxT3x
vMMPP9yV51//+pfzyTjxxBMd18FPg3jrMoT6m7ohLgnZ4jdiNAX09oMPPuhi
O8jH8MwzzzgfZ7/8lInfnn76aXcgK0JKvZe1cwjWfe+44w53Df1nyy23dPFk
X3/99aBr8dmgbTbZZBN3Lb6pDzzwQGXd5nJ7ZJx2OPfcc4ujjz7afYdfZsYf
/Mfpt5Qdf3GBuqK9TjrpJFf/6BPuQU8ceuih0TYBPIPf6U+8k3oQmsrp3//+
d+f7TizdqquuWmy++eauzLy7TKY7Ab4bHRZDCrenbOG5JrIdApm55JJLXNzu
Kqus4u4pK18ViPOjj5555pmuDdGHtOlVV13l/Cdo29APqem76W/EfyPbtBft
W9Xnm+i/1HGqHd3eFL0uUyfHzVj/vvnmm10bMBZQXl8ueTd9GlmhX37zzTeD
npuqM9HXXLP33ns7HYTeIM8e9TdmzJhi/fXXHyCLTfpP7niYglRdH3J7+gB+
envttVdSO+eMzU15XFPu0SnZE3LGwtEOdMVEE03k8jbAsy688MJi6623drKG
rPhAhpjbEvu27777OllgTZqce/iccj4G2pTryOFBTPjuu+/u5hFTTjllq0/F
uD19GLsW5xmv0R/I7QQTTOByULz//vuNvhUdwHvUh88///zWOTgL36Fz/rcj
p+TpVPw9uarQu5Sf8tE/+P/4449f3HjjjQPeiR7mnJ4rzkXfm2222dyh3CbT
Tjtt6zfqxQflwxcQPXH//fe7/Bz0K+77xS9+kVwHTd8L56ZPUeeLLbaYkxf0
zdJLL12MPfbYg2yOKaAdyXmqOpl//vnde6ebbjrne0lbTzjhhMVkk03m+FEM
0t/IIHnP4LQHHXRQseKKK7rf+U166s9//rPLMUZ59U5k+Ljjjms9jzbUOQ5i
UkFqvZe1sw/klTrk/BprrOF4NDbfmWeeuRh33HGd/hReeeUV915kjfGM5+G/
ob5QpidzuT0yTh+WjNMWArx5xhlnLMYbb7zW98H9hPXWW8+1lc4xVs0zzzyV
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
tw26po7HGAyjCaeddprT3eOMM07xxhtvDDr/9ddfO73ONbvttpvbo1S/s18S
+1q/+uqrXS8n+Xj33ntvV44JJpigeOWVV7r+ToNhqAKbKnvS0B823HDDfhdn
VOLaa68tdtppp2KsscZy7XDTTTf19P3kKYeDzzXXXO792Fs6gSOPPNI9b731
1iu+/PLL1p7UF154YUee3wt0on/0s337LVtDDezXuOuuuzq+QX1cc801A87X
8RiDYbRhn332cX2CIzYXxn4Q04/33ntv676LL764J2VFX2Of4p2bbLJJT95p
aAbWcp544ol+F2PEA8418cQTu74w77zz9rs4IxLwiZVXXrn2Ojh1P/nXzTff
3DFuj21+/PHHL8Ydd9yW3yVrA1NOOWXxzDPPuL9T66WfSO0fKfqqW+3bz3cP
V2geG3L7Oh4zlDAc+o9h+AP/eXg7a17/+Mc/Bp0fM8cY11/uuuuuAb//85//
LFZcccViySWX7Knv/SGHHOLKw77Z3377bc/ea6gHayus4z/66KP9LsqowGWX
XVasvfbabi3a0HkcffTRTr/VAZ+YfvKvu+++u2PcnlgqnjXTTDMN+B0/HSG1
XvqNuv6Rqq+60b79fPdwxq9//esot6/jMUMJw6X/GEY2sNfQlz744IN+F8Xh
3Xffba1TXnrppf0ujsGDOIZxe8NIADxitHF7PavKdz+1XoY6UvVVN9q3n+8e
zijj9sMJI6X/GIY3xO0//PDDfhelhcUXX9yVyfrH0MH3339fLLjggsbtDSMC
t9xyS7KO6Tf/6iW3b1IvQxlN9FWn27ef7x7uGO7cfqT0n5EOfBMvuOACF/Oy
6qqrFptvvrlru/3337946KGH3DXkDyMu5qyzzioOP/xw52vF+ibrhCeeeGJx
wAEHuLVDxaiW4auvviouueSSYtttty1WWWUV9w7yk5Xhj//3x+Kcc84pNtts
s2KttdZyfvOPPfbYgGtefPFFl+fm1FNPLQ488MDitddea5178MEHnU89vi+y
kfM3B/6d559/vovjIr6Va2Ng3fGOO+5wz1599dWLLbfc0sW8EIfbDi666CJX
JuJq3n///Ub3dqI9aIuTTz7Z+fzzXfj6PfDAA9FrqS/iEY4//nh3Hb5MxPqw
Lsdv77333qB7HnnkERc3xLORKd4VKw95IK7/7fWunYl/O++889zv77zzTnH6
6ae7tuHeN998s3UPOSOIiaMstN/jjz9eWV/4g/LsNddcs9hggw2KK6+80uVN
Elj/pA6XWGKJlr8j75SsqB80fS7rRLTTmWeeWRx66KHFnXfe6eTpqquucuuu
+FTydypS6zTnvU37ZhnoF1dffbWTQd790ksvud/5Df9M/OPgXt99950b62lv
5Ig+JeCnhizS15999lnnI823v/32261r6AP8hv8FR+izUNc2VXJ39tlnO12D
TsmNaaOPUM/UI+1Fjiz0FL/76EY56CtHHHFEMdFEEzlZhltJljli65ch/3rh
hReKY445xpWf34gTKkMnZCeF29e16eeff+6+76ijjnLPmmOOOVrfjIzk1EsT
SG7RR8gt73z44Yddn0CG4cD8yzn+z/gGsDlxz3P/+1zrvqr+kaOv2mlfH71+
dydkK4Xj+EjhHX75UsdRIcbtq3hMp3QEssd1jKnwD2Ts448/drppzJgxxfrr
r185HuX0n1Q9mIKcuh6twMd85plndvNv5IyxEvmZccYZXdvBDQBypTxiHPPP
P7/r29NNN53zD6O/TDjhhMVkk01WXH755dF38WxiSMn9BP+kfckHxfPo5yGQ
WWSIPAHwV7jc1ltv7a7fdNNNW9ch17LLh/2FPjTbbLO1ciTMMMMM7m8d4vwc
J5100qAywLnJV8n5NdZYozj33HOLE044wdUZcVroqFx88803zleRZ/N9TdBu
e5Cfh3cz76aPU2fLLLOMexb3+uMlWHTRRVsxXRzMg7h/2mmndX8jL35f3Wab
bYrxxhuvOOigg9w4wNhEWciDxpzKB+M1eUnlo6QyTT755K69aWueRRvC315/
/XUnQ6uttlqx++67F1NNNZW7b6+99hr0neguyqLvot6IdSBHEXnINKd66623
WjKhHAZ8m36jbnOee91117k2Ub1RRvgt36vfGLdS0KROm763ad8sA/yMvFO0
yXbbbVcsv/zyrl2RD/oe/J5nkn+WcYDfVN8+p2OuSPnVbzmQv1NOOaV1jfJN
6eAdTdomJnfoPnQJ9zMW8X9iMm+88cbkOgDMQdCplHnfffd19bnzzju7+uWb
/TlKN8qxyy67OLnlfTwTufH1HvIRQvxLbY/uRNaIR+J3fouNx52UnTJun9qm
lIXvU64CZEvfjF7MqZcmQG6nmWaaVlty0Efpr8xHxIk40J9nnHGGu4/5ti/L
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
IZrY9v7al4jZX13KDpTJQZM2HQbbHhmVDS/Zxx6hfiXP8mOzHkc/idG1bZ/a
vin06t5dy1aKjdPE7mg6jra17XN1hGJ/F1lkkbF4evY9YXegs+vyG4bU9Z82
erCMpnU9WUHn+HvwWPPGlqXNqKvwvX4ptiRzKc5hLzZgi6nuaYc66INlc9Mq
urTtqQftG435GppCPAn2Gftg/vSnP419L72SGpsqmrQHfUrfYfP5MR5+XHtT
2548QpzDc4brcf207bX/Lve92LHxingpxWA2uW5b275pndbdN7dv1sHYid+L
MQNZYX2b/VRVMVwptj1juOa/5GhizwH6IYxNbtI2XdrU+GF1fmx9Cej3OsfP
SdEv2564qJj9kmt/dS07ZXLQpE2b2PZl9dIG2fDoJ+QB3zxzEOlZYkrQv9j1
ZeNME9ve11eiX7Z9F/fuUrZSbZxcu6PNONpv2544JNZNeTZiV5A79CnxnMrD
mkNd/2mjB2O0qevJCn4E8pWGUHesWVFf/v63OluSWBaNwX58t3IlHnnkkdHf
cQ/6OG1DXJvaipjaGMhquKewS9seqBu+J/9VDPL8EiuYKk+Ui/VZ+hixZj7k
3uVe+BR8m7+OJu1BOfibPh76rLVnSP2EGAjGJ5Fi2zMGcQ45vUK0P0p2KHvl
FUPdtW0vXwVx2rE9nMAY5OfcAY1X5BkS2BXKJdrkum1t+6Z1mnLfnL5ZBXkW
5KfBD0SObtak6n6X+s4i5TsjFy0+XHJAhzRpmy5tap5VfYQ+HUO5Xejr/j7q
Xtj2rLWHYzC2kvKF+jSx/bqSHSiTgyZtWidTOfWSmvc9BnpS7UYc3cYbbzx2
TOMrtifruGX5SVJt+zJ9JXpp2/fi3l3JVqqNk2t3tBlH+23bk3+C+mUtifHz
4YcfbrVXsK7/tNGDMdrU9WQFuWfNEzs1BH8gMeA+shWY92FvhWj/EH3ZvyY5
AfietZRYPhf2SCjOjX6mvJQxu5rf4/cO41e0vzwWH6/8LrF89PJ7kufDR+uC
6F3y+4Wwdys1Ng+7GhlGNpHFED+vAnPiVJq0B7FqfEcdhtAO6ifklEav8q4k
oXos86XQNop/C/s08RkaC/CR0A+pD5WbNQ2OodNj9aNyxdZhFZPr2/boC63n
+3H4Al2I/gnlSL/xc/VSv3pfSpPrKl9N7hoCtKnTlPvm9M0qiKtUn6UOYteK
oTwgdfdgXJUMUB+xtd4mbVMld/7+tFSbWn2ItbiY3aHcFOE8retygHQYa/EC
vYU/I0T2V6zetN8xtL+6kh0ok4MmbaprleUWTq0X4uDQ/8TANYW1LLUd8SVC
eaU0Xy2jrn/U6SvRpH3r6OW9u5KtVBsn1+5oM47KVonF4FbZMU11BPJLu7C+
QnmavDfKJ6X/NNWDMdrU9WRFvmn2Sfv9h3xi2Ay8G8hHtiQf1hGVk4y2I4+S
7MzYOgzvLNBcDx+ffsd6PffybV5kU++u4R2Dkg3Wj5AJ7q3v2JPN3mm9T4G9
3/ye4+w95H1yso3Qp7o3vkXWkdD/HMOngn2CfAjJDfN7fOBAPdEn8b+T370O
3rOi+/Ne3DKU6z58D1QVTdrDn+fiX1E9Euug9w5Jt5B3Cns5rEf2/1JXsXfz
Kr4I/4Pm49iajF/oaZUVPcU6GzqXff3IGseIO8Hnq9++9tprrg5VZnKWsbaB
D4LnZRyRjwBdTZuqDfk/+6i4JvkxtZeT3AisdSCLod5RznTWKzlGG4d5ZlKv
SzmoJ+3Toi3IVaDyp5Jbp7n3zembVfh2DB/WjIhDoK7IS0w7SrbV7pJT1rQo
Y1nsJ7+TLw8faBmpbZMid/xez0JcFPonxQet98Dwr/xjtAnvw+R7yiF928ty
4JOgXum36HRkhuf34z/oQ6xrqw+x5566Yg8zZSeeQXsmiF9A1/o+5rayE8oB
/nl8MNgqTdtU12L8YF8K80DftkupF9D7jfj47wnNQTaq4m8EdaW4T/aO1tVL
Wf+o01dt27eKXt+7C72UY+Pk2B1NxtHQVmHdgXtSrio7pq2OILbe18uSJ/oa
eUmxc3LeI5Xaf3L0YBVN6nqywxyR9W3yb2Gr8h4AviNOlnWNMG+LbEn6C+3D
bzgfvSv/RiwHMdAerOUo1os5H+1Cn/bX9AT+WWw1xe5iw3APbGA/ZxJ9Tu9g
xa9Mf6X89BXm9fjDOcb8XO9qQDa5Dufpd8g5Ps9w//Dpp5/u9BX9netxDfaf
pO6xXX311V2dla0tCt4HrXyVzItTaNoeXF/7HtmTqD3n5A1gzZHr0G+Jg6Cu
eW5sNNWj6or3gIegg5En+j4f+i/lYQ2Ba7GngPvSH5kj8c492oR65drcg3sp
jy3f65jakHbjuZBdtb3KxT39PJnoS8Ye5Ihz8CFxDXwz/jxOMHbKJqaM1EMs
Fjbluuhb6VD/2ag79HEquXWae9/cvhmDsUHxQfQnfCx6p6T/nk7leuW6anfO
p4zSO2XQh7hG3XvGU9qmSu7Qe7R7KHfIWspaNmMxOfVoD+6B7qJv02asy/nz
q16WA+jP3Jd78HvGct9uRnZifYj1f3xqlFs6kn/5m7m9aCs7vhz4zx/mQEpp
09i10P/o7nC/Z129AH5mZBKZ412YTWA+TX1ip4bwXlbqLRb3k9o/6vRV2/at
otf37kIv5do4qXYH5I6jvq3i1wf6rMqOaasj8Ifxe/oBcxf0Mv9qzZcPv/Pz
CdeR0n9y9GAduXU92cE/onkTc2jy1THPLsvFGMZ381v29vGbVF8zegwfOHmS
UmLLkW18xsxT28Q+toFnyymzD/MI5pcpoFdYg01dd2/THuhNPZMvB4DvpCzm
MBXajbg+5txhnWEHtl0XzIW5AHJEmWLrsyH0h5T2zr1uG3pdp7l9U1AH6Fn8
6rF3TzDGYBvJv8I8tgnYcCn5V/1y9attYtAe+Jypz7JccP2AsY46wMfWKx3a
VHZy6bJNU+sFH0mYkykH+kRsLsacPceeqiJVX/WCXt+7jWzl2jgi1e7o9Tja
FuXtx+cf2ryUnb1/rINyDnPNHFL7T1d6cNjrepRJycti9A9rD2MY0HpwuB89
hJz0nJeS88wwhgVic8J35hjGKEDMMesPVT5y5jn4vfG9GJMTxm7F9hqDx9rD
GAaIs0UOyVdYBXlYOa/rd0YYRq9g/yv2keXXM0aRqVOnulgV7ReMQSw/8Zpd
54A1hh/WO8jntfbaa7uxmXgpYj/0vmajv1h7GMMEdo/WdTfffPNpchkRlya7
HpntdzyWYTQBm4dY73APlmGMCuxLUG579pr6cWzoYfbZEn9P7H9qzgRj4kD+
YOxHZIB8UvzLnpaq3F1G77D2MIYRckSTy4d9XsTek5sU2cRvxP418luY/9MY
FdjvZ/n0jFGHfDrs5ca+Z/8suT7Z+6pcC+Q3KHvHlGEYhmEA9jt7plhLYsyw
vAWGYRiDh3yV5FJlj3BuLmbDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMIxB8Je//KW48cYbi7/+9a8DK8NB
Bx3k3sO60EILufeK/OxnPxtYWXrN66+/XqyyyirFUkst5fLYf+lLXxp0kXpC
P+RqGGS3imEvX1OeeuqpYqWVViqWWGIJl+v+61//+qCL1Dn77rvvmE7ivROT
7b27k0VPGaPLoPTrRNB/E3VsMv7JP/7xD/fuA94tudlmmw2sHLy3ifeJ8D4c
ynLVVVcNrCy95t133y1OOOGEYtlll3XPynsmJhr9kKthkd0yhr18bSCHMu8A
Wnzxxd3zfeUrXxl0kTrn6quvLnbfffdiuummc8943XXXDbpIfWUy6CljdBmk
fh11/TeRxybjn7z99tvFbLPN5toY/8ygUV+ZyLa9ePjhhyfsmJkiV8zn1lpr
rZ7eo5fUlX/Q5esH119//UiObWLppZcuHnzwwcpzeLbJaNuLiaynjOGlrm8O
g34dVf03DHVn9J5LL7202Hjjjd37JgcN77afLLb9448/PqHHzDq5OvbYY4tv
fOMbPb1HL0kp/zD1rV5w6623juTYBry7kXe133fffZXnse4+mW37ia6njOEj
tW8OWr+Osv4bdN0Zkwuz7ScPtHVb236QjHr5u2CUxzaV3Wz7aia7njL6T2rf
HDSjrP8Mo5+YbT85uOGGG9yzj6ptPOrl74pRHds++uijYpllljHbPoHJrKeM
/pPTNwfNqOo/Y3T5+OOPiwsuuMDtBVt33XWLbbbZxtkj3/ve94q7777bnfPh
hx+68eq8885z8QWnnXba2O/ZQ/2Tf/9Jcc455xTf//733Tnw0ksvFWeffbbL
IXHqqacWzz33XGU5Hn30UXfe/vvvX1x44YXunuRf2HXXXYspU6YU3/nOd9z6
m6iz7d95553i4osvLnbaaadinXXWcc/D2NOU3/3X79wzbr311sVGG23knuv+
+++PnvvJJ5+4/D3cc/3113fP8OMf/9h9X8fLL7/snonfsj/tN7/5TdKYSbwh
9b/hhhsWm266aXH55ZcX77//fvLz0Y7EhZ977rmujWkLQb0jE7QLZTrkkENc
+4gHHnjArdv98Ic/dOWmrvgNdXDEEUe475Af9uX4VMnV888/Xxx99NHFpz71
Kffs2E2/+MUvxj6vvPJK0nNV3aNN2etILX/TvnX66ae7vnLyySe7ewlyGfzo
Rz8qDjjgALeHi+erout+Ukbd2JZSjn7qGuwG+sOKK67oys2Hulb7STf6hLb9
Y489Vhx33HGNZSgV6o6ybbnllk7f0PZ33nln9Nyu5L2pnsopEzHKhx12WHH4
4Ye7dvfLhL6jv5A3jfHrb3/7W+n17733Xpd/gbphfKOu2P9bBu125JFHOj2K
rqcM5D7aeeedx52XMna2AR3BPu0zzzzTtc3Pf/5zVy9XXHGFe27azB8TRepY
kPKcyDr98qSTTioOPvhgJ2vsD6XtKQNtVrcPJadMwDPdfPPNbpyhzbbbbjun
F9977z13/O9//3ty36zSr0888URxzz33uH0iv/zlL10Zw37DGI98cpz5wx//
+MexYzm6M6b/6EPEuXBt//7/8z//M839f/Wfv3L/f/XVV2vrug7q8corr3Tt
iVz99re/dd/zHfvCpiw6xZW3qu4++OADV1bKRNnRqfSzF198cewc6orvHnnk
EfcJY3rqZKIrfT8ZeeONN4oFF1zQzX3pq7QD9Tj//PM7OUSnADpmvvnmG8tN
48sn7UPeM+WIwD/JNeacc85ixx13dPLO/2eeeebi2muvnaYM6Mdvfetb7rfk
iuI3X/ziF10uudlnn93pGfZnc/yWW24Z+12Vbc9zkG+KHJnoJOxqctRxPmNt
LsgRNhr7xY866ihnO+2www7ueltttdW4c5Ft6pP9JwceeKC79x577OHKQh36
su+DTHMedUzf2nvvvd08grqTDouNmfQ/6ozjjC/0BcbCWWaZxeXk+8Mf/pD0
jLQj5VM7zjPPPGPHaCNkYqaZZhrTpb5tvckmm7i20jHGtyWXXNK10aGHHlqs
scYa7nvawJ/fVMnVnnvuWSy88MKu3jjGvflbn2uuuSbpuaru0absdaSWP7dv
YYsiB8gfssd1p59+eqc3n3nmGXe/9dZbz8nPXHPN5X633377RcvYdT+posq2
Ty1HP3UNfVxtpbbhXH1HnwyRba/yt5WhFLBPiDeWbKAPyUcpfRDaT23lvame
qiIsEzYs+/amTp3qdKj2KH/zm9905++2225OPzG261nRzYz5IbQxfYRnwx7E
RuFetDlzhxDmKdQnduUdd9xR3HTTTU4uuMfcc889dl7q2NkGdATPqXqhH2N7
0Qf0HbalyBkLUp9z+eWXLz7zmc+M3Y+6p335Hh3EddUXY/Ol3PGJv7k252+w
wQbO13TiiSe6up5xxhndfOSFF15I7ptV+pX5ni93fNBDAhuYcuoY17jkkkvc
sVzdGdN/+BbC+9PezF10f9pIx5DjtnEKlIP2ZWygvVdbbTWnT5Fb6gn7nnt9
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
xkg/P1jO2NkG2fbkYimjyViQ+pxQZ9vLPvTPySmTL185+3y6su1Zc9G+WWLI
gRxIYQx8U51Vd39/3yzrTMB6CnOFrmDOgJ7z+xjxA5qP+LnxcsoOmiuqvpgj
sP9GdSmayGkbm2SyQlv6e4lYT6FfYYdQVwsssMC483th27OWyXyRORnrx6xl
MdayZhrGnvnEbHtsG92Hsa0t6O2y+WII+/d175j/FIjl0znK+YM9oXEBXRGj
bMzUnpRwja0NVe342muvDYVtz7ph7h7hYbLtY+Xvp23fdT9JIfZ8TcvRb10T
sx9YKw/34PTbtqftsWdl9/lxJ/4+jC5s+zZ6KpWubXtsI77Htg/jJGO2PWNh
aN/gTya3jnLFyGbPHTvbkGLb54wFOc8p6mx79IvkTbkicspE/TH/4vzYuk0Z
qX0zxT5VedkTDOhOcg37NNVZKfcnlybnsN8E25i5es4aRgrM2/Dbo/doU+Yz
7JXQfKJp2ZnLaL/1XXfd5fokejbMpdvEZjHbPh/Wb8nBHcIYwdoi9eXvreiF
bc/+P8YQZJl+Qy6WMKYuRtleWtZl+Z68vTF4HsaulFgD4g5VbmLHYmAvIMdc
T/qP+X4M7QNnjFRsJsj+IrdGDMX7hGOm/JDo49geGEDH+blT6pD/Jba+TS7b
ftv2xEmEtjE6Vfm0UhmUbZ9a/n7a9tC0nzTN4Vj2fE3K0W9dI/vB91czNl12
2WXjzmsjQ01y36P7uCbzlHBtTnv9ZduzVu7ntmlS1qZ6KpWubXvlziTnToj2
Q8q2JzcMufhoa+Ug9JHuVjx07tgJTd9vkGLb54wFjGupzynqbHv2qnDcj7fP
HZ+oU84nt2YMysteEF8XpPbNFPuUuDb1GfLJcu2Yfmiis1Luzxqc7GPq348P
Cmmih8kBxrWJK2CuTs55Yu3qbKHU924pHy25S/HLk181pInNYrZ9PvQl1khi
fRy/RqijtV86Fn+uHAkxm7AqvwrrpPjPmHezDpgqs9qbHeYNIW8v3zPnJZ91
CHtlUvMlIXusMZXpG65PTiaVgWtzLrE8sf6i/BPhWMNcgO9pizCHGGifEv3B
h/mB1rj8eGqB3KOTc/Lu+XvwQrnQ+MqHfFohGptjZdH+vJhtUyVXWgP1c3Ow
z4ZcFDlU3aNN2etILX/TvuXvpY3F0Ci+MbTtc/sJ+5TIQ4K8E9eQS9nzNemv
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
p0C8Nr5l9pwZ7WC+t/jii7u9s+zxJj9MXY6ItnqYHEnkjWJPKm3Jfmh8Gszd
aGvy/IziupIx3LA3kxxL6I2yPF+GYRhtMV1jGMYwQN7GnHwbXYD9zj3JiYQ/
I8wvYBiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiGYRiG
YeTz5ptvuveiDtu7uQ3DGC54z/dKK61ULLHEEi6XE3mkRhHevXzjjTe6dz+3
Zd999y2+9rWvFQsttJDLrTXK76Hg3eYbbbRRseWWWxbbbrttsfXWWxebbrqp
ywO86667jp3HuznIE7zVVlu58ziffMH8lnf4+ZxxxhnuXM7hepy32WabDVXu
r4MOOmisDcmLXfc+k0HRRf8jVwM5awZZlpT6HoZyDpJRLXc/SZGjLnX9qPDU
U08Vyy67bDHzzDO7nJrkne1Vrv+JNP4NC7Sf3/e//vWvD7pIxgTnlVdeKY47
7jiX85X3Liy22GKDLlI2+DDIuU35sTHbcvXVVxe77757Md1007lrXnfddR2U
cjAwDvIe7G9+85vuWfgwPuy2227FBRdcMHbeb37zG3ce+YJ1HmMI7/kI36XI
mLL88suP1c98883nrjdMtv1Pf/pTlw9b74y56qqrBl2kKG37H+8253czzDBD
8dxzzw2sLHX1PSzlHCSjWu5+UidHXev6UYD3SqCLyamOz37vvfd2z4+N2Asm
0vg3LJAnmHc0aHzl3VmG0Rb05VprrVV5Djp0VMebt99+u5htttlc+ZdaaqnO
rkv/a6rbll566eLBBx/srCxt+fjjj4v5559/zGYvg/fraVzFN1/Fmmuu6d7J
Qq7zYUW6dFhte9G0/x1wwAFjc7Gu1iba6IKy+h62cqboxCak9PtR1rX9okyO
eqXrh5lDDz3UPS/+E+C9z/hn2sxtUuS0zfhnxLn++uvNtjc649hjj61d/73h
hhtGerwhbmTjjTd26/5dwfpZE93Ge3x4b+d9993XWVm64OCDDx6zr+6///7S
83i/HufMPvvsbk5QBu/ku+SSS3pR1M7gHYKjYNs37X/49BjjiWXgnYuDLAuU
1fewlTNFJ+aS2u9HXdf2g6p+2wtdP8ysvvrqri78GJw2a6Spctp0/DPKufXW
W822NzoDPTnRbfte0FS3qf8Om23/+OOPj9n2e+yxR/Qcxgzepa3zkIsYL774
YjHrrLMOfczrRLfth60s/azvtuXs2rZP7ffD1NbDyqj0236gurj99ts7uV6q
nJpt3z1m2xtdoXHEbPt8mui2jz76qFhmmWWG0rYH9kdRtnnmmSfq+8Gfr5gc
PuyTjXHMMccUa6+9dq+L25pRsRGGqf9NdNs+VSfmkNPvh6mth5VR6bf9oEvb
PkdOzbbvHrPtRw/8mGeddZbLM0Kc8uGHH1688MIL05z3wAMPuDXFH/7wh26f
4u/+63dujYwY1COOOMJ9R19qm+Pq+eefL44++mi3/wZZop+yJ1If9nX5hOPN
u+++W1xzzTXFfvvtV5x66qm1+9+I3WMv5oYbbujysFx++eXF+++/37j8lI89
PWeeeaarF/K4UE9XXHGFW9envvj7ww8/dPV13nnnuXV29uyV8eijj7pn2X//
/YsLL7zQ/fb11193+WKmTJni7FiuKULd9thjj7m9cLE2Is6AGN4VV1xxzC4+
+eSTx+r77rvvblwXXVIXl4M/f4cddnD7+KvicojHueyyy6b5/p133ikuvvji
YqeddirWWWcdV1esF3QB16ZOyc+z/vrruxjuO++8s/I3VTYC7XnkkUc6eSUf
0GGHHeZyQuy8887TnPvJJ584meN5uDcywxo533dBk/7H/mfKwPFDDjmkePrp
p6PXfu+994orr7zStT19iXwtwHfEnLO3kzGnTVlErL6HpZy5OjGFJv1+2HSt
yOkP6Mmbb77ZtSf9YbvttnO6lzYM6arfVul6cgb85N9/UpxzzjmubjgHXnrp
peLss892uV9S6jZXBpuQais88sgjToYU93788cePydVbb72Vdc8mcpoz/oXk
jAM5ctf1+PLBBx84WWQsZJ8yNsK9997r2kj88Y9/dN/RHnz8WDC+Z+83cr3N
Ntu4OqU/lxGz7ZFd2ubcc891co2cCvoZ+gJ75YQTTnD9jX4QI1UvMJ6TR4P9
0uuuu64rN/egLofFThkG8H3SnrPMMovLHYIeoW1WXnnlYvrpp3c6wmeTTTZx
9pIf84CdhC5jz8waa6zhvicHVRu7Yc899ywWXnhhl0eM680000zub30YS3z8
8QabmjLuuOOOrr3nnHNOt3fn2muvneY+yBnn8VvkBP2KrqI+8BGTg7EJlA/f
suqJcQ/d+uUvf3nsO/o44zF5WuRrjs2HkWVyPnKcPFSUl7gT8nvxnOgQYoE5
fsstt4z9TroNu4T2qGojdLPqVmXhHvoOnToM+HE59G0fZJk6Z68WMqzz2P/j
UxaPg54jdwMyd9JJJ43VG9dgTGjDE0884WJE8bWi5xjzV1lllTG5K7Ntymx7
9CTXQ1fyvDfddJOTA86de+65p3lefF3s4TvwwAPdczEH4jmRPX8caEqT/oe9
wjG1U2z+wljC88w111zu+VZbbTWX/4J91ZQdm4XfsseiTVlErL6HpZy5OjGF
Jv1+2HQt5PQH7sNYx7ENNtjA2SQnnnhiseCCCxYzzjijs9VEl/22Stdj1zA2
KLcL98POpz5TZbeJDOaQayswZiFDmosit5Kr3DwNTeQ0Z/zzyRkHcuSuF+PL
yy+/7MY86l/6CT1/yimnjJ2DL1DH+CAPgFyhQ6gTbHPscvoydkU4ZoqYbU9b
Il+SXcojlAOD++j+oQ8iRy+88cYbrp8yntG3qFP6ifJs4Es1/on2sDP/Duex
zOc4hhz6sC6m8QU9gt2q+AjZVxxDl7SFvEs5MTn0e3Kf+PYKPhCOISch+Lo5
xjzRh3GS75GhNpAbgOvQp6dOnep0Cf/yHWO1QE+W2fbYsBzz8wqwXoJOIScf
fkX899QVfgEh3YZupX+nthHXHdaYHFBcDrrdj8vBd4Fc4isgZ5fGgDAuh3ic
MMcI+XvRP9j8jOeCPqGcF23yJGtuhk/CR34ocvLHiNkIPBs2yFFHHTXN+fvs
s8+4MYV3xdBH0dnh3r1nn33WnYte5rw2NO1/1K9kMbSZyXlEucO8k7vsssu4
usTW8XPXNC0LlM2lhqmcqToxl9R+P2y6Nqc/MJ9XO7L27EPeGr7HfyW67Lei
Stcz1mq9kTEjtW6bymAOTWwF6Do+KVVOm4x/OeNAjtz1enxhjl3mywLklGPn
n3++e350v/qw/84O1gCw0ZlDsmYUUhWTw/wktO3Fww8/XGrb5+gF5k3IeTin
xuZHLlhPMv7pA0XeaMfYWiRyRz3S1qFdoH6z6KKLTjP3xW7imP9uoabk2vYx
HfKr//zV2DFykAni/yTfrCuFyIZ86KGHGpcfP4furT705JNPuu/JvSHwt8f6
DP3ws5/9rDsWxiuqnlkjjtG0jYbdtvfjcny5xBe9/fbbj/293HLLuXN4Twrz
UUG9hPE4vFeFc8O1ACCOimOrrrpq4zKz3sI1wrx38qWR8zpGbFyU3G6++ebT
nE+f9q8l24T5dwz1L3yRbWjS/4TyGoW/k50TvidF12NcZU26y7JU2SHDUs5h
se2HRdfm9Af0HecSwxju15EO8O31LvutKNP10FQmmspgKm1shUHb9jnjX844
kCN3vR5fQPopFgvEOEBMmaCNJEvhXE99kTloSJVtj++/zLYnBitm2+fqBeSb
+SvxiSHrrbee2fb/H/mU0V9lsGYZsx/Vb3zfs9CaFO/8bEuubY9uCXWPL1fE
ngniBcvkFIid43ibdR7WxrhGVU52KOsz6PBwbiCoX/lRYjRto2G37WNxOfLF
+POf008/fRpfBmu7+E58GUHXlI2nQHw1x1gTaArXIA7T99mAxl7GzRixcZF1
WJWX48QTcB3GL8ZY4ojBl52yfHvMMzX2t4l5btL/qp4RpJ/CNRauoevF4o97
UZZhKuew2PbDomtT+wM6Qs8Y87WiB/AV+rF6XfZbUWUfNZWJpjKYShtbYdC2
fer4lzsOpMpdP8YXuOiii9x18GX5MoxPm/gW1g4EfYFYFj7hvIf3vpT1kRTZ
jdn22O0x2z5XLzA/4W/mkczB2TchHyl13yaubyKh/YZbbLFF6Tnq0+F6qfpN
bG6ndUDarS25tn3Mj1ImV+wT4Dvi07h++CHujOPEfjVFtn1d+av6jGL0md/7
KFaPPUoxmrbRsNv2EMblsMeb9vL11GuvvTYWh6h1dvbqhOMf73+XfLDXLJQD
1TP+gjZ5mVVOYt559wrzPT+nT+zaZePiXnvtNfY7fWg3/FDaCyWfCB/GoRjE
cOmcNmvCTfpf3TNqrApjENg7J/3u7x3vZVmGqZzDYtsPk65N6Q+KQ4jp0iq6
7LeQYh/lykRTGUylja0waNs+dfxrMg6kyF2/xhfWprUv6Iwzzhj7njFvhRVW
iP6GWExkh720xKz7eynZ4xHStW2fqxeIE9J3/oe9P7fddlt2nU1UFHPGPuMy
FEdHzK6P+g3xWyGDtO1z5Eo2M3uOyCdQ9omtQaYi25498VVU9RnFWS6yyCJj
8fTETeLbmXfeeUv3tTdto1Gw7dE7alN80vhmyHURgk6TLwPdR52Q58lH4yIf
9kKVyUFsHTAVfDOK5yW+nTZ95plnxq2z59oIrO2zL8zf5+nGjylT3P4k2l3f
vfrqq9Fy8U5enVOVo6mOJv2v7hmJIUC+fRlmbUFjoZ+PoddlGaZyDottP2y6
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
PznvvPPce3KpZz6/+c1vBl2kbExees9Pf/rT4rvf/a57xxp1fNVVVw26SEbA
AQccMNaPy+ZeSy+9dPHggw9WXoe27YdtD8QYYKtwvy233LLn9xsEDz/8cCe2
PX1wrbXWqj3vK1/5iunBCcChhx7q2nG33XZzf99xxx3Of48/LpeUfj9Z5SZF
bxrpjKqspZR7FJltttkGYtt3WZ/DKC8TjcUXX9xs+yEFPx/jPmssf//736c5
jp/805/+dHHfffdVXueGG27om20Phx9+uLsf8QYffPBBX+7ZTx5//PFObPtj
jz02KU6KmCrTg6PP6quv7trRj8Fp8s761H4/WeWmTm8a6YyqrKWWexSZc845
+27bd12fwyYvExHit8y2H01uvfVW13bDZtv//ve/H1tzu+SSS/pyz37SlW1P
3zPbfvIgXXv77be3uk5qvze5MdoyqrKWWu5RZBC2fdf1OWzyMhEx2340+eij
j4pllllmKG17WGGFFdw9e71/dxB0YdurTcy2nzx0Ydvn9HuTG6MNoyprOeUe
Rfpt2/eiPodJXiYqZtt3A7End955Z/HAAw+4fXKPPPJIcc899xTvvfde8eij
j7o+wb8c4/+/+6/fud+9+uqr7je/+s9fjf0O6Les3Z966qnFIYccUjz99NPu
e9aYidNeccUVx2JKTz755OIXv/iF+9x9993TlC207dkTes011xT77befu34v
9ptdeOGF7p7s5/jDH/7QyTXfeecd96zE8a+//vourpY6j0GdXnrppcUPf/jD
4nvf+56rb9YVib894ogj3HfolbochC+//LLrG5zPPlrapY1t//zzzxdHH320
20/JNdBxajs+7H8OCfXgY4895vZIpzwDdXbxxRcXO+20U7HOOuu431D+JpTV
6fXXX18cdthhLhbrJ//+k3HlIT6T2CPiIy644ILib3/7W+n17733XrcHiLbd
ZpttXFsjq2VQD0ceeWSx6aabFhtttJErA3kXdt5553Hnffzxx+7e7OFad911
3bXpEzxDrL+kQp6Ks846q9hqq62Kb3/72+75X3jhhWnOo0/TtooxPf7448fa
+6233kq6V5N+Pyxy418zpf++//77xV133eX2taAX0ZvIBr8H6oy/0ZfSrawV
QpneDEltu670SAqffPKJuy7XpH7IO8az8L3PX/7yF9fPzjnnnOL73/++22MJ
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
Y2Iz6rbxqJd/ItGVbT9oiGU1277/yOYYRds+RWYmA2rDNrHcqXLQ1LbvJ72U
abPtDcMoY9Rt41Ev/0RiItj2stnNtu8vH330UbHMMsuMpG2fKjOTgba2fY4c
DLtt32uZNtveMKr53X/9rjjnnHOKrbfeuthoo43cPvz7778/eu4nn3ziYoC/
973vFeuvv77bP0hMAt/7sBf/J//+E3dd9hbJ3nnppZeKs88+293j1FNPLd0r
SNziBRdc4PYMrbvuusU222zjxhDue/fdd7tzPvzwQ6fXuDZrwuxBLIProV9O
PvlkF+tAmT/44INa2/idd94pLr744mKnnXYq1llnHXd/8pr5/OIXvyguuuii
4oQTTnCx0tQFz0WZ+O7ll1+e5rrEH1IvG264YbHpppsWl19+efH+++93Xv4q
3n333eLMM88sjjrqqOL3v//92PfEmtBG+++/v6tT6sCvD8pKPfBsTz/9dPZ9
Jypd2PaMU7QtfeOQQw4ZV78PPPCAW0+nral/+i1r3vTHI444wn1Hf2C/XC7P
P/98cfTRRxef+tSn3DNgNyDX+rCH1ie07ZGla665pthvv/0q+7XIlf86qIeb
b77Z1Rl6abvttnOy+95770XPJ7fGWWedVWy11VZuz8Thhx/u5D6kbZ0/9thj
xZFHHumeEd162GGHubwmO++8sztOzBWx6iuuuOLYHgv6uOpdug5S9Qy6l2ue
e+657hjt4dcTbcd+b35DfaFHY9SNC6kyk6On+9UuqaSW56233nLPfMwxx7i6
WHTRRcfqgTidOnLkQIS2PbLGPveyZ09ph5RxtxfPwrjCOVtuuaXrv8j3nXfe
WXkf37Z/88033T0ZG5H3X/7yl6W/S7Htu9ZPhtFvsOHQzeydx8ZjL/8OO+zg
ZB995oOeYx7OHpYDDzzQ2SB77LGHy8E433zzjctFRd/48pe/PLaXH58O4wT9
cccdd3S6gv+z7+jaa68ddx9ilxdccEF3L/bs3Xvvve63888/v7sW9igwdnDf
f/mXf6nsq/fcc4+LfyTub4MNNnD9H7/KF7/4RVfGMtuY+5Iri+c76aST3POS
e4zz0aFiueWWG9vXw+euu+5y9+L6/E25NfdBv/L8fI/uZP7DeDHLLLO4nGZ/
+MMfOit/Feh99lLxmXfeeYvZZ5/d2QnYZp/97GfdeM64TxuRZ+zVV191thv/
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
fZVziGtUnhxyNCBXlIXf8e4cX/ZoE/zrzD2QcXz/5LqhzhknmcP6xNqI/kR7
+uToJ9anaOfwXVeGMSxgO+ATwgdXFz9G/B3zW9Yre2F7oVPlN8B+wueEn6KJ
bvHBt4ie5Tk1x+b9s+gGxjLqIOYzpD7wB/K8Md90UxhLKQvviEzx7TQtfxno
yfB9fj7owqpy0fbYKP6cDiiD9gHjP8LfwoexgjUI34an/MwNGGt0Hh/izdGn
xmBANpBLZKtX8aS58l8Heimnn0rn8YxN5xRlMJdBtoG65B74IlPKhc7rWtdQ
FvSov9+dv4kvoR9rrSwkZ1zoSmZ62S6jVJ5eyEEVvRp3db2qZ2HMUN/1ywGs
OZTt/fBhvsU6QCy+tAld6yfDMIxRRu/DLPv47+0hHqjsPPw3hmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYxuTh/wJavXyM

    "], {{0, 527.}, {759., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFAApJaBSSCxoCCHBcjKzSspCnJ3UoiIjFJgf8LAxcDGwMsgwKCdmFxc4BgQ
4ANSDaNRwbdrDCADGS7rgsyyVUl47+ta5CW7+s+De7PuxmKqRwFcKanFyUD6
DxAnJxcUlTAwMCYA2crlJQUgdguQLVIEdBSQPQPEToew14DYSRD2AbCakCBn
IPsKyGvJGYkpQPYTIFsnCUk8HYkNtRcEOIONzA0tXdzdCLiVZFCSWlECop3z
CyqLMtMzShQcgSGUquCZl6yno2BkYGTAwAAKb4jqzzfA4cgoxoEQy1dhYLB4
CYyneIRYmgQDwx5lBgb+TISY4ixgUH5hYDiYUpBYlAh3AOM3luI0YyMIm3s7
AwPrtP//P4czMLBrMjD8vf7//+/t////XcbAwHyLgeHANwDJbmsr
      "], "RGB", "XYZ"], 
    Interleaving -> True, MetaInformation -> 
    Association["XMP" -> Association[]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{759., 527.},
  PlotRange->{{0, 759.}, {0, 527.}}]], "Text",
 CellChangeTimes->{3.830205352537344*^9},
 CellLabel->
  "In[324]:=",ExpressionUUID->"020a5558-59db-4435-9c09-8218ef1122b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Units", "Subsection",
 CellChangeTimes->{{3.85446428675426*^9, 
  3.854464287306267*^9}},ExpressionUUID->"ba7d73a7-1895-4c15-9556-\
c028d20ffcc8"],

Cell["\<\
\[Lambda] = 8.7 is equivalent to one gigayear in code units
1. timeUnit[8.7] converts a gigayear from code units to seconds
2. timeUnityears[8.7] converts a gigayear from code units to years
3. \
\>", "Text",
 CellChangeTimes->{{3.854467801367208*^9, 3.8544678681735897`*^9}, {
  3.854744593290732*^9, 
  3.854744599132824*^9}},ExpressionUUID->"8b8f8a03-ef09-458a-8b0b-\
7dd3d6a249e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"timeUnit", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"timeUnityears", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"lengthUnit", "[", 
  RowBox[{"1", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"lengthUnitkpc", "[", 
  RowBox[{"1", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 SuperscriptBox[
  RowBox[{"(", 
   FractionBox[
    RowBox[{"8", " ", "\[Pi]", " ", 
     SuperscriptBox["hbar", "2"]}], 
    RowBox[{"3", "*", 
     SuperscriptBox[
      RowBox[{"maxion", "[", "1", "]"}], "2"], "*", " ", 
     SuperscriptBox["H0", "2"], "*", "omegaM0"}]], ")"}], 
  RowBox[{"1", "/", "4"}]]}], "Input",
 CellChangeTimes->{
  3.8544643005148773`*^9, {3.854464351307592*^9, 3.8544643918440647`*^9}, {
   3.8544644629734793`*^9, 3.8544644922836437`*^9}, 3.8544645317772217`*^9, {
   3.854464566467639*^9, 3.854464595951125*^9}, {3.854464676551235*^9, 
   3.8544647248144693`*^9}, {3.854464785852819*^9, 3.854464822063057*^9}, {
   3.854465056973906*^9, 3.854465058203538*^9}, {3.854465637119545*^9, 
   3.8544656373706207`*^9}, {3.854465840793418*^9, 3.8544658426053*^9}, {
   3.854465920627315*^9, 3.854465942669924*^9}, {3.8544674773659286`*^9, 
   3.854467505809033*^9}, 3.8544676017727833`*^9, {3.8544677970727453`*^9, 
   3.854467798433922*^9}, {3.854467875137779*^9, 3.854467881864079*^9}, {
   3.8547434072039757`*^9, 3.854743446865613*^9}, {3.854744600648027*^9, 
   3.8547446110290823`*^9}, {3.854744809310495*^9, 3.8547448166693296`*^9}, {
   3.854746054488015*^9, 3.854746066724552*^9}, 3.855872583892459*^9, {
   3.855872618523226*^9, 3.855872635913516*^9}, {3.8558726752508383`*^9, 
   3.855872679690488*^9}},
 CellLabel->
  "In[7189]:=",ExpressionUUID->"e8a55bf8-bf5c-49e8-884f-b121876e09e1"],

Cell[BoxData["2.369427842304837`*^18"], "Output",
 CellChangeTimes->{{3.854465933551935*^9, 3.854465942995088*^9}, 
   3.8544674222563562`*^9, {3.854467478101778*^9, 3.854467506239024*^9}, 
   3.8544676026465054`*^9, 3.8544677987654676`*^9, 3.854467882524084*^9, 
   3.854469353087859*^9, {3.854743437662147*^9, 3.854743447294717*^9}, 
   3.854744611638379*^9, 3.854744817914431*^9, 3.854745923946103*^9, {
   3.8547460556546297`*^9, 3.854746067370039*^9}, 3.855872585294438*^9, {
   3.855872621922173*^9, 3.8558726369510736`*^9}, 3.8558726802972603`*^9, 
   3.855872768739703*^9, 3.8558732556989317`*^9, 3.855873557795083*^9},
 CellLabel->
  "Out[7189]=",ExpressionUUID->"fbca445b-94df-4013-b8d6-056f6fbc2b88"],

Cell[BoxData["7.542123068047574`*^10"], "Output",
 CellChangeTimes->{{3.854465933551935*^9, 3.854465942995088*^9}, 
   3.8544674222563562`*^9, {3.854467478101778*^9, 3.854467506239024*^9}, 
   3.8544676026465054`*^9, 3.8544677987654676`*^9, 3.854467882524084*^9, 
   3.854469353087859*^9, {3.854743437662147*^9, 3.854743447294717*^9}, 
   3.854744611638379*^9, 3.854744817914431*^9, 3.854745923946103*^9, {
   3.8547460556546297`*^9, 3.854746067370039*^9}, 3.855872585294438*^9, {
   3.855872621922173*^9, 3.8558726369510736`*^9}, 3.8558726802972603`*^9, 
   3.855872768739703*^9, 3.8558732556989317`*^9, 3.855873557797163*^9},
 CellLabel->
  "Out[7190]=",ExpressionUUID->"45aa6311-b5cf-4716-9093-212e57e6e4ec"],

Cell[BoxData["1.183815846205939`*^21"], "Output",
 CellChangeTimes->{{3.854465933551935*^9, 3.854465942995088*^9}, 
   3.8544674222563562`*^9, {3.854467478101778*^9, 3.854467506239024*^9}, 
   3.8544676026465054`*^9, 3.8544677987654676`*^9, 3.854467882524084*^9, 
   3.854469353087859*^9, {3.854743437662147*^9, 3.854743447294717*^9}, 
   3.854744611638379*^9, 3.854744817914431*^9, 3.854745923946103*^9, {
   3.8547460556546297`*^9, 3.854746067370039*^9}, 3.855872585294438*^9, {
   3.855872621922173*^9, 3.8558726369510736`*^9}, 3.8558726802972603`*^9, 
   3.855872768739703*^9, 3.8558732556989317`*^9, 3.855873557799534*^9},
 CellLabel->
  "Out[7191]=",ExpressionUUID->"34d6408c-5f4e-4624-89c7-84fd3722e3ac"],

Cell[BoxData["38.36085049273944`"], "Output",
 CellChangeTimes->{{3.854465933551935*^9, 3.854465942995088*^9}, 
   3.8544674222563562`*^9, {3.854467478101778*^9, 3.854467506239024*^9}, 
   3.8544676026465054`*^9, 3.8544677987654676`*^9, 3.854467882524084*^9, 
   3.854469353087859*^9, {3.854743437662147*^9, 3.854743447294717*^9}, 
   3.854744611638379*^9, 3.854744817914431*^9, 3.854745923946103*^9, {
   3.8547460556546297`*^9, 3.854746067370039*^9}, 3.855872585294438*^9, {
   3.855872621922173*^9, 3.8558726369510736`*^9}, 3.8558726802972603`*^9, 
   3.855872768739703*^9, 3.8558732556989317`*^9, 3.855873557801345*^9},
 CellLabel->
  "Out[7192]=",ExpressionUUID->"c4279109-58f0-407a-9b41-4c1303c36ed9"],

Cell[BoxData["1.183815846205939`*^21"], "Output",
 CellChangeTimes->{{3.854465933551935*^9, 3.854465942995088*^9}, 
   3.8544674222563562`*^9, {3.854467478101778*^9, 3.854467506239024*^9}, 
   3.8544676026465054`*^9, 3.8544677987654676`*^9, 3.854467882524084*^9, 
   3.854469353087859*^9, {3.854743437662147*^9, 3.854743447294717*^9}, 
   3.854744611638379*^9, 3.854744817914431*^9, 3.854745923946103*^9, {
   3.8547460556546297`*^9, 3.854746067370039*^9}, 3.855872585294438*^9, {
   3.855872621922173*^9, 3.8558726369510736`*^9}, 3.8558726802972603`*^9, 
   3.855872768739703*^9, 3.8558732556989317`*^9, 3.855873557803671*^9},
 CellLabel->
  "Out[7193]=",ExpressionUUID->"cc0c32bf-2a7f-4b79-802c-995e9bfdb651"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.855303082428343*^9, 3.855303156756996*^9}, {
   3.855303203981351*^9, 3.8553032539699183`*^9}, {3.8553032904806643`*^9, 
   3.855303338540654*^9}, {3.85530347115336*^9, 3.855303483144368*^9}, {
   3.855303534742979*^9, 3.8553035786373243`*^9}, {3.8553037905107594`*^9, 
   3.8553038179588947`*^9}, {3.8553038726637363`*^9, 3.85530391042467*^9}, 
   3.8553041530284433`*^9, {3.8553043152654*^9, 3.855304336041916*^9}, 
   3.855306466963533*^9},
 CellLabel->
  "In[7194]:=",ExpressionUUID->"8b70f2f5-22cb-4868-b670-bc332326970b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run in ChplUltra units", "Subsection",
 CellChangeTimes->{{3.855306483204206*^9, 3.85530649989194*^9}, {
  3.855872542218218*^9, 
  3.855872549236476*^9}},ExpressionUUID->"4af41380-c7f7-4b58-ae08-\
8ef5dda34bbc"],

Cell[TextData[StyleBox["1. Dimensionless ChplUltra units\nNFW parameters = \
{417.0  km/s, 36.54 * kpckm, 90.0 * pi / 180, 1.0, 1.0, 1.0} (NO TRIAXIALITY)\
\nleapfrog with dimensionless units\n10 test particles, 1000 timesteps of 1 \
Myr each\nr0 = 15 kpc\nbox potential has units (128 by 128 by 128), ranges \
from (-20 kpc, 20 kpc)", "Text"]], "Subsubsection",
 CellChangeTimes->{
  3.855306518771806*^9, {3.8558725348778963`*^9, 
   3.8558725571867523`*^9}},ExpressionUUID->"459b0aad-e3c2-44bf-9682-\
b567056bf6a5"],

Cell[CellGroupData[{

Cell["Import Coordinates", "Subsubsection",
 CellChangeTimes->{{3.8553065517797213`*^9, 
  3.855306559458014*^9}},ExpressionUUID->"0b1040f5-768c-4bd9-8390-\
2b82479d2d52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bp1pos1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"10", ";;", "20"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos10", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"100", ";;", "110"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos20", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"200", ";;", "210"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos30", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"300", ";;", "310"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos100", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"990", ";;", "1000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos200", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1990", ";;", "2000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos300", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2990", ";;", "3000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos400", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"3990", ";;", "4000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos500", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"4990", ";;", "5000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos600", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"5990", ";;", "6000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos700", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"6990", ";;", "7000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos800", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"7990", ";;", "8000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos900", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"8990", ";;", "9000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp1pos1000", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp1.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"9990", ";;", "10000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.855306586311125*^9, {3.855306680556048*^9, 3.855306692254941*^9}, {
   3.8553067330703287`*^9, 3.855306774338962*^9}},
 CellLabel->
  "In[7195]:=",ExpressionUUID->"89310dd8-0180-4ef0-a177-c2d7da007542"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{{3.855306780930159*^9, 
  3.855306781612678*^9}},ExpressionUUID->"ff27feeb-fc47-4ac5-8303-\
69b0f41c37e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bp1posgraph", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "bp1pos1", ",", "bp1pos100", ",", "bp1pos300", ",", "bp1pos400", ",", 
      "bp1pos500", ",", "bp1pos600", ",", "bp1pos700", ",", "bp1pos800", ",", 
      "bp1pos900", ",", "bp1pos1000"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "Automatic"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<initial\>\"", ",", "\"\<after 100 timesteps\>\"", ",", 
       "\"\<after 300 timesteps\>\"", ",", "\"\<after 400 timesteps\>\"", 
       ",", "\"\<after 500 timesteps\>\"", ",", "\"\<after 600 timesteps\>\"",
        ",", "\"\<after 700 timesteps\>\"", ",", " ", 
       "\"\<after 800 timesteps\>\"", ",", "\"\<after 900 timesteps\>\"", 
       ",", "\"\<after 1000 timesteps\>\""}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<kpc\>\"", ",", "\"\<kpc\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "->", "\"\<Position at each timestep\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.855306785446416*^9, {3.855873236123608*^9, 3.855873248272277*^9}},
 CellLabel->
  "In[7210]:=",ExpressionUUID->"be978d2b-d6cb-4532-adb4-aefd8f222f16"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.809017, 0.587785}, {0.309017, 0.951057}, {-0.309017, 
         0.951057}, {-0.809017, 0.587785}, {-1., 
         1.22465*^-16}, {-0.809017, -0.587785}, {-0.309017, -0.951057}, {
         0.309017, -0.951057}, {0.809017, -0.587785}, {1., -2.44929*^-16}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -1.48616*^-7}, {0.809017, 0.587785}, {0.309017, 
         0.951056}, {-0.309017, 0.951057}, {-0.809017, 0.587785}, {-1., 
         1.50132*^-7}, {-0.809017, -0.587785}, {-0.309017, -0.951056}, {
         0.309017, -0.951057}, {0.809017, -0.587785}, {1., -1.50132*^-7}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -4.51914*^-7}, {0.809017, 0.587785}, {0.309017, 
         0.951056}, {-0.309017, 0.951057}, {-0.809017, 0.587786}, {-1., 
         4.5343*^-7}, {-0.809017, -0.587785}, {-0.309017, -0.951056}, {
         0.309017, -0.951057}, {0.809017, -0.587786}, {1., -4.5343*^-7}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -6.03563*^-7}, {0.809017, 0.587785}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809017, 0.587786}, {-1., 
         6.05079*^-7}, {-0.809017, -0.587785}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809017, -0.587786}, {1., -6.05079*^-7}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -7.55212*^-7}, {0.809017, 0.587785}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809017, 0.587786}, {-1., 
         7.56728*^-7}, {-0.809017, -0.587785}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809017, -0.587786}, {1., -7.56728*^-7}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -9.06861*^-7}, {0.809018, 0.587785}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809016, 0.587786}, {-1., 
         9.08377*^-7}, {-0.809018, -0.587785}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809016, -0.587786}, {1., -9.08377*^-7}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -1.05851*^-6}, {0.809018, 0.587784}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809016, 0.587786}, {-1., 
         1.06003*^-6}, {-0.809018, -0.587784}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809016, -0.587786}, {1., -1.06003*^-6}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -1.21016*^-6}, {0.809018, 0.587784}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809016, 0.587786}, {-1., 
         1.21167*^-6}, {-0.809018, -0.587784}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809016, -0.587786}, {1., -1.21167*^-6}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -1.36181*^-6}, {0.809018, 0.587784}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809016, 0.587786}, {-1., 
         1.36332*^-6}, {-0.809018, -0.587784}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809016, -0.587786}, {1., -1.36332*^-6}}]}, {
       
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        PointBox[{{1., -1.51346*^-6}, {0.809018, 0.587784}, {0.309018, 
         0.951056}, {-0.309016, 0.951057}, {-0.809016, 0.587786}, {-1., 
         1.51497*^-6}, {-0.809018, -0.587784}, {-0.309018, -0.951056}, {
         0.309016, -0.951057}, {0.809016, -0.587786}, {
         1., -1.51497*^-6}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"kpc\"", TraditionalForm], 
       FormBox["\"kpc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Position at each timestep\"", TraditionalForm], 
     PlotRange -> {{-1., 1.}, {-0.951057, 0.951057}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"initial\"", "\"after 100 timesteps\"", "\"after 300 timesteps\"", 
       "\"after 400 timesteps\"", "\"after 500 timesteps\"", 
       "\"after 600 timesteps\"", "\"after 700 timesteps\"", 
       "\"after 800 timesteps\"", "\"after 900 timesteps\"", 
       "\"after 1000 timesteps\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.855306787913642*^9, 3.8558727692591333`*^9, 
  3.855873256045162*^9, 3.855873558153965*^9},
 CellLabel->
  "Out[7210]=",ExpressionUUID->"3fdd06e1-af78-4f3f-b9e7-a4911f7df796"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["2. ChplUltra units\nNFW parameters = {417.0  km/s, \
36.54 * kpckm, 90.0 * pi / 180, 1.0, 1.0, 1.0} (NO TRIAXIALITY)\nleapfrog \
with dimensionless units\n10 test particles, 1000 timesteps of 1 Myr each\nr0 \
= 15 kpc\nbox potential has units (128 by 128 by 128), ranges from (-20 kpc, \
20 kpc)", "Text"]], "Subsubsection",
 CellChangeTimes->{{3.855872791838718*^9, 3.855872796557272*^9}, {
  3.8558735810912533`*^9, 
  3.8558735812148542`*^9}},ExpressionUUID->"97eb5833-aaf8-4c7c-94cc-\
ade197171e63"],

Cell[CellGroupData[{

Cell["Import Coordinates", "Subsubsection",
 CellChangeTimes->{{3.85587281120956*^9, 
  3.855872813000516*^9}},ExpressionUUID->"32836fc0-a5cf-4ca8-be82-\
7df5f455c494"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bp2pos1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1", ";;", "10"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"10", ";;", "20"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos10", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"100", ";;", "110"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos20", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"200", ";;", "210"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos30", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"300", ";;", "310"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos100", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"990", ";;", "1000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos200", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"1990", ";;", "2000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos300", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"2990", ";;", "3000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos400", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"3990", ";;", "4000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos500", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"4990", ";;", "5000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos600", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"5990", ";;", "6000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos700", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"6990", ";;", "7000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos800", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"7990", ";;", "8000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos900", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"8990", ";;", "9000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bp2pos1000", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/clairerecamier/Desktop/Github/Streakline/TestingHDF5/\
mathematica/bp2.csv\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Data\>\"", ",", 
       RowBox[{"9990", ";;", "10000"}], ",", 
       RowBox[{"6", ";;", "7"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.855872815652964*^9, 3.8558728394305973`*^9}, {
  3.855873182914423*^9, 3.8558732170734673`*^9}},
 CellLabel->
  "In[7211]:=",ExpressionUUID->"120109fe-b780-40a0-99d0-6ac51f7229c3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Position", "Subsubsection",
 CellChangeTimes->{{3.8558728212209377`*^9, 
  3.8558728219502277`*^9}},ExpressionUUID->"fbef4b92-cd87-4315-9d54-\
29b10f92582d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bp2posgraph", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "bp2pos1", ",", "bp2pos100", ",", "bp2pos300", ",", "bp2pos400", ",", 
      "bp2pos500", ",", "bp2pos600", ",", "bp2pos700", ",", "bp2pos800", ",", 
      "bp2pos900", ",", "bp2pos1000"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", "Automatic"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<initial\>\"", ",", "\"\<after 100 timesteps\>\"", ",", 
       "\"\<after 300 timesteps\>\"", ",", "\"\<after 400 timesteps\>\"", 
       ",", "\"\<after 500 timesteps\>\"", ",", "\"\<after 600 timesteps\>\"",
        ",", "\"\<after 700 timesteps\>\"", ",", " ", 
       "\"\<after 800 timesteps\>\"", ",", "\"\<after 900 timesteps\>\"", 
       ",", "\"\<after 1000 timesteps\>\""}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<kpc\>\"", ",", "\"\<kpc\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "->", "\"\<Position at each timestep\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.855872833700263*^9, {3.855873221724752*^9, 3.855873224496681*^9}, {
   3.8558732672054977`*^9, 3.855873286185408*^9}},
 CellLabel->
  "In[7226]:=",ExpressionUUID->"60daedd3-1b6e-4572-b388-137383a0ee43"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.316352, 0.229843}, {0.120836, 0.371894}, {-0.120836, 
         0.371894}, {-0.316352, 0.229843}, {-0.391032, 
         4.78876*^-17}, {-0.316352, -0.229843}, {-0.120836, -0.371894}, {
         0.120836, -0.371894}, {0.316352, -0.229843}, {
         0.391032, -9.57753*^-17}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.197558, -0.200149}, {0.273953, -0.0492182}, {0.250406, 
         0.121054}, {0.131268, 0.246683}, {-0.0397315, 0.277948}, {-0.196948, 
         0.201928}, {-0.279235, 
         0.0471387}, {-0.253757, -0.12609}, {-0.131195, -0.250651}, {
         0.0398947, -0.278414}, {0.193719, -0.2012}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-0.337943, 
         0.196165}, {-0.394203, -0.0362118}, {-0.300664, -0.258585}, \
{-0.0945692, -0.382041}, {0.142835, -0.361083}, {0.323755, -0.205569}, {
         0.379627, 0.0259592}, {0.288609, 0.245728}, {0.0865949, 
         0.371689}, {-0.153069, 0.35446}, {-0.337043, 0.198531}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-0.100728, 0.296831}, {-0.262145, 
         0.181442}, {-0.321062, -0.00605382}, {-0.258582, -0.187608}, \
{-0.106675, -0.294917}, {0.0784903, -0.297358}, {0.232367, -0.194163}, {
         0.299031, -0.0208333}, {0.252383, 0.164212}, {0.100889, 
         0.289212}, {-0.0971884, 0.296089}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.218471, 0.00869394}, {0.165443, 0.138098}, {0.0483504, 
         0.208778}, {-0.0830789, 0.199216}, {-0.18342, 
         0.121305}, {-0.224374, -0.00155452}, {-0.187361, -0.129332}, \
{-0.0804209, -0.21505}, {0.0611421, -0.219831}, {0.179257, -0.134248}, {
         0.22004, 0.00428903}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.176719, -0.337345}, {0.34028, -0.168073}, {0.370956, 
         0.0626619}, {0.262805, 0.265172}, {0.0610355, 0.367617}, {-0.166216, 
         0.334843}, {-0.333785, 
         0.174997}, {-0.375476, -0.0554626}, {-0.272637, -0.268007}, \
{-0.060525, -0.378372}, {0.174834, -0.33927}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-0.0639583, -0.338568}, {0.147998, -0.311923}, {
         0.296828, -0.167969}, {0.333734, 0.030318}, {0.253646, 0.211094}, {
         0.0829622, 0.316492}, {-0.121886, 0.305526}, {-0.281252, 
         0.17395}, {-0.334883, -0.0311787}, {-0.252295, -0.231148}, \
{-0.066458, -0.336541}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        PointBox[{{-0.199352, 
         0.0408328}, {-0.185069, -0.0831647}, {-0.108696, -0.17272}, {
         0.000264561, -0.205896}, {0.112647, -0.174696}, {
         0.192444, -0.0811425}, {0.201896, 0.050235}, {0.129535, 
         0.16233}, {-0.00196744, 0.205685}, {-0.131647, 0.155769}, {-0.198728,
          0.0456009}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.0141192, 0.357623}, {-0.20156, 0.299516}, {-0.340017, 
         0.128687}, {-0.355719, -0.0884326}, {-0.243681, -0.274651}, \
{-0.0409479, -0.364862}, {0.180937, -0.317525}, {0.33134, -0.146538}, {
         0.350612, 0.0822738}, {0.227558, 0.276579}, {0.0168911, 
         0.358708}}]}, {
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        PointBox[{{0.236548, 0.268689}, {0.0263607, 0.363836}, {-0.191911, 
         0.312228}, {-0.333583, 
         0.146303}, {-0.354574, -0.0648986}, {-0.251398, -0.252192}, \
{-0.056665, -0.34965}, {0.154542, -0.312306}, {0.313362, -0.156727}, {
         0.347156, 0.0674805}, {0.237779, 0.265961}}]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     1, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"kpc\"", TraditionalForm], 
       FormBox["\"kpc\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Position at each timestep\"", TraditionalForm], 
     PlotRange -> {{-0.394203, 0.391032}, {-0.382041, 0.371894}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"initial\"", "\"after 100 timesteps\"", "\"after 300 timesteps\"", 
       "\"after 400 timesteps\"", "\"after 500 timesteps\"", 
       "\"after 600 timesteps\"", "\"after 700 timesteps\"", 
       "\"after 800 timesteps\"", "\"after 900 timesteps\"", 
       "\"after 1000 timesteps\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.009166666666666668`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False", ",", "False", ",", "False", ",", 
                 "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.855873256259894*^9, 3.855873558447817*^9},
 CellLabel->
  "Out[7226]=",ExpressionUUID->"2995fd52-1791-402e-a1ba-84e7017868a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1438, 793},
WindowMargins->{{-9, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.3 for Mac OS X ARM (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6ddeb892-739d-4ada-b22a-e673f44421f1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 414, 6, 123, "Title",ExpressionUUID->"c931c52a-68fe-445c-8f64-a91b3fa82f53"],
Cell[997, 30, 313, 7, 77, "Abstract",ExpressionUUID->"3504eb77-1f9a-4253-9468-eb03843009ad"],
Cell[1313, 39, 212, 5, 37, "Input",ExpressionUUID->"8f98b52c-f546-4273-9440-8e00d37800d9"],
Cell[CellGroupData[{
Cell[1550, 48, 368, 6, 67, "Subsection",ExpressionUUID->"89dd1872-44b1-443d-8d54-64dc03481b76"],
Cell[1921, 56, 443, 9, 44, "Text",ExpressionUUID->"83e95a03-78fb-445f-8c5c-800adf1ada75"],
Cell[CellGroupData[{
Cell[2389, 69, 702, 16, 64, "Input",ExpressionUUID->"51eb6429-e29e-440c-ac6b-a5b53f6bcdb2"],
Cell[3094, 87, 8808, 229, 70, "Output",ExpressionUUID->"051dfe92-cce0-4fa4-9a22-a0caa1a8bbf5"]
}, Open  ]],
Cell[11917, 319, 368, 7, 73, "Text",ExpressionUUID->"99e64e25-a21d-42da-87cf-ed92271b0475"],
Cell[CellGroupData[{
Cell[12310, 330, 304, 7, 37, "Input",ExpressionUUID->"80eabb33-a776-4383-8763-23cce2e8c19e"],
Cell[12617, 339, 71999, 1188, 70, "Output",ExpressionUUID->"987bd5ef-86c4-4650-acbd-b39ff797334e"]
}, Open  ]],
Cell[84631, 1530, 201, 3, 44, "Text",ExpressionUUID->"8492077e-bc7b-4be9-82f0-015b669a8559"],
Cell[CellGroupData[{
Cell[84857, 1537, 430, 11, 37, "Input",ExpressionUUID->"0af91a90-190c-40f6-8a2d-c2f7173e35cf"],
Cell[85290, 1550, 7924, 184, 70, "Output",ExpressionUUID->"137fd626-f2e6-4492-b343-11a256f91c7f"]
}, Open  ]],
Cell[93229, 1737, 345, 7, 73, "Text",ExpressionUUID->"d9add0ef-bbdc-48ca-92fb-b3e61e809e46"],
Cell[93577, 1746, 409, 11, 57, "Input",ExpressionUUID->"e6d50065-1329-4e89-8396-9f65329095a0"],
Cell[CellGroupData[{
Cell[94011, 1761, 539, 15, 46, "Input",ExpressionUUID->"fe63075c-1d22-4011-84eb-ba7ec6ef8f2d"],
Cell[94553, 1778, 9001, 213, 70, "Output",ExpressionUUID->"5ec68ce9-7f71-40cc-9395-ac6971a1360b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[103603, 1997, 174, 3, 46, "Subsection",ExpressionUUID->"6bb6f2f8-2b9f-49ec-a3f8-7e6b77c18dbe"],
Cell[103780, 2002, 315, 6, 44, "Text",ExpressionUUID->"992abe15-fc03-47d1-bb89-a6d376cb7bab"],
Cell[CellGroupData[{
Cell[104120, 2012, 380, 9, 64, "Input",ExpressionUUID->"90d668ee-f055-477f-84d6-22b9a4d14441"],
Cell[104503, 2023, 2546, 41, 70, "Output",ExpressionUUID->"08eaef51-6912-4fe3-9d43-8dc6b8f2bcc8"]
}, Open  ]],
Cell[107064, 2067, 287, 6, 44, "Text",ExpressionUUID->"907583f6-3143-446c-a4f2-d434911833c7"],
Cell[CellGroupData[{
Cell[107376, 2077, 223, 4, 37, "Input",ExpressionUUID->"ecff3d90-7880-482e-9a74-a5bef7c3bd52"],
Cell[107602, 2083, 5007, 95, 70, "Output",ExpressionUUID->"a72faa22-c683-43bd-a9f9-b939dec86795"]
}, Open  ]],
Cell[112624, 2181, 278, 6, 44, "Text",ExpressionUUID->"d9ae5eb8-c51b-4216-87be-00a6bcf7fce4"],
Cell[112905, 2189, 801, 18, 64, "Input",ExpressionUUID->"7567ae34-8299-4126-9e36-a9a02abce8e1"],
Cell[113709, 2209, 286, 6, 44, "Text",ExpressionUUID->"05aa0d47-c57e-4752-8019-fe5b0e86206c"],
Cell[CellGroupData[{
Cell[114020, 2219, 637, 17, 93, "Input",ExpressionUUID->"6f539ce5-4fa1-4521-a28f-cd437d44030e"],
Cell[114660, 2238, 9133, 219, 70, "Output",ExpressionUUID->"eac3b346-ba25-43d3-8a79-8b2eab88ccdd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[123842, 2463, 162, 3, 46, "Subsection",ExpressionUUID->"d0e107d5-d933-4a8f-a23d-993f5cbe4139"],
Cell[124007, 2468, 203, 3, 44, "Text",ExpressionUUID->"6c8ca5e6-2ffa-4671-aff6-3622ac897ad1"],
Cell[CellGroupData[{
Cell[124235, 2475, 176, 3, 56, "Subsubsection",ExpressionUUID->"08858886-beaf-468e-b6f5-d707440728a0"],
Cell[124414, 2480, 2720, 80, 316, "Input",ExpressionUUID->"d1f52f3f-27f9-4c0d-b821-1d4b9b0b68fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[127171, 2565, 179, 3, 56, "Subsubsection",ExpressionUUID->"150e99ec-bba6-4917-a86b-87b619bca771"],
Cell[127353, 2570, 2254, 61, 189, "Input",ExpressionUUID->"ec01f915-9ac7-4406-a10d-87db3be27fd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129644, 2636, 233, 4, 56, "Subsubsection",ExpressionUUID->"b39238c4-687f-40d5-b0a6-4519e9345148"],
Cell[129880, 2642, 1148, 28, 116, "Input",ExpressionUUID->"be7113b6-da85-4595-9ef2-0bc40cd1f61c"],
Cell[CellGroupData[{
Cell[131053, 2674, 263, 6, 37, "Input",ExpressionUUID->"c3eacc78-0549-4177-95d4-afd6ac90bc30"],
Cell[131319, 2682, 241, 4, 42, "Output",ExpressionUUID->"e53f831d-aa60-482c-9024-ce84ae9f148e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[131597, 2691, 245, 5, 37, "Input",ExpressionUUID->"62cb53e1-ad03-4edf-9628-635476cac155"],
Cell[131845, 2698, 247, 4, 42, "Output",ExpressionUUID->"177d310e-8114-47b8-acba-ac4675db8f95"]
}, Open  ]],
Cell[132107, 2705, 216, 4, 37, "Input",ExpressionUUID->"605ea4ab-2469-4048-abb4-5fcd3b8f0d2c"],
Cell[CellGroupData[{
Cell[132348, 2713, 736, 21, 67, "Input",ExpressionUUID->"c4611a54-96ed-41ff-ad09-3370082eca35"],
Cell[133087, 2736, 550, 11, 35, "Message",ExpressionUUID->"9dcef6a3-27f2-4288-a1ea-d6391bc12f15"],
Cell[133640, 2749, 358, 8, 42, "Output",ExpressionUUID->"7f87398b-f816-49b9-8024-24b323eac3db"]
}, Open  ]],
Cell[134013, 2760, 274, 6, 44, "Text",ExpressionUUID->"53794e21-55cb-453c-8b4e-45426f479ff4"],
Cell[134290, 2768, 120205, 1977, 678, "Text",ExpressionUUID->"020a5558-59db-4435-9c09-8218ef1122b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254544, 4751, 152, 3, 67, "Subsection",ExpressionUUID->"ba7d73a7-1895-4c15-9556-c028d20ffcc8"],
Cell[254699, 4756, 395, 9, 131, "Text",ExpressionUUID->"8b8f8a03-ef09-458a-8b0b-7dd3d6a249e0"],
Cell[CellGroupData[{
Cell[255119, 4769, 1744, 33, 175, "Input",ExpressionUUID->"e8a55bf8-bf5c-49e8-884f-b121876e09e1"],
Cell[256866, 4804, 711, 10, 43, "Output",ExpressionUUID->"fbca445b-94df-4013-b8d6-056f6fbc2b88"],
Cell[257580, 4816, 711, 10, 43, "Output",ExpressionUUID->"45aa6311-b5cf-4716-9093-212e57e6e4ec"],
Cell[258294, 4828, 711, 10, 43, "Output",ExpressionUUID->"34d6408c-5f4e-4624-89c7-84fd3722e3ac"],
Cell[259008, 4840, 707, 10, 42, "Output",ExpressionUUID->"c4279109-58f0-407a-9b41-4c1303c36ed9"],
Cell[259718, 4852, 711, 10, 43, "Output",ExpressionUUID->"cc0c32bf-2a7f-4b79-802c-995e9bfdb651"]
}, Open  ]],
Cell[260444, 4865, 576, 9, 37, "Input",ExpressionUUID->"8b70f2f5-22cb-4868-b670-bc332326970b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261057, 4879, 218, 4, 67, "Subsection",ExpressionUUID->"4af41380-c7f7-4b58-ae08-8ef5dda34bbc"],
Cell[261278, 4885, 518, 8, 194, "Subsubsection",ExpressionUUID->"459b0aad-e3c2-44bf-9682-b567056bf6a5"],
Cell[CellGroupData[{
Cell[261821, 4897, 171, 3, 45, "Subsubsection",ExpressionUUID->"0b1040f5-768c-4bd9-8390-2b82479d2d52"],
Cell[261995, 4902, 5889, 169, 428, "Input",ExpressionUUID->"89310dd8-0180-4ef0-a177-c2d7da007542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267921, 5076, 159, 3, 56, "Subsubsection",ExpressionUUID->"ff27feeb-fc47-4ac5-8303-69b0f41c37e7"],
Cell[CellGroupData[{
Cell[268105, 5083, 1351, 29, 142, "Input",ExpressionUUID->"be978d2b-d6cb-4532-adb4-aefd8f222f16"],
Cell[269459, 5114, 47110, 972, 754, "Output",ExpressionUUID->"3fdd06e1-af78-4f3f-b9e7-a4911f7df796"]
}, Open  ]]
}, Open  ]],
Cell[316596, 6090, 527, 8, 194, "Subsubsection",ExpressionUUID->"97eb5833-aaf8-4c7c-94cc-ade197171e63"],
Cell[CellGroupData[{
Cell[317148, 6102, 168, 3, 45, "Subsubsection",ExpressionUUID->"32836fc0-a5cf-4ca8-be82-7df5f455c494"],
Cell[317319, 6107, 5865, 168, 636, "Input",ExpressionUUID->"120109fe-b780-40a0-99d0-6ac51f7229c3"]
}, Closed]],
Cell[CellGroupData[{
Cell[323221, 6280, 163, 3, 45, "Subsubsection",ExpressionUUID->"fbef4b92-cd87-4315-9d54-29b10f92582d"],
Cell[CellGroupData[{
Cell[323409, 6287, 1403, 30, 142, "Input",ExpressionUUID->"60daedd3-1b6e-4572-b388-137383a0ee43"],
Cell[324815, 6319, 47200, 975, 751, "Output",ExpressionUUID->"2995fd52-1791-402e-a1ba-84e7017868a8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

